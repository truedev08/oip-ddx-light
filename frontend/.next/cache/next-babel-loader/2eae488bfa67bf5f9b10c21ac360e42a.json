{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport withStyles from 'react-jss';\nimport { connect } from 'react-redux';\nimport SwitchViewer from '../components/views/dumb/switchViewer/SwitchViewer';\nimport RecordMap from '../components/views/dumb/recordMap/RecordMap';\nimport PaymentRow from '../components/views/dumb/paymentRow/PaymentRow';\nimport SideBar from '../components/views/dumb/sideBar/SideBar';\nimport { getBalance, getExchangeRate, tip, purchaseRecord, proofOfPurchase } from '../redux/actions/Wallet/thunks';\nimport { setActivePage } from '../redux/actions/Interface/creators';\n\nvar styles = function styles(theme) {\n  var _ref;\n\n  return _ref = {\n    root: {\n      display: 'flex',\n      flexDirection: 'row',\n      height: '100%'\n    }\n  }, _defineProperty(_ref, \"@media (max-width: \".concat(theme.breakpoints['md'], \"px)\"), {\n    root: {\n      flexDirection: 'column'\n    }\n  }), _defineProperty(_ref, \"content\", {\n    display: 'flex',\n    flexDirection: 'column',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flex: 1\n  }), _defineProperty(_ref, \"recordViewer\", {\n    display: 'flex',\n    flex: '1 0 700px',\n    flexDirection: 'column',\n    maxHeight: 850 // height: 1000\n\n  }), _defineProperty(_ref, \"recordsByPublisher\", {\n    display: 'flex',\n    flex: 1,\n    minHeight: '50%',\n    flexDirection: 'column',\n    '& h3': {\n      paddingLeft: 30,\n      color: theme.palette.greyscale(0.8)\n    }\n  }), _ref;\n};\n\nvar Record = function Record(_ref2) {\n  var classes = _ref2.classes,\n      recordPayload = _ref2.recordPayload,\n      daemonApi = _ref2.daemonApi,\n      registered = _ref2.registered,\n      platformData = _ref2.platformData,\n      tip = _ref2.tip,\n      showOnlyVerifiedPublishers = _ref2.showOnlyVerifiedPublishers,\n      setActivePage = _ref2.setActivePage,\n      getExchangeRate = _ref2.getExchangeRate,\n      getBalance = _ref2.getBalance,\n      autoPay = _ref2.autoPay,\n      purchaseRecord = _ref2.purchaseRecord,\n      proofOfPurchase = _ref2.proofOfPurchase;\n  useEffect(function () {\n    setActivePage(null);\n  }, []);\n\n  var _useState = useState({\n    proofTxid: '',\n    data: '',\n    paid: false\n  }),\n      purchasedData = _useState[0],\n      setPurchasedData = _useState[1];\n\n  useEffect(function () {\n    if (autoPay.purchased) {\n      var txid = recordPayload.meta.txid;\n      var found = autoPay.purchased.find(function (purchase) {\n        return purchase.txid === txid;\n      });\n\n      if (found) {\n        var _txid = found.txid,\n            payment_txid = found.payment_txid,\n            terms = found.terms;\n        proofOfPurchase({\n          txid: _txid,\n          payment_txid: payment_txid,\n          terms: terms\n        }).then(function (data) {\n          setPurchasedData({\n            proofTxid: payment_txid,\n            data: data,\n            paid: true\n          });\n        })[\"catch\"](function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, []); // get records by the same publisher\n\n  var _useState2 = useState([]),\n      recordsByPublisher = _useState2[0],\n      setRecordsByPublisher = _useState2[1];\n\n  useEffect(function () {\n    var current = true;\n\n    var getRecordsByPublisher = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var meta, q, res, _res, success, payload, error, results;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                meta = recordPayload.meta;\n                q = \"meta.signed_by:\".concat(meta.signed_by);\n                _context.prev = 2;\n                _context.next = 5;\n                return daemonApi.searchOip5Records({\n                  q: q,\n                  limit: 100\n                });\n\n              case 5:\n                res = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(_context.t0);\n\n              case 11:\n                if (res) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 13:\n                _res = res, success = _res.success, payload = _res.payload, error = _res.error;\n\n                if (success) {\n                  results = payload.results;\n\n                  if (results.length > 0) {\n                    if (current) {\n                      setRecordsByPublisher(results);\n                    }\n                  }\n                } else {\n                  console.error(error);\n                }\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 8]]);\n      }));\n\n      return function getRecordsByPublisher() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    if (recordPayload) {\n      try {\n        getRecordsByPublisher();\n      } catch (err) {\n        console.error(\"Failed to get records by publisher: \\n \".concat(err));\n      }\n    }\n\n    return function () {\n      current = false;\n    };\n  }, []); // get flo balance and exchange rate\n\n  useEffect(function () {\n    var current = true;\n\n    var getXrAndBalance = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!current) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 3;\n                return getExchangeRate();\n\n              case 3:\n                _context2.next = 5;\n                return getBalance();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function getXrAndBalance() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    getXrAndBalance();\n    return function () {\n      current = false;\n    };\n  }, []);\n\n  function isVerified(_x) {\n    return _isVerified.apply(this, arguments);\n  } // check if record includes a payment template\n\n\n  function _isVerified() {\n    _isVerified = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref5) {\n      var pubAddr, templateName, apiUrl, localhost;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              pubAddr = _ref5.pubAddr, templateName = _ref5.templateName, apiUrl = _ref5.apiUrl, localhost = _ref5.localhost;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return daemonApi.isVerifiedPublisher({\n                pubAddr: pubAddr,\n                templateName: templateName,\n                apiUrl: apiUrl,\n                localhost: localhost\n              });\n\n            case 4:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error(\"Failed to verify pub address: \".concat(pubAddr, \": \\n \").concat(_context3.t0));\n              return _context3.abrupt(\"return\", {\n                success: false,\n                error: _context3.t0\n              });\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 7]]);\n    }));\n    return _isVerified.apply(this, arguments);\n  }\n\n  var TMPL_PAYMENT = 'tmpl_3084380E';\n  var payment = false;\n\n  if (recordPayload.record.details[TMPL_PAYMENT]) {\n    payment = true;\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(SideBar, {\n    reroute: true\n  }), __jsx(\"div\", {\n    className: classes.content\n  }, __jsx(\"div\", {\n    className: classes.recordViewer\n  }, __jsx(SwitchViewer, {\n    recordPayload: recordPayload,\n    purchasedData: purchasedData\n  }), payment && __jsx(PaymentRow, {\n    paymentTemplate: recordPayload.record.details[TMPL_PAYMENT],\n    registered: registered,\n    platformData: platformData,\n    paymentAddress: recordPayload.meta.signed_by,\n    tip: tip,\n    purchasedData: purchasedData\n  })), __jsx(\"div\", {\n    className: classes.recordsByPublisher\n  }, __jsx(RecordMap, {\n    records: recordsByPublisher,\n    isVerified: isVerified,\n    showOnlyVerifiedPublishers: showOnlyVerifiedPublishers,\n    autoPay: autoPay,\n    purchaseRecord: purchaseRecord,\n    proofOfPurchase: proofOfPurchase\n  }))));\n};\n\nRecord.getInitialProps = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(ctx) {\n    var reduxStore, query, getState, state, Explorer, txid, response, success, payload, error, results;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            reduxStore = ctx.reduxStore, query = ctx.query;\n            getState = reduxStore.getState; // const isServer = !!req\n\n            state = getState();\n            Explorer = state.Explorer;\n            txid = query.txid;\n            _context4.next = 7;\n            return Explorer.daemonApi.getOip5Record(txid);\n\n          case 7:\n            response = _context4.sent;\n            success = response.success, payload = response.payload, error = response.error;\n\n            if (!success) {\n              _context4.next = 15;\n              break;\n            }\n\n            results = payload.results;\n\n            if (!results[0]) {\n              _context4.next = 13;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", {\n              recordPayload: results[0]\n            });\n\n          case 13:\n            _context4.next = 16;\n            break;\n\n          case 15:\n            console.error(error);\n\n          case 16:\n            return _context4.abrupt(\"return\", {});\n\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x2) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nfunction mapStateToProps(state) {\n  return {\n    registered: state.Platform.registered,\n    platformData: state.Platform.platformData,\n    showOnlyVerifiedPublishers: state.Interface.showOnlyVerifiedPublishers,\n    daemonApi: state.Explorer.daemonApi,\n    autoPay: state.Autopay\n  };\n}\n\nvar mapDispatchToProps = {\n  tip: tip,\n  setActivePage: setActivePage,\n  getExchangeRate: getExchangeRate,\n  getBalance: getBalance,\n  purchaseRecord: purchaseRecord,\n  proofOfPurchase: proofOfPurchase\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Record));","map":null,"metadata":{},"sourceType":"module"}