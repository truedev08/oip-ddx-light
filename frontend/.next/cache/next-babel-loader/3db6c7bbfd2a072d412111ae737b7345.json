{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport withStyles from 'react-jss';\nimport { MdMenu, MdClose } from 'react-icons/md';\nimport useWindowSize from '../../../../helpers/hooks/useWindowSize';\n\nconst styles = theme => ({\n  root: {\n    display: 'none',\n    marginRight: 40,\n    color: theme.palette.background.main\n  },\n  responsiveMenu: {\n    display: 'none'\n  },\n  tableOfContents: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  menuToggle: {\n    display: 'flex',\n    cursor: 'pointer',\n    fontSize: 31\n  },\n  [`@media (max-width: ${theme.breakpoints['md']}px)`]: {\n    root: {\n      display: 'flex'\n    }\n  }\n});\n\nconst NavMenuMobile = ({\n  classes,\n  pages,\n  activePage,\n  setActivePage\n}) => {\n  const {\n    0: isOpen,\n    1: toggleMenu\n  } = useState(false);\n  const {\n    width\n  } = useWindowSize({});\n  useEffect(() => {\n    if (width > 960) {\n      toggleMenu(false);\n    }\n  }, [width]);\n  useEffect(() => {\n    toggleMenu(false);\n  }, [activePage]);\n\n  function handleToggleMenu() {\n    toggleMenu(prevState => !prevState);\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"span\", {\n    className: classes.menuToggle,\n    onClick: handleToggleMenu\n  }, isOpen ? __jsx(MdClose, null) : __jsx(MdMenu, null)), isOpen ? __jsx(NavJSS, {\n    pages: pages,\n    setActivePage: setActivePage,\n    activePage: activePage\n  }) : null);\n};\n\nconst navStyles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute',\n    top: 70,\n    backgroundColor: theme.palette.background.main,\n    width: 175,\n    right: 0,\n    boxShadow: theme.shadows[2],\n    zIndex: 300,\n    color: theme.palette.primary.main,\n    padding: [20, 0]\n  },\n  navItem: {\n    display: 'flex',\n    flex: '0 0 40px',\n    flexDirection: 'row',\n    alignItems: 'center',\n    fontWeight: 'bold',\n    padding: [10, 0],\n    textTransform: 'capitalize',\n    cursor: 'pointer',\n    '&:hover': {\n      color: theme.palette.background.main,\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  pageName: {\n    marginLeft: 20\n  }\n});\n\nconst Nav = ({\n  classes,\n  pages,\n  setActivePage\n}) => {\n  return __jsx(\"div\", {\n    className: classes.root\n  }, pages.map((page, i) => {\n    let displayName;\n\n    if (page === 'publisher') {\n      displayName = 'New Template';\n    } else if (page === 'explorer') {\n      displayName = 'Explorers';\n    } else if (page === 'autoPay') {\n      displayName = 'Autopay';\n    } else displayName = page;\n\n    return __jsx(\"div\", {\n      className: classes.navItem,\n      key: i,\n      onClick: () => setActivePage(page)\n    }, __jsx(\"span\", {\n      className: classes.pageName\n    }, displayName));\n  }));\n};\n\nconst NavJSS = withStyles(navStyles)(Nav);\nexport default withStyles(styles, {\n  injectTheme: true\n})(NavMenuMobile);","map":null,"metadata":{},"sourceType":"module"}