{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/pages/record.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport withStyles from 'react-jss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport SwitchViewer from '../components/views/dumb/SwitchViewer';\nimport RecordMap from '../components/views/dumb/RecordMap';\nimport PaymentRow from '../components/views/dumb/PaymentRow';\nimport SideBar from '../components/views/dumb/SideBar';\nimport { getBalance, getExchangeRate, tip, purchaseRecord, proofOfPurchase } from '../redux/actions/Wallet/thunks';\nimport { setActivePage } from '../redux/actions/Interface/creators';\n\nvar styles = function styles(theme) {\n  var _ref;\n\n  return _ref = {\n    root: {\n      display: 'flex',\n      flexDirection: 'row',\n      height: '100%'\n    }\n  }, _defineProperty(_ref, \"@media (max-width: \".concat(theme.breakpoints['md'], \"px)\"), {\n    root: {\n      flexDirection: 'column'\n    }\n  }), _defineProperty(_ref, \"content\", {\n    display: 'flex',\n    flexDirection: 'column',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flex: 1\n  }), _defineProperty(_ref, \"recordViewer\", {\n    display: 'flex',\n    flex: '1 0 700px',\n    flexDirection: 'column',\n    maxHeight: 850 // height: 1000\n\n  }), _defineProperty(_ref, \"recordsByPublisher\", {\n    display: 'flex',\n    flex: 1,\n    minHeight: '50%',\n    flexDirection: 'column',\n    '& h3': {\n      paddingLeft: 30,\n      color: theme.palette.greyscale(0.8)\n    }\n  }), _ref;\n};\n\nvar Record = function Record(_ref2) {\n  _s();\n\n  var classes = _ref2.classes,\n      recordPayload = _ref2.recordPayload,\n      daemonApi = _ref2.daemonApi,\n      registered = _ref2.registered,\n      platformData = _ref2.platformData,\n      tip = _ref2.tip,\n      showOnlyVerifiedPublishers = _ref2.showOnlyVerifiedPublishers,\n      setActivePage = _ref2.setActivePage,\n      getExchangeRate = _ref2.getExchangeRate,\n      getBalance = _ref2.getBalance,\n      autoPay = _ref2.autoPay,\n      purchaseRecord = _ref2.purchaseRecord,\n      proofOfPurchase = _ref2.proofOfPurchase;\n  useEffect(function () {\n    setActivePage(null);\n  }, []);\n\n  var _useState = useState({\n    proofTxid: '',\n    data: '',\n    paid: false\n  }),\n      purchasedData = _useState[0],\n      setPurchasedData = _useState[1];\n\n  useEffect(function () {\n    if (autoPay.purchased) {\n      var txid = recordPayload.meta.txid;\n      var found = autoPay.purchased.find(function (purchase) {\n        return purchase.txid === txid;\n      });\n\n      if (found) {\n        var _txid = found.txid,\n            payment_txid = found.payment_txid,\n            terms = found.terms;\n        proofOfPurchase({\n          txid: _txid,\n          payment_txid: payment_txid,\n          terms: terms\n        }).then(function (data) {\n          setPurchasedData({\n            proofTxid: payment_txid,\n            data: data,\n            paid: true\n          });\n        })[\"catch\"](function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, []); // get records by the same publisher\n\n  var _useState2 = useState([]),\n      recordsByPublisher = _useState2[0],\n      setRecordsByPublisher = _useState2[1];\n\n  useEffect(function () {\n    var current = true;\n\n    var getRecordsByPublisher = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var meta, q, res, _res, success, payload, error, results;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                meta = recordPayload.meta;\n                q = \"meta.signed_by:\".concat(meta.signed_by);\n                _context.prev = 2;\n                _context.next = 5;\n                return daemonApi.searchOip5Records({\n                  q: q,\n                  limit: 100\n                });\n\n              case 5:\n                res = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(_context.t0);\n\n              case 11:\n                if (res) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 13:\n                _res = res, success = _res.success, payload = _res.payload, error = _res.error;\n\n                if (success) {\n                  results = payload.results;\n\n                  if (results.length > 0) {\n                    if (current) {\n                      setRecordsByPublisher(results);\n                    }\n                  }\n                } else {\n                  console.error(error);\n                }\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 8]]);\n      }));\n\n      return function getRecordsByPublisher() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    if (recordPayload) {\n      try {\n        getRecordsByPublisher();\n      } catch (err) {\n        console.error(\"Failed to get records by publisher: \\n \".concat(err));\n      }\n    }\n\n    return function () {\n      current = false;\n    };\n  }, []); // get flo balance and exchange rate\n\n  useEffect(function () {\n    var current = true;\n\n    var getXrAndBalance = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!current) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 3;\n                return getExchangeRate();\n\n              case 3:\n                _context2.next = 5;\n                return getBalance();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function getXrAndBalance() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    getXrAndBalance();\n    return function () {\n      current = false;\n    };\n  }, []);\n\n  function isVerified(_x) {\n    return _isVerified.apply(this, arguments);\n  } // check if record includes a payment template\n\n\n  function _isVerified() {\n    _isVerified = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref5) {\n      var pubAddr, templateName, apiUrl, localhost;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              pubAddr = _ref5.pubAddr, templateName = _ref5.templateName, apiUrl = _ref5.apiUrl, localhost = _ref5.localhost;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return daemonApi.isVerifiedPublisher({\n                pubAddr: pubAddr,\n                templateName: templateName,\n                apiUrl: apiUrl,\n                localhost: localhost\n              });\n\n            case 4:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error(\"Failed to verify pub address: \".concat(pubAddr, \": \\n \").concat(_context3.t0));\n              return _context3.abrupt(\"return\", {\n                success: false,\n                error: _context3.t0\n              });\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 7]]);\n    }));\n    return _isVerified.apply(this, arguments);\n  }\n\n  var TMPL_PAYMENT = 'tmpl_3084380E';\n  var payment = false;\n\n  if (recordPayload.record.details[TMPL_PAYMENT]) {\n    payment = true;\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, __jsx(SideBar, {\n    reroute: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.recordViewer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, __jsx(SwitchViewer, {\n    recordPayload: recordPayload,\n    purchasedData: purchasedData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }), payment && __jsx(PaymentRow, {\n    paymentTemplate: recordPayload.record.details[TMPL_PAYMENT],\n    registered: registered,\n    platformData: platformData,\n    paymentAddress: recordPayload.meta.signed_by,\n    tip: tip,\n    purchasedData: purchasedData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: classes.recordsByPublisher,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, __jsx(RecordMap, {\n    records: recordsByPublisher,\n    isVerified: isVerified,\n    showOnlyVerifiedPublishers: showOnlyVerifiedPublishers,\n    autoPay: autoPay,\n    purchaseRecord: purchaseRecord,\n    proofOfPurchase: proofOfPurchase,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(Record, \"ENVIgjmloyeXp8Xa0+PJ1Uv1Fic=\");\n\n_c = Record;\n\nRecord.getInitialProps = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(ctx) {\n    var reduxStore, query, getState, state, Explorer, txid, response, success, payload, error, results;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            reduxStore = ctx.reduxStore, query = ctx.query;\n            getState = reduxStore.getState; // const isServer = !!req\n\n            state = getState();\n            Explorer = state.Explorer;\n            txid = query.txid;\n            _context4.next = 7;\n            return Explorer.daemonApi.getOip5Record(txid);\n\n          case 7:\n            response = _context4.sent;\n            success = response.success, payload = response.payload, error = response.error;\n\n            if (!success) {\n              _context4.next = 15;\n              break;\n            }\n\n            results = payload.results;\n\n            if (!results[0]) {\n              _context4.next = 13;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", {\n              recordPayload: results[0]\n            });\n\n          case 13:\n            _context4.next = 16;\n            break;\n\n          case 15:\n            console.error(error);\n\n          case 16:\n            return _context4.abrupt(\"return\", {});\n\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x2) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nRecord.propTypes = {\n  classes: PropTypes.object.isRequired,\n  registered: PropTypes.bool.isRequired,\n  platformData: PropTypes.object.isRequired,\n  daemonApi: PropTypes.object.isRequired,\n  setActivePage: PropTypes.func.isRequired,\n  getExchangeRate: PropTypes.func.isRequired,\n  getBalance: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    registered: state.Platform.registered,\n    platformData: state.Platform.platformData,\n    showOnlyVerifiedPublishers: state.Interface.showOnlyVerifiedPublishers,\n    daemonApi: state.Explorer.daemonApi,\n    autoPay: state.Autopay\n  };\n}\n\nvar mapDispatchToProps = {\n  tip: tip,\n  setActivePage: setActivePage,\n  getExchangeRate: getExchangeRate,\n  getBalance: getBalance,\n  purchaseRecord: purchaseRecord,\n  proofOfPurchase: proofOfPurchase\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Record));\n\nvar _c;\n\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/pages/record.js"],"names":["React","useState","useEffect","withStyles","PropTypes","connect","SwitchViewer","RecordMap","PaymentRow","SideBar","getBalance","getExchangeRate","tip","purchaseRecord","proofOfPurchase","setActivePage","styles","theme","root","display","flexDirection","height","breakpoints","overflowY","overflowX","flex","maxHeight","minHeight","paddingLeft","color","palette","greyscale","Record","classes","recordPayload","daemonApi","registered","platformData","showOnlyVerifiedPublishers","autoPay","proofTxid","data","paid","purchasedData","setPurchasedData","purchased","txid","meta","found","find","purchase","payment_txid","terms","then","err","console","log","recordsByPublisher","setRecordsByPublisher","current","getRecordsByPublisher","q","signed_by","searchOip5Records","limit","res","error","success","payload","results","length","getXrAndBalance","isVerified","pubAddr","templateName","apiUrl","localhost","isVerifiedPublisher","TMPL_PAYMENT","payment","record","details","content","recordViewer","getInitialProps","ctx","reduxStore","query","getState","state","Explorer","getOip5Record","response","propTypes","object","isRequired","bool","func","mapStateToProps","Platform","Interface","Autopay","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport withStyles from 'react-jss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport SwitchViewer from '../components/views/dumb/SwitchViewer';\nimport RecordMap from '../components/views/dumb/RecordMap';\nimport PaymentRow from '../components/views/dumb/PaymentRow';\nimport SideBar from '../components/views/dumb/SideBar';\nimport {\n  getBalance,\n  getExchangeRate,\n  tip,\n  purchaseRecord,\n  proofOfPurchase\n} from '../redux/actions/Wallet/thunks';\n\nimport { setActivePage } from '../redux/actions/Interface/creators';\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: '100%'\n  },\n  [`@media (max-width: ${theme.breakpoints['md']}px)`]: {\n    root: {\n      flexDirection: 'column'\n    }\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flex: 1\n  },\n  recordViewer: {\n    display: 'flex',\n    flex: '1 0 700px',\n    flexDirection: 'column',\n    maxHeight: 850\n    // height: 1000\n  },\n  recordsByPublisher: {\n    display: 'flex',\n    flex: 1,\n    minHeight: '50%',\n    flexDirection: 'column',\n    '& h3': {\n      paddingLeft: 30,\n      color: theme.palette.greyscale(0.8)\n    }\n  }\n});\n\nconst Record = ({\n  classes,\n  recordPayload,\n  daemonApi,\n  registered,\n  platformData,\n  tip,\n  showOnlyVerifiedPublishers,\n  setActivePage,\n  getExchangeRate,\n  getBalance,\n  autoPay,\n  purchaseRecord,\n  proofOfPurchase\n}) => {\n  useEffect(() => {\n    setActivePage(null);\n  }, []);\n\n\n  const [purchasedData, setPurchasedData] = useState({\n    proofTxid: '',\n    data: '',\n    paid: false\n})\n\n\nuseEffect(() => {\nif(autoPay.purchased){\n  let { txid } = recordPayload.meta\n\n  let found = autoPay.purchased.find(purchase => {\n     return purchase.txid === txid\n  })\n  \n  if(found){\n    let {txid, payment_txid, terms } = found\n    proofOfPurchase({txid, payment_txid, terms })\n    .then(data => {\n      setPurchasedData({\n        proofTxid: payment_txid,\n        data: data,\n        paid: true\n      })})\n    .catch(err => console.log(err))\n  }\n}\n}, [])\n\n\n  // get records by the same publisher\n  const [recordsByPublisher, setRecordsByPublisher] = useState([]);\n  useEffect(() => {\n    let current = true;\n    const getRecordsByPublisher = async () => {\n      const { meta } = recordPayload;\n      const q = `meta.signed_by:${meta.signed_by}`;\n      let res;\n      try {\n        res = await daemonApi.searchOip5Records({ q, limit: 100 });\n      } catch (err) {\n        console.error(err);\n      }\n      if (!res) return;\n\n      const { success, payload, error } = res;\n      if (success) {\n        const { results } = payload;\n        if (results.length > 0) {\n          if (current) {\n            setRecordsByPublisher(results);\n          }\n        }\n      } else {\n        console.error(error);\n      }\n    };\n    if (recordPayload) {\n      try {\n        getRecordsByPublisher();\n      } catch (err) {\n        console.error(`Failed to get records by publisher: \\n ${err}`);\n      }\n    }\n\n    return () => {\n      current = false;\n    };\n  }, []);\n\n  // get flo balance and exchange rate\n  useEffect(() => {\n    let current = true;\n    const getXrAndBalance = async () => {\n      if (current) {\n        await getExchangeRate();\n        await getBalance();\n      }\n    };\n    getXrAndBalance();\n    return () => {\n      current = false;\n    };\n  }, []);\n\n  async function isVerified({ pubAddr, templateName, apiUrl, localhost }) {\n    try {\n      return await daemonApi.isVerifiedPublisher({\n        pubAddr,\n        templateName,\n        apiUrl,\n        localhost\n      });\n    } catch (err) {\n      console.error(`Failed to verify pub address: ${pubAddr}: \\n ${err}`);\n      return { success: false, error: err };\n    }\n  }\n  // check if record includes a payment template\n  const TMPL_PAYMENT = 'tmpl_3084380E';\n  let payment = false;\n  if (recordPayload.record.details[TMPL_PAYMENT]) {\n    payment = true;\n  }\n  return (\n    <div className={classes.root}>\n      <SideBar reroute />\n      <div className={classes.content}>\n        <div className={classes.recordViewer}>\n          <SwitchViewer recordPayload={recordPayload} purchasedData={purchasedData} />\n          {payment && (\n            <PaymentRow\n              paymentTemplate={recordPayload.record.details[TMPL_PAYMENT]}\n              registered={registered}\n              platformData={platformData}\n              paymentAddress={recordPayload.meta.signed_by}\n              tip={tip}\n              purchasedData={purchasedData}\n            />\n          )}\n        </div>\n        <div className={classes.recordsByPublisher}>\n          <RecordMap\n            records={recordsByPublisher}\n            isVerified={isVerified}\n            showOnlyVerifiedPublishers={showOnlyVerifiedPublishers}\n            autoPay={autoPay}\n            purchaseRecord={purchaseRecord}\n            proofOfPurchase={proofOfPurchase}\n\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nRecord.getInitialProps = async (ctx) => {\n  const { reduxStore, query } = ctx;\n  const { getState } = reduxStore;\n  // const isServer = !!req\n\n  let state = getState();\n  const { Explorer } = state;\n\n  const txid = query.txid;\n\n  let response = await Explorer.daemonApi.getOip5Record(txid);\n  const { success, payload, error } = response;\n  if (success) {\n    const { results } = payload;\n    if (results[0]) {\n      return {\n        recordPayload: results[0]\n      };\n    }\n  } else {\n    console.error(error);\n  }\n\n  return {};\n};\n\nRecord.propTypes = {\n  classes: PropTypes.object.isRequired,\n  registered: PropTypes.bool.isRequired,\n  platformData: PropTypes.object.isRequired,\n  daemonApi: PropTypes.object.isRequired,\n  setActivePage: PropTypes.func.isRequired,\n  getExchangeRate: PropTypes.func.isRequired,\n  getBalance: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    registered: state.Platform.registered,\n    platformData: state.Platform.platformData,\n    showOnlyVerifiedPublishers: state.Interface.showOnlyVerifiedPublishers,\n    daemonApi: state.Explorer.daemonApi,\n    autoPay: state.Autopay\n  };\n}\nconst mapDispatchToProps = {\n  tip,\n  setActivePage,\n  getExchangeRate,\n  getBalance,\n  purchaseRecord,\n  proofOfPurchase\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Record));\n"]},"metadata":{},"sourceType":"module"}