{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/ui/ToggleSwitch.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport withStyles from 'react-jss';\nimport _ from 'classnames';\n\nconst ToggleSwitch = ({\n  classes,\n  onSwitch,\n  defaultState = false\n}) => {\n  const {\n    0: state,\n    1: toggleSwitch\n  } = useState(defaultState);\n\n  const handleOnChange = () => {\n    toggleSwitch(!state);\n  };\n\n  useEffect(() => {\n    if (onSwitch) {\n      onSwitch(state);\n    }\n  }, [state]);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }, __jsx(\"label\", {\n    className: classes.switch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    onChange: handleOnChange,\n    type: \"checkbox\",\n    checked: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), __jsx(\"span\", {\n    className: _(classes.slider, classes.round),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  })));\n};\n\nconst styles = theme => ({\n  root: {\n    padding: 10\n  },\n  switch: {\n    position: 'relative',\n    display: 'inline-block',\n    width: 36,\n    height: 18,\n    '& input': {\n      opacity: 0,\n      width: 0,\n      height: 0\n    }\n  },\n  slider: {\n    position: 'absolute',\n    cursor: 'pointer',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#ccc',\n    '-webkit-transition': '.4s',\n    transition: '.4s',\n    '-o-transition': '.4s',\n    '-moz-transition': '.4s',\n    '&:before': {\n      position: 'absolute',\n      content: '\"\"',\n      height: 26,\n      width: 26,\n      left: '-8px',\n      top: '-4px',\n      bottom: 4,\n      backgroundColor: theme.palette.text.main,\n      '-webkit-transition': '.4s',\n      transition: '.4s',\n      '-o-transition': '.4s',\n      '-moz-transition': '.4s'\n    },\n    '&$round': {\n      borderRadius: 34,\n      '&:before': {\n        borderRadius: '50%'\n      }\n    }\n  },\n  '@global': {\n    input: {\n      '&:checked + $slider': {\n        backgroundColor: theme.palette.greyscale(0.5)\n      },\n      '&:focus + $slider': {\n        boxShadow: '0 0 1px #2196F3'\n      },\n      '&:checked + $slider:before': {\n        '-webkit-transform': 'translateX(26px)',\n        '-moz-transform': 'translateX(26px)',\n        '-o-transform': 'translateX(26px)',\n        '-ms-transform': 'translateX(26px)',\n        'transform': 'translateX(26px)'\n      }\n    }\n  },\n  round: {}\n});\n\nexport default withStyles(styles)(ToggleSwitch);","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/ui/ToggleSwitch.js"],"names":["React","useState","useEffect","withStyles","_","ToggleSwitch","classes","onSwitch","defaultState","state","toggleSwitch","handleOnChange","root","switch","slider","round","styles","theme","padding","position","display","width","height","opacity","cursor","top","left","right","bottom","backgroundColor","transition","content","palette","text","main","borderRadius","input","greyscale","boxShadow"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,OAAOC,CAAP,MAAc,YAAd;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA,YAAY,GAAG;AAApC,CAAD,KAAiD;AACpE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAwBT,QAAQ,CAACO,YAAD,CAAtC;;AAEA,QAAMG,cAAc,GAAG,MAAM;AAC3BD,IAAAA,YAAY,CAAC,CAACD,KAAF,CAAZ;AACD,GAFD;;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACE,KAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAMA,SAAO;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACM,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAO,IAAA,SAAS,EAAEN,OAAO,CAACO,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAEF,cADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,OAAO,EAAEF,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAM,IAAA,SAAS,EAAEL,CAAC,CAACE,OAAO,CAACQ,MAAT,EAAiBR,OAAO,CAACS,KAAzB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADK,CAAP;AAUD,CAvBD;;AAyBA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBL,EAAAA,IAAI,EAAE;AACJM,IAAAA,OAAO,EAAE;AADL,GADiB;AAIvBL,EAAAA,MAAM,EAAE;AACNM,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,OAAO,EAAE,cAFH;AAGNC,IAAAA,KAAK,EAAE,EAHD;AAINC,IAAAA,MAAM,EAAE,EAJF;AAKN,eAAW;AACTC,MAAAA,OAAO,EAAE,CADA;AAETF,MAAAA,KAAK,EAAE,CAFE;AAGTC,MAAAA,MAAM,EAAE;AAHC;AALL,GAJe;AAevBR,EAAAA,MAAM,EAAE;AACNK,IAAAA,QAAQ,EAAE,UADJ;AAENK,IAAAA,MAAM,EAAE,SAFF;AAGNC,IAAAA,GAAG,EAAE,CAHC;AAINC,IAAAA,IAAI,EAAE,CAJA;AAKNC,IAAAA,KAAK,EAAE,CALD;AAMNC,IAAAA,MAAM,EAAE,CANF;AAONC,IAAAA,eAAe,EAAE,MAPX;AAQN,0BAAsB,KARhB;AASNC,IAAAA,UAAU,EAAE,KATN;AAUN,qBAAiB,KAVX;AAWN,uBAAmB,KAXb;AAYN,gBAAY;AACVX,MAAAA,QAAQ,EAAE,UADA;AAEVY,MAAAA,OAAO,EAAE,IAFC;AAGVT,MAAAA,MAAM,EAAE,EAHE;AAIVD,MAAAA,KAAK,EAAE,EAJG;AAKVK,MAAAA,IAAI,EAAE,MALI;AAMVD,MAAAA,GAAG,EAAE,MANK;AAOVG,MAAAA,MAAM,EAAE,CAPE;AAQVC,MAAAA,eAAe,EAAEZ,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmBC,IAR1B;AASV,4BAAsB,KATZ;AAUVJ,MAAAA,UAAU,EAAE,KAVF;AAWV,uBAAiB,KAXP;AAYV,yBAAmB;AAZT,KAZN;AA0BN,eAAW;AACTK,MAAAA,YAAY,EAAE,EADL;AAET,kBAAY;AACVA,QAAAA,YAAY,EAAE;AADJ;AAFH;AA1BL,GAfe;AAiDvB,aAAW;AACTC,IAAAA,KAAK,EAAE;AACL,6BAAuB;AACrBP,QAAAA,eAAe,EAAEZ,KAAK,CAACe,OAAN,CAAcK,SAAd,CAAwB,GAAxB;AADI,OADlB;AAIL,2BAAqB;AACnBC,QAAAA,SAAS,EAAE;AADQ,OAJhB;AAOL,oCAA8B;AAC5B,6BAAqB,kBADO;AAE5B,0BAAkB,kBAFU;AAG5B,wBAAgB,kBAHY;AAI5B,yBAAiB,kBAJW;AAK5B,qBAAa;AALe;AAPzB;AADE,GAjDY;AAkEvBvB,EAAAA,KAAK,EAAE;AAlEgB,CAAL,CAApB;;AAqEA,eAAeZ,UAAU,CAACa,MAAD,CAAV,CAAmBX,YAAnB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport withStyles from 'react-jss'\nimport _ from 'classnames'\n\nconst ToggleSwitch = ({ classes, onSwitch, defaultState = false }) => {\n  const [state, toggleSwitch] = useState(defaultState)\n\n  const handleOnChange = () => {\n    toggleSwitch(!state)\n  }\n\n  useEffect(() => {\n    if (onSwitch) {\n      onSwitch(state)\n    }\n  }, [state])\n\n  return <div className={classes.root}>\n    <label className={classes.switch}>\n      <input\n        onChange={handleOnChange}\n        type='checkbox'\n        checked={state}\n      />\n      <span className={_(classes.slider, classes.round)} />\n    </label>\n  </div>\n}\n\nconst styles = theme => ({\n  root: {\n    padding: 10\n  },\n  switch: {\n    position: 'relative',\n    display: 'inline-block',\n    width: 36,\n    height: 18,\n    '& input': {\n      opacity: 0,\n      width: 0,\n      height: 0\n    }\n  },\n  slider: {\n    position: 'absolute',\n    cursor: 'pointer',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#ccc',\n    '-webkit-transition': '.4s',\n    transition: '.4s',\n    '-o-transition': '.4s',\n    '-moz-transition': '.4s',\n    '&:before': {\n      position: 'absolute',\n      content: '\"\"',\n      height: 26,\n      width: 26,\n      left: '-8px',\n      top: '-4px',\n      bottom: 4,\n      backgroundColor: theme.palette.text.main,\n      '-webkit-transition': '.4s',\n      transition: '.4s',\n      '-o-transition': '.4s',\n      '-moz-transition': '.4s'\n    },\n    '&$round': {\n      borderRadius: 34,\n      '&:before': {\n        borderRadius: '50%'\n      }\n    }\n\n  },\n  '@global': {\n    input: {\n      '&:checked + $slider': {\n        backgroundColor: theme.palette.greyscale(0.5)\n      },\n      '&:focus + $slider': {\n        boxShadow: '0 0 1px #2196F3'\n      },\n      '&:checked + $slider:before': {\n        '-webkit-transform': 'translateX(26px)',\n        '-moz-transform': 'translateX(26px)',\n        '-o-transform': 'translateX(26px)',\n        '-ms-transform': 'translateX(26px)',\n        'transform': 'translateX(26px)'\n      }\n    }\n  },\n  round: {}\n})\n\nexport default withStyles(styles)(ToggleSwitch)\n"]},"metadata":{},"sourceType":"module"}