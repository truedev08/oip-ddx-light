{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport withStyles from 'react-jss'; //import { useHistory } from \"react-router-dom\";\n\nimport Link from \"next/link\";\nimport Alert from \"../../../shared/Alert\";\n\nconst styles = theme => ({\n  root: {\n    margin: 20\n  },\n  submitForm: {\n    margin: 25,\n    border: 1\n  }\n});\n\nconst RegisterForm = ({\n  classes\n}) => {\n  //var location = useHistory();\n\n  /**************************STATE SECTION************************/\n  //**Display Name States */\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"\");\n  const {\n    0: usernameErrorMessage,\n    1: setUsernameErrorMessage\n  } = useState(\"\"); //**Password States */\n\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: password2,\n    1: setPassword2\n  } = useState(\"\");\n  const {\n    0: passErrorMessage,\n    1: setPassErrorMessage\n  } = useState(\"\"); //**Email States */\n\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: reEmail,\n    1: setReEmail\n  } = useState(\"\");\n  const {\n    0: emailErrorMessage,\n    1: setEmailErrorMessage\n  } = useState(\"\");\n  const {\n    0: reg_success,\n    1: setRegSuccess\n  } = useState(false);\n\n  const validateForm = e => {\n    if (email !== reEmail) {\n      setEmailErrorMessage(\"Emails do not match!\");\n      setUsernameErrorMessage(\"\");\n    } else if (password !== password2) {\n      setEmailErrorMessage(\"\");\n      setPassErrorMessage(\"Passwords do not match!\");\n    } else {\n      setPassErrorMessage(\"\");\n      sendUser();\n    }\n  };\n\n  const sendUser = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          displayName: username,\n          email: email,\n          password: password,\n          password2: password\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (err) {\n      console.log(\"onLogin error\" + err);\n    }\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    validateForm(e);\n  };\n\n  const test = () => {\n    console.log('Hello');\n  };\n  /*************The placeholders are fontawesome unicode, allows them to show in the placeholder field *****************/\n\n  /*************Password fields get set to state to compare before submit*/\n\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    className: \"wrapper\"\n  }, __jsx(\"div\", {\n    className: \"signup-wrap\"\n  }, __jsx(\"div\", {\n    className: \"log-container\"\n  }, __jsx(\"div\", {\n    className: \"row align-items-center\"\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(\"div\", {\n    className: \"logForm\"\n  }, __jsx(\"form\", {\n    onSubmit: onFormSubmit\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    required: true,\n    placeholder: \"Username\",\n    className: \"form-control\",\n    onChange: e => {\n      setUsername(e.target.value);\n    }\n  })), __jsx(\"div\", null, usernameErrorMessage.length > 0 ? __jsx(Alert, {\n    content: usernameErrorMessage,\n    setAlert: () => {\n      setUsernameErrorMessage(\"\");\n    }\n  }) : null), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    required: true,\n    placeholder: \"Email\",\n    className: \"form-control\",\n    onChange: e => {\n      setEmail(e.target.value);\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    required: true,\n    placeholder: \"Confirm Email\",\n    className: \"form-control\",\n    onChange: e => {\n      setReEmail(e.target.value);\n    }\n  })), __jsx(\"div\", null, emailErrorMessage.length > 0 ? __jsx(Alert, {\n    content: emailErrorMessage,\n    setAlert: () => {\n      setEmailErrorMessage(\"\");\n    }\n  }) : null), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    required: true,\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"form-control\",\n    onChange: e => {\n      setPassword(e.target.value);\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    required: true,\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    className: \"form-control\",\n    onChange: e => {\n      setPassword2(e.target.value);\n    }\n  })), __jsx(\"div\", null, passErrorMessage.length > 0 ? __jsx(Alert, {\n    content: passErrorMessage,\n    setAlert: () => {\n      setPassErrorMessage(\"\");\n    }\n  }) : null), __jsx(\"button\", {\n    className: \"btn btn-primary\"\n  }, \"Sign Up\")), __jsx(\"div\", {\n    className: \"log-footer\"\n  })))))), reg_success ? __jsx(\"div\", {\n    className: \"thanks-popup\"\n  }, __jsx(\"div\", {\n    className: \"thanks-content\"\n  }, __jsx(\"div\", {\n    className: \"thank-you-msg\"\n  }, __jsx(\"p\", null, \"Thank you for registering \", __jsx(\"span\", null, \" \", username), \"!\", __jsx(\"br\", null), \"An email has been sent to \", __jsx(\"br\", null), __jsx(\"span\", null, email)), __jsx(\"p\", null, \"Please verify your email address to continue.\"), __jsx(\"p\", null, \"You will now be redirected to the\", __jsx(\"a\", {\n    href: \"#\"\n  }, \" Login Page\"))))) : null));\n};\n\nexport default withStyles(styles, {\n  injectTheme: true\n})(RegisterForm);","map":null,"metadata":{},"sourceType":"module"}