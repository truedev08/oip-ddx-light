{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport withStyles from 'react-jss';\nimport { GoRepoForked, GoCloudUpload } from 'react-icons/go';\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from 'react-icons/md';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: '15px',\n      height: '275px',\n      width: '200px',\n      margin: [5, 10],\n      boxShadow: theme.shadows[1],\n      borderRadius: '3px',\n      boxSizing: 'border-box',\n      position: 'relative'\n    },\n    templateSelector: {\n      position: 'absolute',\n      top: 10,\n      right: 10,\n      zIndex: 100,\n      '& > span': {\n        cursor: 'pointer'\n      }\n    },\n    templateField: {\n      display: 'flex',\n      flex: 1,\n      position: 'relative',\n      alignItems: 'center',\n      overflow: 'hidden'\n    },\n    fieldName: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      fontSize: 12,\n      color: 'grey'\n    },\n    fieldData: {\n      margin: 0,\n      fontSize: 12,\n      whiteSpace: 'pre',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden'\n    },\n    templateActions: {\n      display: 'flex',\n      flexDirection: 'row',\n      flex: 1,\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      '& > span': {\n        cursor: 'pointer'\n      }\n    }\n  };\n};\n\nvar TemplateCard = function TemplateCard(_ref) {\n  var classes = _ref.classes,\n      template = _ref.template,\n      publishRecord = _ref.publishRecord,\n      publishTemplate = _ref.publishTemplate,\n      extendTemplates = _ref.extendTemplates,\n      key = _ref.key,\n      handleSelectTemplate = _ref.handleSelectTemplate,\n      _ref$selectedTemplate = _ref.selectedTemplates,\n      selectedTemplates = _ref$selectedTemplate === void 0 ? {} : _ref$selectedTemplate;\n\n  function handleTemplateExtend() {\n    publishTemplate();\n    extendTemplates(template.identifier);\n  }\n\n  function handleRecordPublish() {\n    publishRecord(template);\n  }\n\n  function onSelectTemplate() {\n    handleSelectTemplate({\n      id: template.name,\n      template: template\n    });\n  }\n\n  var selected = Object.keys(selectedTemplates).includes(template.name);\n  return __jsx(\"div\", {\n    className: classes.root,\n    key: key\n  }, __jsx(\"div\", {\n    className: classes.templateSelector\n  }, __jsx(Selector, {\n    onTemplateSelect: onSelectTemplate,\n    selected: selected\n  })), __jsx(\"div\", {\n    className: classes.templateField\n  }, __jsx(\"span\", {\n    className: classes.fieldName\n  }, \"Friendly Name\"), __jsx(\"p\", {\n    className: classes.fieldData\n  }, template.friendly_name)), __jsx(\"div\", {\n    className: classes.templateField\n  }, __jsx(\"span\", {\n    className: classes.fieldName\n  }, \"Name\"), __jsx(\"p\", {\n    className: classes.fieldData\n  }, template.name)), __jsx(\"div\", {\n    className: classes.templateField\n  }, __jsx(\"span\", {\n    className: classes.fieldName\n  }, \"Identifier\"), __jsx(\"p\", {\n    className: classes.fieldData\n  }, template.identifier)), __jsx(\"div\", {\n    className: classes.templateField\n  }, __jsx(\"span\", {\n    className: classes.fieldName\n  }, \"Description\"), __jsx(\"p\", {\n    className: classes.fieldData\n  }, template.description)), __jsx(\"div\", {\n    className: classes.templateActions\n  }, __jsx(\"span\", {\n    onClick: handleTemplateExtend\n  }, __jsx(GoRepoForked, null)), __jsx(\"span\", {\n    onClick: handleRecordPublish\n  }, __jsx(GoCloudUpload, null))));\n};\n\nvar Selector = function Selector(_ref2) {\n  var selected = _ref2.selected,\n      onTemplateSelect = _ref2.onTemplateSelect;\n  return __jsx(React.Fragment, null, selected ? __jsx(\"span\", {\n    onClick: onTemplateSelect\n  }, \" \", __jsx(MdRadioButtonChecked, null)) : __jsx(\"span\", {\n    onClick: onTemplateSelect\n  }, __jsx(MdRadioButtonUnchecked, null)));\n};\n\nexport default withStyles(styles)(TemplateCard);","map":null,"metadata":{},"sourceType":"module"}