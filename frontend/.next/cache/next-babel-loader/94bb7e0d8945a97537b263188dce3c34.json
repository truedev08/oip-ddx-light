{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport withReduxStore from '../lib/with-redux-store';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider, useTheme } from 'oip-react';\nimport { themeOptions } from '../styles/theme';\nimport 'video.js/dist/video-js.css';\nimport '../static/styles/css/VideoPlayer.css';\n\nclass MyApp extends App {\n  componentDidMount() {\n    const style = document.getElementById('server-side-styles');\n\n    if (style) {\n      style.parentNode.removeChild(style);\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, __jsx(ThemedApp, {\n      Component: Component,\n      pageProps: pageProps,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst ThemedApp = ({\n  Component,\n  pageProps\n}) => {\n  const {\n    theme\n  } = useTheme(themeOptions, 'light');\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default withReduxStore(MyApp);","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/pages/_app.js"],"names":["App","Container","React","withReduxStore","Provider","ThemeProvider","useTheme","themeOptions","MyApp","componentDidMount","style","document","getElementById","parentNode","removeChild","render","Component","pageProps","reduxStore","props","ThemedApp","theme"],"mappings":";;;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,WAAxC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,4BAAP;AACA,OAAO,sCAAP;;AAEA,MAAMC,KAAN,SAAoBR,GAApB,CAAwB;AACtBS,EAAAA,iBAAiB,GAAI;AACnB,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAd;;AAEA,QAAIF,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACG,UAAN,CAAiBC,WAAjB,CAA6BJ,KAA7B;AACD;AACF;;AACDK,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAuC,KAAKC,KAAlD;AAEA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAW,MAAA,SAAS,EAAEF,SAAtB;AAAiC,MAAA,SAAS,EAAEC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADJ;AAKD;;AAhBqB;;AAmBxB,MAAMG,SAAS,GAAG,CAAC;AAAEJ,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAC9C,QAAM;AAAEI,IAAAA;AAAF,MAAYf,QAAQ,CAACC,YAAD,EAAe,OAAf,CAA1B;AACA,SAAO,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEc,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,MAAC,SAAD,eAAeJ,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK,CAAP;AAGD,CALD;;AAOA,eAAed,cAAc,CAACK,KAAD,CAA7B","sourcesContent":["import App, { Container } from 'next/app'\nimport React from 'react'\nimport withReduxStore from '../lib/with-redux-store'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider, useTheme } from 'oip-react'\nimport { themeOptions } from '../styles/theme'\n\nimport 'video.js/dist/video-js.css'\nimport '../static/styles/css/VideoPlayer.css'\n\nclass MyApp extends App {\n  componentDidMount () {\n    const style = document.getElementById('server-side-styles')\n\n    if (style) {\n      style.parentNode.removeChild(style)\n    }\n  }\n  render () {\n    const { Component, pageProps, reduxStore } = this.props\n\n    return (\n        <Provider store={reduxStore}>\n          <ThemedApp Component={Component} pageProps={pageProps} />\n        </Provider>\n    )\n  }\n}\n\nconst ThemedApp = ({ Component, pageProps }) => {\n  const { theme } = useTheme(themeOptions, 'light')\n  return <ThemeProvider theme={theme}>\n    <Component {...pageProps} />\n  </ThemeProvider>\n}\n\nexport default withReduxStore(MyApp)\n"]},"metadata":{},"sourceType":"module"}