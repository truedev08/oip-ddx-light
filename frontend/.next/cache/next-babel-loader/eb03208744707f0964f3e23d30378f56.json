{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { OIP } from 'js-oip';\nimport Exchange from '@oipwg/exchange-rate';\nimport config from '../../config.js';\nimport * as actions from '../actions/Wallet/creators';\nlet explorerWallet;\n\nif (config.privatekey) {\n  explorerWallet = new OIP(config.privatekey, config.network, {\n    explorerUrl: config.explorerUrl\n  }).wallet;\n}\n\nconst initialState = {\n  xWallet: explorerWallet,\n  _exchange: new Exchange(),\n  txPending: false,\n  txSuccess: false,\n  txError: false,\n  txErrorMessage: undefined,\n  floBalanceSat: undefined,\n  floExchangeRate: undefined\n};\n\nconst Wallet = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SET_X_WALLET:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          xWallet: action.xWallet\n        });\n      }\n\n    case actions.TX_PENDING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        txPending: true,\n        txSuccess: false,\n        txError: false,\n        txErrorMessage: null\n      });\n\n    case actions.TX_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        txPending: false,\n        txSuccess: true,\n        txError: false,\n        txErrorMessage: null\n      });\n\n    case actions.TX_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        txPending: false,\n        txSuccess: false,\n        txError: true,\n        txErrorMessage: action.errorMessage\n      });\n\n    case actions.CLEAR_TX_STATUS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        txPending: false,\n        txSuccess: false,\n        txError: null,\n        txErrorMessage: false\n      });\n\n    case actions.SET_FLO_BALANCE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        floBalanceSat: action.balance\n      });\n\n    case actions.SET_FLO_XR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        floExchangeRate: action.xr\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default Wallet;","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/redux/reducers/Wallet.js"],"names":["OIP","Exchange","config","actions","explorerWallet","privatekey","network","explorerUrl","wallet","initialState","xWallet","_exchange","txPending","txSuccess","txError","txErrorMessage","undefined","floBalanceSat","floExchangeRate","Wallet","state","action","type","SET_X_WALLET","TX_PENDING","TX_SUCCESS","TX_ERROR","errorMessage","CLEAR_TX_STATUS","SET_FLO_BALANCE","balance","SET_FLO_XR","xr"],"mappings":";;;;;;AAAA,SAASA,GAAT,QAAoB,QAApB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,4BAAzB;AAEA,IAAIC,cAAJ;;AACA,IAAIF,MAAM,CAACG,UAAX,EAAuB;AACrBD,EAAAA,cAAc,GAAG,IAAIJ,GAAJ,CAAQE,MAAM,CAACG,UAAf,EAA2BH,MAAM,CAACI,OAAlC,EAA2C;AAAEC,IAAAA,WAAW,EAAEL,MAAM,CAACK;AAAtB,GAA3C,EAAgFC,MAAjG;AACD;;AAED,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAEN,cADU;AAEnBO,EAAAA,SAAS,EAAE,IAAIV,QAAJ,EAFQ;AAGnBW,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,OAAO,EAAE,KALU;AAMnBC,EAAAA,cAAc,EAAEC,SANG;AAOnBC,EAAAA,aAAa,EAAED,SAPI;AAQnBE,EAAAA,eAAe,EAAEF;AARE,CAArB;;AAUA,MAAMG,MAAM,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,OAAO,CAACoB,YAAb;AAA2B;AACzB,+CACKH,KADL;AAEEV,UAAAA,OAAO,EAAEW,MAAM,CAACX;AAFlB;AAID;;AACD,SAAKP,OAAO,CAACqB,UAAb;AACE,6CACKJ,KADL;AAEER,QAAAA,SAAS,EAAE,IAFb;AAGEC,QAAAA,SAAS,EAAE,KAHb;AAIEC,QAAAA,OAAO,EAAE,KAJX;AAKEC,QAAAA,cAAc,EAAE;AALlB;;AAOF,SAAKZ,OAAO,CAACsB,UAAb;AACE,6CACKL,KADL;AAEER,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,SAAS,EAAE,IAHb;AAIEC,QAAAA,OAAO,EAAE,KAJX;AAKEC,QAAAA,cAAc,EAAE;AALlB;;AAOF,SAAKZ,OAAO,CAACuB,QAAb;AACE,6CACKN,KADL;AAEER,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,SAAS,EAAE,KAHb;AAIEC,QAAAA,OAAO,EAAE,IAJX;AAKEC,QAAAA,cAAc,EAAEM,MAAM,CAACM;AALzB;;AAOF,SAAKxB,OAAO,CAACyB,eAAb;AACE,6CACKR,KADL;AAEER,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,SAAS,EAAE,KAHb;AAIEC,QAAAA,OAAO,EAAE,IAJX;AAKEC,QAAAA,cAAc,EAAE;AALlB;;AAOF,SAAKZ,OAAO,CAAC0B,eAAb;AACE,6CACKT,KADL;AAEEH,QAAAA,aAAa,EAAEI,MAAM,CAACS;AAFxB;;AAIF,SAAK3B,OAAO,CAAC4B,UAAb;AACE,6CACKX,KADL;AAEEF,QAAAA,eAAe,EAAEG,MAAM,CAACW;AAF1B;;AAIF;AACE,aAAOZ,KAAP;AAlDJ;AAoDD,CArDD;;AAuDA,eAAeD,MAAf","sourcesContent":["import { OIP } from 'js-oip'\nimport Exchange from '@oipwg/exchange-rate'\n\nimport config from '../../config.js'\nimport * as actions from '../actions/Wallet/creators'\n\nlet explorerWallet\nif (config.privatekey) {\n  explorerWallet = new OIP(config.privatekey, config.network, { explorerUrl: config.explorerUrl }).wallet\n}\n\nconst initialState = {\n  xWallet: explorerWallet,\n  _exchange: new Exchange(),\n  txPending: false,\n  txSuccess: false,\n  txError: false,\n  txErrorMessage: undefined,\n  floBalanceSat: undefined,\n  floExchangeRate: undefined\n}\nconst Wallet = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SET_X_WALLET: {\n      return {\n        ...state,\n        xWallet: action.xWallet\n      }\n    }\n    case actions.TX_PENDING:\n      return {\n        ...state,\n        txPending: true,\n        txSuccess: false,\n        txError: false,\n        txErrorMessage: null\n      }\n    case actions.TX_SUCCESS:\n      return {\n        ...state,\n        txPending: false,\n        txSuccess: true,\n        txError: false,\n        txErrorMessage: null\n      }\n    case actions.TX_ERROR:\n      return {\n        ...state,\n        txPending: false,\n        txSuccess: false,\n        txError: true,\n        txErrorMessage: action.errorMessage\n      }\n    case actions.CLEAR_TX_STATUS:\n      return {\n        ...state,\n        txPending: false,\n        txSuccess: false,\n        txError: null,\n        txErrorMessage: false\n      }\n    case actions.SET_FLO_BALANCE:\n      return {\n        ...state,\n        floBalanceSat: action.balance\n      }\n    case actions.SET_FLO_XR:\n      return {\n        ...state,\n        floExchangeRate: action.xr\n      }\n    default:\n      return state\n  }\n}\n\nexport default Wallet\n"]},"metadata":{},"sourceType":"module"}