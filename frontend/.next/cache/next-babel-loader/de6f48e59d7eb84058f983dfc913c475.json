{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Link from 'next/link';\nimport { useDispatch } from \"react-redux\";\nimport Alert from \"../../../shared/Alert\";\nimport { sortedLastIndex } from \"lodash\";\nimport withStyles from 'react-jss';\nimport axios from 'axios';\nimport { MdCropSquare } from \"react-icons/md\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      margin: 20\n    },\n    submitForm: {\n      margin: 25,\n      border: 1\n    }\n  };\n};\n\nvar LoginForm = function LoginForm(_ref) {\n  var classes = _ref.classes;\n\n  //let history = useHistory();\n  //const dispatch = useDispatch();\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var onLogin = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"http://localhost:5000/api/users/login\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  email: email,\n                  password: password\n                })\n              });\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context.sent;\n              console.log(data);\n\n              if (data.msg === \"Please enter correct credentials\") {\n                setError(data.msg);\n                window.localStorage.removeItem(\"token\");\n              } else if (data.activated === false) {\n                window.localStorage.removeItem(\"token\");\n                setVerified(true);\n              } else {\n                window.localStorage.setItem(\"token\", JSON.stringify(data.token));\n                dispatch({\n                  type: \"LOGIN\",\n                  payload: true\n                }); //socket.emit(\"login\");\n                //history.push(\"/\");\n              } //const { mnemonic } = data;\n\n              /*\n              // handle error response\n              const createWalletData = await fetch(\"users/createWallet\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  mnemonic: mnemonic,\n                  password,\n                }),\n              });\n              \n               const wifJson = await createWalletData.json();\n              console.log(\"wifJson\", wifJson);\n               localStorage.setItem(\"userAddress\", JSON.stringify(wifJson.wif));\n              */\n\n\n              console.log(\"success\");\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"onLogin error\" + _context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function onLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onFormSubmit = function onFormSubmit(e) {\n    e.preventDefault();\n    onLogin();\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"form\", {\n    onSubmit: onFormSubmit\n  }, __jsx(\"div\", {\n    className: \"form-group loginFormSpacing\"\n  }, __jsx(\"input\", {\n    placeholder: \"Email\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      setEmail(e.target.value.trim());\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      setPassword(e.target.value);\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group form-check rememberMeSection\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    id: \"html1\"\n  }), __jsx(\"label\", {\n    htmlFor: \"html1\"\n  }, \"Remember me\")), __jsx(\"div\", {\n    className: \"login-alert\"\n  }, error.length > 0 ? __jsx(Alert, {\n    content: error,\n    setAlert: function setAlert() {\n      setError(\"\");\n    }\n  }) : null), __jsx(\"button\", {\n    className: \"btn btn-primary\"\n  }, \"Sign in\")));\n};\n\nexport default withStyles(styles, {\n  injectTheme: true\n})(LoginForm);","map":null,"metadata":{},"sourceType":"module"}