{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/views/dumb/loginForm/LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Link from 'next/link';\nimport { useDispatch } from \"react-redux\";\nimport Alert from \"../../../shared/Alert\";\nimport { sortedLastIndex } from \"lodash\";\nimport PropTypes from 'prop-types';\nimport withStyles from 'react-jss';\nimport axios from 'axios';\nimport { MdCropSquare } from \"react-icons/md\";\n\nconst styles = theme => ({\n  root: {\n    margin: 20\n  },\n  submitForm: {\n    margin: 25,\n    border: 1\n  }\n});\n\nconst LoginForm = ({\n  classes\n}) => {\n  //let history = useHistory();\n  //const dispatch = useDispatch();\n  const {\n    0: displayName,\n    1: setDisplayName\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n\n  const onLogin = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          displayName: displayName,\n          password: password\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n\n      if (data.msg === \"Please enter correct credentials\") {\n        setError(data.msg);\n        window.localStorage.removeItem(\"token\");\n      } else if (data.activated === false) {\n        window.localStorage.removeItem(\"token\");\n        setVerified(true);\n      } else {\n        window.localStorage.setItem(\"token\", JSON.stringify(data.token));\n        dispatch({\n          type: \"LOGIN\",\n          payload: true\n        }); //socket.emit(\"login\");\n        //history.push(\"/\");\n      } //const { mnemonic } = data;\n\n      /*\n      // handle error response\n      const createWalletData = await fetch(\"users/createWallet\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          mnemonic: mnemonic,\n          password,\n        }),\n      });\n      \n       const wifJson = await createWalletData.json();\n      console.log(\"wifJson\", wifJson);\n       localStorage.setItem(\"userAddress\", JSON.stringify(wifJson.wif));\n      */\n\n\n      console.log(\"success\");\n    } catch (err) {\n      console.log(\"onLogin error\" + err);\n    }\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    onLogin();\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: onFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group loginFormSpacing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Display Name\",\n    className: \"form-control\",\n    onChange: e => {\n      setDisplayName(e.target.value.trim());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"form-control\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group form-check rememberMeSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    id: \"html1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"html1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Remember me\")), __jsx(\"div\", {\n    className: \"login-alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, error.length > 0 ? __jsx(Alert, {\n    content: error,\n    setAlert: () => {\n      setError(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }) : null), __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Sign in\")));\n};\n\nLoginForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  injectTheme: true\n})(LoginForm);","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/views/dumb/loginForm/LoginForm.js"],"names":["React","useState","Link","useDispatch","Alert","sortedLastIndex","PropTypes","withStyles","axios","MdCropSquare","styles","theme","root","margin","submitForm","border","LoginForm","classes","displayName","setDisplayName","email","setEmail","password","setPassword","error","setError","onLogin","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","msg","window","localStorage","removeItem","activated","setVerified","setItem","token","dispatch","type","payload","err","onFormSubmit","e","preventDefault","target","value","trim","length","propTypes","object","isRequired","injectTheme"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Link from 'next/link'\nimport { useDispatch } from \"react-redux\";\nimport Alert from \"../../../shared/Alert\";\nimport { sortedLastIndex } from \"lodash\";\nimport PropTypes from 'prop-types';\nimport withStyles from 'react-jss'\nimport axios from 'axios'\nimport { MdCropSquare } from \"react-icons/md\";\n\nconst styles = theme => ({\n  root: {\n    margin: 20,\n  },\n  submitForm: {\n    margin: 25,\n    border: 1,\n  },\n})\n\nconst LoginForm = ({\n  classes,\n}) => {\n  //let history = useHistory();\n  //const dispatch = useDispatch();\n\n  const [displayName, setDisplayName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const onLogin = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          displayName: displayName,\n          password: password,\n        }),\n      });\n      const data = await response.json();\n\n      console.log(data)\n\n      \n      if (data.msg === \"Please enter correct credentials\") {\n        setError(data.msg);\n        window.localStorage.removeItem(\"token\");\n      } else if (data.activated === false) {\n        window.localStorage.removeItem(\"token\");\n        setVerified(true);\n      } else {\n        window.localStorage.setItem(\"token\", JSON.stringify(data.token));\n        dispatch({ type: \"LOGIN\", payload: true });\n        //socket.emit(\"login\");\n        //history.push(\"/\");\n      }\n\n\n      //const { mnemonic } = data;\n\n      /*\n      // handle error response\n      const createWalletData = await fetch(\"users/createWallet\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          mnemonic: mnemonic,\n          password,\n        }),\n      });\n      \n\n      const wifJson = await createWalletData.json();\n      console.log(\"wifJson\", wifJson);\n\n      localStorage.setItem(\"userAddress\", JSON.stringify(wifJson.wif));\n      */\n     console.log(\"success\")\n    } catch (err) {\n      console.log(\"onLogin error\" + err);\n    }\n  };\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    onLogin();\n  };\n\n  return(\n    <div className={classes.root}>\n      <form onSubmit={onFormSubmit}>\n        <div className=\"form-group loginFormSpacing\">\n          <input\n            placeholder=\"Display Name\"\n            className=\"form-control\"\n            onChange={(e) => {\n              setDisplayName(e.target.value.trim());\n            }}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"form-control\"\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"form-group form-check rememberMeSection\">\n          <input type=\"checkbox\" id=\"html1\" />\n          <label htmlFor=\"html1\">Remember me</label>\n        </div>\n        <div className=\"login-alert\">\n          {error.length > 0 ? (\n            <Alert\n              content={error}\n              setAlert={() => {\n                setError(\"\");\n              }}\n            />\n          ) : null}\n        </div>\n        <button className=\"btn btn-primary\">Sign in</button>\n      </form>\n    </div>\n  )\n}\n\n\n\nLoginForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles, { injectTheme: true }) (LoginForm);"]},"metadata":{},"sourceType":"module"}