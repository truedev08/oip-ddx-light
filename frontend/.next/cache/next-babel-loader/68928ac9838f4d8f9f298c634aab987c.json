{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/ui/ToggleSwitch.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport withStyles from 'react-jss';\nimport _ from 'classnames';\n\nvar ToggleSwitch = function ToggleSwitch(_ref) {\n  _s();\n\n  var classes = _ref.classes,\n      onSwitch = _ref.onSwitch,\n      _ref$defaultState = _ref.defaultState,\n      defaultState = _ref$defaultState === void 0 ? false : _ref$defaultState;\n\n  var _useState = useState(defaultState),\n      state = _useState[0],\n      toggleSwitch = _useState[1];\n\n  var handleOnChange = function handleOnChange() {\n    toggleSwitch(!state);\n  };\n\n  useEffect(function () {\n    if (onSwitch) {\n      onSwitch(state);\n    }\n  }, [state]);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }, __jsx(\"label\", {\n    className: classes[\"switch\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    onChange: handleOnChange,\n    type: \"checkbox\",\n    checked: state,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), __jsx(\"span\", {\n    className: _(classes.slider, classes.round),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  })));\n};\n\n_s(ToggleSwitch, \"xoq65BTziyKG+C5K97Qi0tG1NBY=\");\n\n_c = ToggleSwitch;\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      padding: 10\n    },\n    \"switch\": {\n      position: 'relative',\n      display: 'inline-block',\n      width: 36,\n      height: 18,\n      '& input': {\n        opacity: 0,\n        width: 0,\n        height: 0\n      }\n    },\n    slider: {\n      position: 'absolute',\n      cursor: 'pointer',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: '#ccc',\n      '-webkit-transition': '.4s',\n      transition: '.4s',\n      '-o-transition': '.4s',\n      '-moz-transition': '.4s',\n      '&:before': {\n        position: 'absolute',\n        content: '\"\"',\n        height: 26,\n        width: 26,\n        left: '-8px',\n        top: '-4px',\n        bottom: 4,\n        backgroundColor: theme.palette.text.main,\n        '-webkit-transition': '.4s',\n        transition: '.4s',\n        '-o-transition': '.4s',\n        '-moz-transition': '.4s'\n      },\n      '&$round': {\n        borderRadius: 34,\n        '&:before': {\n          borderRadius: '50%'\n        }\n      }\n    },\n    '@global': {\n      input: {\n        '&:checked + $slider': {\n          backgroundColor: theme.palette.greyscale(0.5)\n        },\n        '&:focus + $slider': {\n          boxShadow: '0 0 1px #2196F3'\n        },\n        '&:checked + $slider:before': {\n          '-webkit-transform': 'translateX(26px)',\n          '-moz-transform': 'translateX(26px)',\n          '-o-transform': 'translateX(26px)',\n          '-ms-transform': 'translateX(26px)',\n          'transform': 'translateX(26px)'\n        }\n      }\n    },\n    round: {}\n  };\n};\n\nexport default withStyles(styles)(ToggleSwitch);\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleSwitch\");","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/ui/ToggleSwitch.js"],"names":["React","useState","useEffect","withStyles","_","ToggleSwitch","classes","onSwitch","defaultState","state","toggleSwitch","handleOnChange","root","slider","round","styles","theme","padding","position","display","width","height","opacity","cursor","top","left","right","bottom","backgroundColor","transition","content","palette","text","main","borderRadius","input","greyscale","boxShadow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport withStyles from 'react-jss'\nimport _ from 'classnames'\n\nconst ToggleSwitch = ({ classes, onSwitch, defaultState = false }) => {\n  const [state, toggleSwitch] = useState(defaultState)\n\n  const handleOnChange = () => {\n    toggleSwitch(!state)\n  }\n\n  useEffect(() => {\n    if (onSwitch) {\n      onSwitch(state)\n    }\n  }, [state])\n\n  return <div className={classes.root}>\n    <label className={classes.switch}>\n      <input\n        onChange={handleOnChange}\n        type='checkbox'\n        checked={state}\n      />\n      <span className={_(classes.slider, classes.round)} />\n    </label>\n  </div>\n}\n\nconst styles = theme => ({\n  root: {\n    padding: 10\n  },\n  switch: {\n    position: 'relative',\n    display: 'inline-block',\n    width: 36,\n    height: 18,\n    '& input': {\n      opacity: 0,\n      width: 0,\n      height: 0\n    }\n  },\n  slider: {\n    position: 'absolute',\n    cursor: 'pointer',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#ccc',\n    '-webkit-transition': '.4s',\n    transition: '.4s',\n    '-o-transition': '.4s',\n    '-moz-transition': '.4s',\n    '&:before': {\n      position: 'absolute',\n      content: '\"\"',\n      height: 26,\n      width: 26,\n      left: '-8px',\n      top: '-4px',\n      bottom: 4,\n      backgroundColor: theme.palette.text.main,\n      '-webkit-transition': '.4s',\n      transition: '.4s',\n      '-o-transition': '.4s',\n      '-moz-transition': '.4s'\n    },\n    '&$round': {\n      borderRadius: 34,\n      '&:before': {\n        borderRadius: '50%'\n      }\n    }\n\n  },\n  '@global': {\n    input: {\n      '&:checked + $slider': {\n        backgroundColor: theme.palette.greyscale(0.5)\n      },\n      '&:focus + $slider': {\n        boxShadow: '0 0 1px #2196F3'\n      },\n      '&:checked + $slider:before': {\n        '-webkit-transform': 'translateX(26px)',\n        '-moz-transform': 'translateX(26px)',\n        '-o-transform': 'translateX(26px)',\n        '-ms-transform': 'translateX(26px)',\n        'transform': 'translateX(26px)'\n      }\n    }\n  },\n  round: {}\n})\n\nexport default withStyles(styles)(ToggleSwitch)\n"]},"metadata":{},"sourceType":"module"}