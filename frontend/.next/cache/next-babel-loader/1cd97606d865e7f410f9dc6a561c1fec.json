{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/containers/ExplorerContainer.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Explorer from '../views/wrappers/Explorer';\nimport { DEFAULT, SEARCH, setMode } from '../../redux/actions/Interface/creators';\nimport { searchRecords, searchTemplates } from '../../redux/actions/Explorer/thunks';\nimport { extendTemplates, publishRecord, publishTemplate } from '../../redux/actions/Publisher/creators';\nconst Records = 'Records';\nconst Templates = 'Templates';\n\nconst ExplorerContainer = ({\n  defaultRecords,\n  defaultTemplates,\n  searchedRecords,\n  searchedTemplates,\n  mode,\n  defaultRecordPage,\n  defaultTemplatePage,\n  searchedRecordPage,\n  searchedTemplatePage,\n  defaultRecordKeys,\n  defaultTemplateKeys,\n  searchedRecordKeys,\n  searchedTemplateKeys,\n  recordsFetching,\n  recordsSuccess,\n  recordsError,\n  templatesFetching,\n  templatesSuccess,\n  templatesError,\n  searchRecords,\n  searchTemplates,\n  setMode,\n  publishRecord,\n  publishTemplate,\n  extendTemplates,\n  daemonApi,\n  showOnlyVerifiedPublishers\n}) => {\n  const {\n    0: searchInput,\n    1: setSearchInput\n  } = useState('');\n  const {\n    0: selectOption,\n    1: setSelectOption\n  } = useState(Records);\n\n  async function isVerified({\n    pubAddr,\n    templateName,\n    apiUrl,\n    localhost\n  }) {\n    try {\n      return await daemonApi.isVerifiedPublisher({\n        pubAddr,\n        templateName,\n        apiUrl,\n        localhost\n      });\n    } catch (err) {\n      console.error(`Failed to verify pub address: ${pubAddr}: \\n ${err}`);\n      return {\n        success: false,\n        error: err\n      };\n    }\n  }\n\n  const {\n    0: selectedTemplates,\n    1: setSelectedTemplates\n  } = useState({});\n\n  function handleSelectTemplate({\n    id,\n    template\n  }) {\n    if (selectedTemplates[id]) {\n      let {\n        [id]: _\n      } = selectedTemplates,\n          newSelection = _objectWithoutProperties(selectedTemplates, [id].map(_toPropertyKey));\n\n      setSelectedTemplates(newSelection);\n    } else {\n      setSelectedTemplates(prevState => {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          [id]: template\n        });\n      });\n    }\n  }\n\n  function handlePublishRecordWithTemplates() {\n    let templates = [];\n\n    for (let tmpl in selectedTemplates) {\n      if (selectedTemplates.hasOwnProperty(tmpl)) {\n        templates.push(selectedTemplates[tmpl]);\n      }\n    }\n\n    publishRecord(templates);\n  }\n\n  function handleExtendTemplates() {\n    // get template IDs\n    let ids = [];\n\n    for (let tmpl in selectedTemplates) {\n      if (selectedTemplates.hasOwnProperty(tmpl)) {\n        ids.push(selectedTemplates[tmpl].identifier);\n      }\n    }\n\n    publishTemplate();\n    extendTemplates(ids);\n  }\n\n  function handleSearchInput(e) {\n    setSearchInput(e.target.value);\n  }\n\n  function handleSelectOption(e) {\n    setSelectOption(e.target.value);\n  }\n\n  function handleSearchSubmit() {\n    if (searchInput === '') {\n      setMode(DEFAULT);\n    } else {\n      if (selectOption === Records) {\n        setMode(SEARCH);\n        searchRecords(searchInput);\n      }\n\n      if (selectOption === Templates) {\n        setMode(SEARCH);\n        searchTemplates(searchInput);\n      }\n    }\n  }\n\n  let records, templates;\n\n  if (mode === DEFAULT) {\n    records = defaultRecords;\n    const recordKey = defaultRecordKeys[defaultRecordPage];\n    records = records[recordKey];\n    templates = defaultTemplates;\n    const templateKey = defaultTemplateKeys[defaultTemplatePage];\n    templates = templates[templateKey];\n  } else if (mode === SEARCH) {\n    records = searchedRecords;\n    const recordKey = searchedRecordKeys[searchedRecordPage];\n    records = records[recordKey];\n    templates = searchedTemplates;\n    const templateKey = searchedTemplateKeys[searchedTemplatePage];\n    templates = templates[templateKey];\n  }\n\n  return __jsx(Explorer, {\n    records: records,\n    templates: templates,\n    searchInput: searchInput,\n    selectOption: selectOption,\n    handleSearchInput: handleSearchInput,\n    handleSelectOption: handleSelectOption,\n    handleSearchSubmit: handleSearchSubmit,\n    recordsFetching: recordsFetching,\n    recordsSuccess: recordsSuccess,\n    recordsError: recordsError,\n    templatesFetching: templatesFetching,\n    templatesSuccess: templatesSuccess,\n    templatesError: templatesError,\n    publishRecord: publishRecord,\n    publishTemplate: publishTemplate,\n    extendTemplates: extendTemplates,\n    handleSelectTemplate: handleSelectTemplate,\n    selectedTemplates: selectedTemplates,\n    handlePublishRecordWithTemplates: handlePublishRecordWithTemplates,\n    handleExtendTemplates: handleExtendTemplates,\n    isVerified: isVerified,\n    showOnlyVerifiedPublishers: showOnlyVerifiedPublishers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 10\n    }\n  });\n};\n\nfunction mapStateToProps(state) {\n  // toDo: note:: separate templates and records\n  return {\n    daemonApi: state.Explorer.daemonApi,\n    defaultRecords: state.Explorer.defaultRecords,\n    defaultTemplates: state.Explorer.defaultTemplates,\n    searchedRecords: state.Explorer.searchedRecords,\n    searchedTemplates: state.Explorer.searchedTemplates,\n    mode: state.Interface.mode,\n    defaultRecordPage: state.Interface.defaultRecordPage,\n    defaultTemplatePage: state.Interface.defaultTemplatePage,\n    searchedRecordPage: state.Interface.searchedRecordPage,\n    searchedTemplatePage: state.Interface.searchedTemplatePage,\n    defaultRecordKeys: state.Explorer.defaultRecordKeys,\n    defaultTemplateKeys: state.Explorer.defaultTemplateKeys,\n    searchedRecordKeys: state.Explorer.searchedRecordKeys,\n    searchedTemplateKeys: state.Explorer.searchedTemplateKeys,\n    recordsFetching: state.Explorer.recordsFetching,\n    recordsSuccess: state.Explorer.recordsSuccess,\n    recordsError: state.Explorer.recordsError,\n    templatesFetching: state.Explorer.templatesFetching,\n    templatesSuccess: state.Explorer.templatesSuccess,\n    templatesError: state.Explorer.templatesError,\n    showOnlyVerifiedPublishers: state.Interface.showOnlyVerifiedPublishers\n  };\n}\n\nconst mapDispatchToProps = {\n  setMode,\n  searchRecords,\n  searchTemplates,\n  publishRecord,\n  publishTemplate,\n  extendTemplates\n};\nExplorerContainer.propTypes = {\n  daemonApi: PropTypes.object.isRequired,\n  setMode: PropTypes.func.isRequired,\n  searchRecords: PropTypes.func.isRequired,\n  searchTemplates: PropTypes.func.isRequired,\n  defaultRecords: PropTypes.object,\n  defaultTemplates: PropTypes.object,\n  searchedRecords: PropTypes.object,\n  searchedTemplates: PropTypes.object,\n  mode: PropTypes.string.isRequired,\n  defaultRecordPage: PropTypes.number,\n  defaultTemplatePage: PropTypes.number,\n  searchedRecordPage: PropTypes.number,\n  searchedTemplatePage: PropTypes.number,\n  defaultRecordKeys: PropTypes.array,\n  defaultTemplateKeys: PropTypes.array,\n  searchedRecordKeys: PropTypes.array,\n  searchedTemplateKeys: PropTypes.array,\n  recordsFetching: PropTypes.bool,\n  recordsSuccess: PropTypes.bool,\n  recordsError: PropTypes.bool,\n  templatesFetching: PropTypes.bool,\n  templatesSuccess: PropTypes.bool,\n  templatesError: PropTypes.bool,\n  publishRecord: PropTypes.func.isRequired,\n  publishTemplate: PropTypes.func.isRequired,\n  extendTemplates: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ExplorerContainer);","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/containers/ExplorerContainer.js"],"names":["React","useState","PropTypes","connect","Explorer","DEFAULT","SEARCH","setMode","searchRecords","searchTemplates","extendTemplates","publishRecord","publishTemplate","Records","Templates","ExplorerContainer","defaultRecords","defaultTemplates","searchedRecords","searchedTemplates","mode","defaultRecordPage","defaultTemplatePage","searchedRecordPage","searchedTemplatePage","defaultRecordKeys","defaultTemplateKeys","searchedRecordKeys","searchedTemplateKeys","recordsFetching","recordsSuccess","recordsError","templatesFetching","templatesSuccess","templatesError","daemonApi","showOnlyVerifiedPublishers","searchInput","setSearchInput","selectOption","setSelectOption","isVerified","pubAddr","templateName","apiUrl","localhost","isVerifiedPublisher","err","console","error","success","selectedTemplates","setSelectedTemplates","handleSelectTemplate","id","template","_","newSelection","prevState","handlePublishRecordWithTemplates","templates","tmpl","hasOwnProperty","push","handleExtendTemplates","ids","identifier","handleSearchInput","e","target","value","handleSelectOption","handleSearchSubmit","records","recordKey","templateKey","mapStateToProps","state","Interface","mapDispatchToProps","propTypes","object","isRequired","func","string","number","array","bool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Explorer from '../views/wrappers/Explorer'\n\nimport {\n  DEFAULT,\n  SEARCH,\n  setMode\n} from '../../redux/actions/Interface/creators'\nimport { searchRecords, searchTemplates } from '../../redux/actions/Explorer/thunks'\nimport { extendTemplates, publishRecord, publishTemplate } from '../../redux/actions/Publisher/creators'\n\nconst Records = 'Records'\nconst Templates = 'Templates'\n\nconst ExplorerContainer = ({\n  defaultRecords,\n  defaultTemplates,\n  searchedRecords,\n  searchedTemplates,\n  mode,\n  defaultRecordPage,\n  defaultTemplatePage,\n  searchedRecordPage,\n  searchedTemplatePage,\n  defaultRecordKeys,\n  defaultTemplateKeys,\n  searchedRecordKeys,\n  searchedTemplateKeys,\n  recordsFetching,\n  recordsSuccess,\n  recordsError,\n  templatesFetching,\n  templatesSuccess,\n  templatesError,\n  searchRecords,\n  searchTemplates,\n  setMode,\n  publishRecord,\n  publishTemplate,\n  extendTemplates,\n  daemonApi,\n  showOnlyVerifiedPublishers\n}) => {\n  const [searchInput, setSearchInput] = useState('')\n  const [selectOption, setSelectOption] = useState(Records)\n\n  async function isVerified ({ pubAddr, templateName, apiUrl, localhost }) {\n    try {\n      return await daemonApi.isVerifiedPublisher({ pubAddr, templateName, apiUrl, localhost })\n    } catch (err) {\n      console.error(`Failed to verify pub address: ${pubAddr}: \\n ${err}`)\n      return { success: false, error: err }\n    }\n  }\n\n  const [selectedTemplates, setSelectedTemplates] = useState({})\n\n  function handleSelectTemplate ({ id, template }) {\n    if (selectedTemplates[id]) {\n      let { [id]: _, ...newSelection } = selectedTemplates\n      setSelectedTemplates(newSelection)\n    } else {\n      setSelectedTemplates(prevState => {\n        return {\n          ...prevState,\n          [id]: template\n        }\n      })\n    }\n  }\n\n  function handlePublishRecordWithTemplates () {\n    let templates = []\n    for (let tmpl in selectedTemplates) {\n      if (selectedTemplates.hasOwnProperty(tmpl)) {\n        templates.push(selectedTemplates[tmpl])\n      }\n    }\n    publishRecord(templates)\n  }\n\n  function handleExtendTemplates () {\n    // get template IDs\n    let ids = []\n    for (let tmpl in selectedTemplates) {\n      if (selectedTemplates.hasOwnProperty(tmpl)) {\n        ids.push(selectedTemplates[tmpl].identifier)\n      }\n    }\n    publishTemplate()\n    extendTemplates(ids)\n  }\n\n  function handleSearchInput (e) {\n    setSearchInput(e.target.value)\n  }\n\n  function handleSelectOption (e) {\n    setSelectOption(e.target.value)\n  }\n\n  function handleSearchSubmit () {\n    if (searchInput === '') {\n      setMode(DEFAULT)\n    } else {\n      if (selectOption === Records) {\n        setMode(SEARCH)\n        searchRecords(searchInput)\n      }\n      if (selectOption === Templates) {\n        setMode(SEARCH)\n        searchTemplates(searchInput)\n      }\n    }\n  }\n\n  let records, templates\n  if (mode === DEFAULT) {\n    records = defaultRecords\n    const recordKey = defaultRecordKeys[defaultRecordPage]\n    records = records[recordKey]\n\n    templates = defaultTemplates\n    const templateKey = defaultTemplateKeys[defaultTemplatePage]\n    templates = templates[templateKey]\n  } else if (mode === SEARCH) {\n    records = searchedRecords\n    const recordKey = searchedRecordKeys[searchedRecordPage]\n    records = records[recordKey]\n\n    templates = searchedTemplates\n    const templateKey = searchedTemplateKeys[searchedTemplatePage]\n    templates = templates[templateKey]\n  }\n\n  return <Explorer\n    records={records}\n    templates={templates}\n    searchInput={searchInput}\n    selectOption={selectOption}\n    handleSearchInput={handleSearchInput}\n    handleSelectOption={handleSelectOption}\n    handleSearchSubmit={handleSearchSubmit}\n    recordsFetching={recordsFetching}\n    recordsSuccess={recordsSuccess}\n    recordsError={recordsError}\n    templatesFetching={templatesFetching}\n    templatesSuccess={templatesSuccess}\n    templatesError={templatesError}\n    publishRecord={publishRecord}\n    publishTemplate={publishTemplate}\n    extendTemplates={extendTemplates}\n    handleSelectTemplate={handleSelectTemplate}\n    selectedTemplates={selectedTemplates}\n    handlePublishRecordWithTemplates={handlePublishRecordWithTemplates}\n    handleExtendTemplates={handleExtendTemplates}\n    isVerified={isVerified}\n    showOnlyVerifiedPublishers={showOnlyVerifiedPublishers}\n  />\n}\n\nfunction mapStateToProps (state) { // toDo: note:: separate templates and records\n  return {\n    daemonApi: state.Explorer.daemonApi,\n    defaultRecords: state.Explorer.defaultRecords,\n    defaultTemplates: state.Explorer.defaultTemplates,\n    searchedRecords: state.Explorer.searchedRecords,\n    searchedTemplates: state.Explorer.searchedTemplates,\n    mode: state.Interface.mode,\n    defaultRecordPage: state.Interface.defaultRecordPage,\n    defaultTemplatePage: state.Interface.defaultTemplatePage,\n    searchedRecordPage: state.Interface.searchedRecordPage,\n    searchedTemplatePage: state.Interface.searchedTemplatePage,\n    defaultRecordKeys: state.Explorer.defaultRecordKeys,\n    defaultTemplateKeys: state.Explorer.defaultTemplateKeys,\n    searchedRecordKeys: state.Explorer.searchedRecordKeys,\n    searchedTemplateKeys: state.Explorer.searchedTemplateKeys,\n    recordsFetching: state.Explorer.recordsFetching,\n    recordsSuccess: state.Explorer.recordsSuccess,\n    recordsError: state.Explorer.recordsError,\n    templatesFetching: state.Explorer.templatesFetching,\n    templatesSuccess: state.Explorer.templatesSuccess,\n    templatesError: state.Explorer.templatesError,\n    showOnlyVerifiedPublishers: state.Interface.showOnlyVerifiedPublishers\n  }\n}\n\nconst mapDispatchToProps = {\n  setMode,\n  searchRecords,\n  searchTemplates,\n  publishRecord,\n  publishTemplate,\n  extendTemplates\n}\n\nExplorerContainer.propTypes = {\n  daemonApi: PropTypes.object.isRequired,\n  setMode: PropTypes.func.isRequired,\n  searchRecords: PropTypes.func.isRequired,\n  searchTemplates: PropTypes.func.isRequired,\n  defaultRecords: PropTypes.object,\n  defaultTemplates: PropTypes.object,\n  searchedRecords: PropTypes.object,\n  searchedTemplates: PropTypes.object,\n  mode: PropTypes.string.isRequired,\n  defaultRecordPage: PropTypes.number,\n  defaultTemplatePage: PropTypes.number,\n  searchedRecordPage: PropTypes.number,\n  searchedTemplatePage: PropTypes.number,\n  defaultRecordKeys: PropTypes.array,\n  defaultTemplateKeys: PropTypes.array,\n  searchedRecordKeys: PropTypes.array,\n  searchedTemplateKeys: PropTypes.array,\n  recordsFetching: PropTypes.bool,\n  recordsSuccess: PropTypes.bool,\n  recordsError: PropTypes.bool,\n  templatesFetching: PropTypes.bool,\n  templatesSuccess: PropTypes.bool,\n  templatesError: PropTypes.bool,\n  publishRecord: PropTypes.func.isRequired,\n  publishTemplate: PropTypes.func.isRequired,\n  extendTemplates: PropTypes.func.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExplorerContainer)\n"]},"metadata":{},"sourceType":"module"}