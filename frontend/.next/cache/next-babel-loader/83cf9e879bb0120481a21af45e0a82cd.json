{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Networks, OIP } from 'js-oip';\nimport { ECPair, payments } from 'bitcoinjs-lib';\nimport config from '../../../config.js';\nimport { setFloBalance, setFloExchangeRate, txError, txPending, txSuccess, purchase_record } from './creators';\nimport axios from 'axios';\nimport { updatePurchasedTxid } from '../Autopay/creators';\nvar floMainnet = Networks.floMainnet,\n    floTestnet = Networks.floTestnet;\nvar network = {\n  flo_mainnet: floMainnet.network,\n  flo_testnet: floTestnet.network\n};\n\nfunction getPubAddress(wif) {\n  var useNetwork = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'mainnet';\n  var floNetwork = useNetwork === 'mainnet' ? network.flo_mainnet : network.floTestnet;\n  var EC = ECPair.fromWIF(wif, floNetwork);\n  return payments.p2pkh({\n    pubkey: EC.publicKey,\n    network: floNetwork\n  }).address;\n} //! ****************************************************TIP Function **************************************************/\n\n\nexport var tip = function tip(_ref) {\n  var paymentAddr = _ref.paymentAddr,\n      paymentTemplate = _ref.paymentTemplate,\n      tipAmountSat = _ref.tipAmountSat,\n      tV = _ref.tV;\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var _getState, Platform, Wallet, wallet, TIP_FIAT, TIP_FLO_SAT, platformAddr, amount, pubCut, pubValue, platformValue, toPlatform, toPublisher, outputs, txid;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _getState = getState(), Platform = _getState.Platform, Wallet = _getState.Wallet;\n              wallet = Wallet.xWallet;\n\n              if (wallet) {\n                _context.next = 5;\n                break;\n              }\n\n              console.error(\"Failed to send tip. private key is probably not set. Wallet undefined\");\n              return _context.abrupt(\"return\");\n\n            case 5:\n              // paymentTemplate holds the sugTip array\n              // tV value is passed up from child PaymentRow depending on which button is clicked\n              // If template doesnt have sugTip, it will default to .2 cents in PaymentRow\n              TIP_FIAT = tV;\n              console.log(\"Tip amount: $\".concat(tV));\n              TIP_FLO_SAT = TIP_FIAT * 1e8 / (Wallet.floExchangeRate * 1e8) * 1e8; //console.log(TIP_FLO_SAT, Wallet.floExchangeRate);\n\n              //! *************** There is currently no platform, when not using a platform we need to change this to ignore the platform cut. It is currently taking a cut\n              // if (Platform.registered) {\n              //   // console.log(Platform.registered, Platform.platformData.floPaymentAddress)\n              //   platformAddr = Platform.platformData.floPaymentAddress;\n              // }\n              amount = tipAmountSat || Math.floor(TIP_FLO_SAT); // console.log('amount', amount);\n\n              if (paymentTemplate && paymentTemplate.platformCut) {\n                pubCut = (100 - paymentTemplate.platformCut) / 100;\n                pubValue = Math.floor(amount * pubCut);\n                platformValue = Math.floor(amount * (paymentTemplate.platformCut / 100));\n                toPlatform = {\n                  address: platformAddr,\n                  value: platformValue\n                };\n              } else pubValue = amount; // console.log(pubCut, pubValue, platformValue)\n\n\n              toPublisher = {\n                address: paymentAddr,\n                value: pubValue\n              };\n              outputs = [toPublisher, toPlatform]; // console.log(outputs);\n\n              _context.prev = 12;\n              _context.next = 15;\n              return dispatch(sendTx(outputs));\n\n            case 15:\n              txid = _context.sent;\n              _context.next = 22;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](12);\n              console.error(_context.t0);\n              return _context.abrupt(\"return\");\n\n            case 22:\n              // console.log('sent tip: ', txid)\n              setTimeout(function () {\n                dispatch(getBalance());\n              }, 5000);\n              return _context.abrupt(\"return\", txid);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[12, 18]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; //! ******************************************* END TIP Function ********************************/\n\nexport var sendTx = function sendTx(outputs) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      var _getState2, Wallet, xWallet, txid;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _getState2 = getState(), Wallet = _getState2.Wallet;\n              xWallet = Wallet.xWallet;\n\n              if (xWallet) {\n                _context2.next = 5;\n                break;\n              }\n\n              console.error(\"Failed to send transaction. private key is probably not set. Wallet undefined\");\n              return _context2.abrupt(\"return\");\n\n            case 5:\n              dispatch(txPending());\n              _context2.prev = 6;\n              _context2.next = 9;\n              return xWallet.sendTx(outputs);\n\n            case 9:\n              txid = _context2.sent;\n              _context2.next = 16;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](6);\n              dispatch(txError(_context2.t0));\n              throw Error(\"Failed to sendTx: \\n \".concat(_context2.t0));\n\n            case 16:\n              dispatch(txSuccess());\n              console.log(\"tx sent: \", txid);\n              return _context2.abrupt(\"return\", txid);\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[6, 12]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var getBalance = function getBalance(addr) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      var _getState3, Wallet, xWallet, address, explorer, res;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _getState3 = getState(), Wallet = _getState3.Wallet;\n              xWallet = Wallet.xWallet;\n\n              if (xWallet) {\n                _context3.next = 5;\n                break;\n              }\n\n              console.error(\"Failed to get balance. private key is probably not set. Wallet undefined\");\n              return _context3.abrupt(\"return\");\n\n            case 5:\n              address = addr || getPubAddress(config.privatekey);\n              explorer = xWallet.explorer;\n              _context3.prev = 7;\n              _context3.next = 10;\n              return explorer.getAddress(address);\n\n            case 10:\n              res = _context3.sent;\n              _context3.next = 17;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](7);\n              console.error(\"failed to get address from explorer: \\n \".concat(_context3.t0));\n              return _context3.abrupt(\"return\");\n\n            case 17:\n              dispatch(setFloBalance(res.balanceSat));\n              return _context3.abrupt(\"return\", res.balanceSat);\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[7, 13]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var getExchangeRate = function getExchangeRate() {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n      var _exchange, xr;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _exchange = getState().Wallet._exchange;\n              _context4.prev = 1;\n              _context4.next = 4;\n              return _exchange.getExchangeRate('flo', 'usd');\n\n            case 4:\n              xr = _context4.sent;\n              _context4.next = 11;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.log(\"Failed to get exchange rate: \\n \".concat(_context4.t0));\n              return _context4.abrupt(\"return\");\n\n            case 11:\n              dispatch(setFloExchangeRate(xr));\n              return _context4.abrupt(\"return\", xr);\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 7]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n}; //! ****************************************************PurchaseRecord Function **************************************************/\n\nexport var purchaseRecord = function purchaseRecord(_ref6) {\n  var txid = _ref6.txid,\n      terms = _ref6.terms;\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n      var _getState4, Platform, Wallet, wallet, response, _response$data, valid_until, pre_image, res, _res$data$results$0$r, amount, destination, paymentAddr, payment_txid, sleep, output;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _getState4 = getState(), Platform = _getState4.Platform, Wallet = _getState4.Wallet;\n              wallet = Wallet.xWallet;\n\n              if (wallet) {\n                _context5.next = 5;\n                break;\n              }\n\n              console.error(\"Failed to send tip. private key is probably not set. Wallet undefined\");\n              return _context5.abrupt(\"return\");\n\n            case 5:\n              _context5.next = 7;\n              return axios.get(\"https://api.oip.io/oip/o5/location/request?id=\".concat(txid, \"&terms=\").concat(terms));\n\n            case 7:\n              response = _context5.sent;\n              _response$data = response.data, valid_until = _response$data.valid_until, pre_image = _response$data.pre_image;\n              _context5.next = 11;\n              return axios.get(\"https://api.oip.io/oip/o5/record/get/\".concat(txid));\n\n            case 11:\n              res = _context5.sent;\n              _res$data$results$0$r = res.data.results[0].record.details.tmpl_DE84D583, amount = _res$data$results$0$r.amount, destination = _res$data$results$0$r.destination;\n              paymentAddr = destination;\n              console.log(\"PURCHASE REFCORD!\");\n              _context5.prev = 15;\n\n              sleep = function sleep(ms) {\n                return new Promise(function (resolve) {\n                  return setTimeout(resolve, ms);\n                });\n              };\n\n              output = {\n                address: paymentAddr,\n                value: amount * 1e8 //satoshis\n\n              };\n              _context5.next = 20;\n              return dispatch(sendTx(output));\n\n            case 20:\n              payment_txid = _context5.sent;\n              _context5.next = 23;\n              return sleep(2000);\n\n            case 23:\n              _context5.next = 29;\n              break;\n\n            case 25:\n              _context5.prev = 25;\n              _context5.t0 = _context5[\"catch\"](15);\n              console.error(_context5.t0);\n              return _context5.abrupt(\"return\", {\n                'error': _context5.t0\n              });\n\n            case 29:\n              return _context5.abrupt(\"return\", dispatch(updatePurchasedTxid({\n                txid: txid,\n                payment_txid: payment_txid,\n                terms: terms\n              })));\n\n            case 30:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[15, 25]]);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n}; //todo: To grab previous purchases:  find amd search addresses from commerical content; in wallet's transactions if so, grab the txid. push that into...\n// the global state.autoPay.purchased. \n// UseEffect will call proofOfPurchase and take care of the rest.\n\nexport var proofOfPurchase = function proofOfPurchase(_ref8) {\n  var payment_txid = _ref8.payment_txid,\n      txid = _ref8.txid,\n      terms = _ref8.terms;\n  return /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch, getState) {\n      var _getState5, Platform, Wallet, wallet, response, _response$data2, valid_until, pre_image, signature, publicAddress, body, res;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _getState5 = getState(), Platform = _getState5.Platform, Wallet = _getState5.Wallet;\n              wallet = Wallet.xWallet;\n\n              if (wallet) {\n                _context6.next = 5;\n                break;\n              }\n\n              console.error(\"Failed to send tip. private key is probably not set. Wallet undefined\");\n              return _context6.abrupt(\"return\");\n\n            case 5:\n              _context6.next = 7;\n              return axios.get(\"https://api.oip.io/oip/o5/location/request?id=\".concat(txid, \"&terms=\").concat(terms));\n\n            case 7:\n              response = _context6.sent;\n              _response$data2 = response.data, valid_until = _response$data2.valid_until, pre_image = _response$data2.pre_image;\n              signature = wallet.signMessage(pre_image);\n              publicAddress = getPubAddress(config.privatekey);\n              body = {\n                valid_until: valid_until,\n                id: txid,\n                term: terms,\n                pre_image: pre_image,\n                signature: signature,\n                payment_txid: payment_txid,\n                signing_address: publicAddress\n              };\n              _context6.prev = 12;\n              _context6.next = 15;\n              return axios.post(\"https://api.oip.io/oip/o5/location/proof?id=\".concat(txid, \"&terms=\").concat(terms), body);\n\n            case 15:\n              res = _context6.sent;\n              return _context6.abrupt(\"return\", res.data);\n\n            case 19:\n              _context6.prev = 19;\n              _context6.t0 = _context6[\"catch\"](12);\n              console.log(_context6.t0);\n\n            case 22:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[12, 19]]);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n}; //! ****************************************************END PurchaseRecord Function **************************************************/","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/redux/actions/Wallet/thunks.js"],"names":["Networks","OIP","ECPair","payments","config","setFloBalance","setFloExchangeRate","txError","txPending","txSuccess","purchase_record","axios","updatePurchasedTxid","floMainnet","floTestnet","network","flo_mainnet","flo_testnet","getPubAddress","wif","useNetwork","floNetwork","EC","fromWIF","p2pkh","pubkey","publicKey","address","tip","paymentAddr","paymentTemplate","tipAmountSat","tV","dispatch","getState","Platform","Wallet","wallet","xWallet","console","error","TIP_FIAT","log","TIP_FLO_SAT","floExchangeRate","amount","Math","floor","platformCut","pubCut","pubValue","platformValue","toPlatform","platformAddr","value","toPublisher","outputs","sendTx","txid","setTimeout","getBalance","Error","addr","privatekey","explorer","getAddress","res","balanceSat","getExchangeRate","_exchange","xr","purchaseRecord","terms","get","response","data","valid_until","pre_image","results","record","details","tmpl_DE84D583","destination","sleep","ms","Promise","resolve","output","payment_txid","proofOfPurchase","signature","signMessage","publicAddress","body","id","term","signing_address","post"],"mappings":"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","sourcesContent":["import { Networks, OIP } from 'js-oip';\nimport { ECPair, payments } from 'bitcoinjs-lib';\nimport config from '../../../config.js';\nimport {\n  setFloBalance,\n  setFloExchangeRate,\n  txError,\n  txPending,\n  txSuccess,\n  purchase_record\n} from './creators';\nimport axios from 'axios'\nimport { updatePurchasedTxid } from '../Autopay/creators'\n\nconst { floMainnet, floTestnet } = Networks;\n\nconst network = {\n  flo_mainnet: floMainnet.network,\n  flo_testnet: floTestnet.network\n};\nfunction getPubAddress(wif, useNetwork = 'mainnet') {\n  let floNetwork =\n    useNetwork === 'mainnet' ? network.flo_mainnet : network.floTestnet;\n  const EC = ECPair.fromWIF(wif, floNetwork);\n  return payments.p2pkh({ pubkey: EC.publicKey, network: floNetwork }).address;\n}\n//! ****************************************************TIP Function **************************************************/\nexport const tip = ({\n  paymentAddr,\n  paymentTemplate,\n  tipAmountSat,\n  tV\n}) => async (dispatch, getState) => {\n  const { Platform, Wallet } = getState();\n  const wallet = Wallet.xWallet;\n  if (!wallet) {\n    console.error(\n      `Failed to send tip. private key is probably not set. Wallet undefined`\n    );\n    return;\n  }\n  // paymentTemplate holds the sugTip array\n  // tV value is passed up from child PaymentRow depending on which button is clicked\n  // If template doesnt have sugTip, it will default to .2 cents in PaymentRow\n\n  const TIP_FIAT = tV;\n  console.log(`Tip amount: $${tV}`);\n  const TIP_FLO_SAT = ((TIP_FIAT * 1e8) / (Wallet.floExchangeRate * 1e8)) * 1e8;\n  //console.log(TIP_FLO_SAT, Wallet.floExchangeRate);\n\n  let platformAddr;\n  //! *************** There is currently no platform, when not using a platform we need to change this to ignore the platform cut. It is currently taking a cut\n  // if (Platform.registered) {\n  //   // console.log(Platform.registered, Platform.platformData.floPaymentAddress)\n  //   platformAddr = Platform.platformData.floPaymentAddress;\n  // }\n\n  let amount = tipAmountSat || Math.floor(TIP_FLO_SAT);\n  // console.log('amount', amount);\n\n  let pubCut;\n  let pubValue;\n  let platformValue;\n  let toPlatform;\n\n  if (paymentTemplate && paymentTemplate.platformCut) {\n    pubCut = (100 - paymentTemplate.platformCut) / 100;\n    pubValue = Math.floor(amount * pubCut);\n    platformValue = Math.floor(amount * (paymentTemplate.platformCut / 100));\n    toPlatform = {\n      address: platformAddr,\n      value: platformValue\n    };\n  } else pubValue = amount;\n\n  // console.log(pubCut, pubValue, platformValue)\n\n  const toPublisher = {\n    address: paymentAddr,\n    value: pubValue\n  };\n\n  let outputs = [toPublisher, toPlatform];\n  // console.log(outputs);\n  let txid;\n  try {\n    txid = await dispatch(sendTx(outputs));\n  } catch (err) {\n    console.error(err);\n    return;\n  }\n\n  // console.log('sent tip: ', txid)\n  setTimeout(() => {\n    dispatch(getBalance());\n  }, 5000);\n  return txid;\n};\n//! ******************************************* END TIP Function ********************************/\n\nexport const sendTx = (outputs) => async (dispatch, getState) => {\n  const { Wallet } = getState();\n  const xWallet = Wallet.xWallet;\n  if (!xWallet) {\n    console.error(\n      `Failed to send transaction. private key is probably not set. Wallet undefined`\n    );\n    return;\n  }\n\n  dispatch(txPending());\n  let txid;\n  try {\n    txid = await xWallet.sendTx(outputs);\n  } catch (err) {\n    dispatch(txError(err));\n    throw Error(`Failed to sendTx: \\n ${err}`);\n  }\n  dispatch(txSuccess());\n  console.log(`tx sent: `, txid);\n  return txid;\n};\n\nexport const getBalance = (addr) => async (dispatch, getState) => {\n  const { Wallet } = getState();\n  const xWallet = Wallet.xWallet;\n  if (!xWallet) {\n    console.error(\n      `Failed to get balance. private key is probably not set. Wallet undefined`\n    );\n    return;\n  }\n  let address = addr || getPubAddress(config.privatekey);\n  let explorer = xWallet.explorer;\n  let res;\n  try {\n    res = await explorer.getAddress(address);\n  } catch (err) {\n    console.error(`failed to get address from explorer: \\n ${err}`);\n    return;\n  }\n  dispatch(setFloBalance(res.balanceSat));\n  return res.balanceSat;\n};\n\nexport const getExchangeRate = () => async (dispatch, getState) => {\n  const { _exchange } = getState().Wallet;\n  let xr;\n  try {\n    xr = await _exchange.getExchangeRate('flo', 'usd');\n  } catch (err) {\n    console.log(`Failed to get exchange rate: \\n ${err}`);\n    return;\n  }\n  dispatch(setFloExchangeRate(xr));\n  return xr;\n};\n//! ****************************************************PurchaseRecord Function **************************************************/\n\nexport const purchaseRecord = ({\n  txid,\n  terms,\n}) => async (dispatch, getState) => {\n  const { Platform, Wallet } = getState();\n  const wallet = Wallet.xWallet;\n  if (!wallet) {\n    console.error(\n      `Failed to send tip. private key is probably not set. Wallet undefined`\n    );\n    return;\n  }\n  \n  const response = await axios.get(`https://api.oip.io/oip/o5/location/request?id=${txid}&terms=${terms}`)\n\n  const { valid_until, pre_image, } = response.data\n\n  const res = await axios.get(`https://api.oip.io/oip/o5/record/get/${txid}`)\n\n  const { amount, destination } = res.data.results[0].record.details.tmpl_DE84D583\n\n  const paymentAddr = destination;\n\n  console.log(\"PURCHASE REFCORD!\")\n  let payment_txid;\n\n\n  try {\n\n    let output = {\n      address: paymentAddr,\n      value: (amount * 1e8) //satoshis\n  }\n\n  payment_txid = await dispatch(sendTx(output));\n\n    function sleep(ms) {\n      return new Promise(resolve => setTimeout(resolve, ms));\n    }\n    \n    \n    await sleep(2000)\n\n  } catch (err) {\n    console.error(err);\n    return {'error': err}\n  }\n\n\n  return dispatch(updatePurchasedTxid({txid, payment_txid, terms }))\n\n  // setTimeout(() => {\n  //   dispatch(getBalance());\n  // }, 5000);\n\n};\n\n\n\n//todo: To grab previous purchases:  find amd search addresses from commerical content; in wallet's transactions if so, grab the txid. push that into...\n// the global state.autoPay.purchased. \n// UseEffect will call proofOfPurchase and take care of the rest.\n\nexport const proofOfPurchase = ({\n  payment_txid,\n  txid,\n  terms\n}) => async (dispatch, getState) => {\n  const { Platform, Wallet } = getState();\n  const wallet = Wallet.xWallet;\n  if (!wallet) {\n    console.error(\n      `Failed to send tip. private key is probably not set. Wallet undefined`\n    );\n    return;\n  }\n\n  const response = await axios.get(`https://api.oip.io/oip/o5/location/request?id=${txid}&terms=${terms}`)\n\n  const { valid_until, pre_image, } = response.data\n\n  let signature = wallet.signMessage(pre_image)\n  let publicAddress = getPubAddress(config.privatekey)\n  \n  const body = { valid_until, id: txid, term: terms, pre_image, signature, payment_txid, signing_address: publicAddress }\n\n  try {\n    const res = await axios.post(`https://api.oip.io/oip/o5/location/proof?id=${txid}&terms=${terms}`, body)\n\n    return res.data\n  } catch(error) {\n    console.log(error)\n  }\n}\n//! ****************************************************END PurchaseRecord Function **************************************************/\n\n\n"]},"metadata":{},"sourceType":"module"}