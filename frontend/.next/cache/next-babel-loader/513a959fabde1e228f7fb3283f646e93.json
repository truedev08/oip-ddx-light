{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport withStyles from 'react-jss';\nimport TemplateCard from '../templateCard/TemplateCard';\nimport isObjEmpty from '../../../../util/isObjEmpty';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n    padding: [0, 20],\n    flex: 1\n  },\n  [`@media (max-width: ${theme.breakpoints['sm']}px)`]: {\n    root: {\n      justifyContent: 'center'\n    }\n  }\n});\n\nconst TemplateMap = ({\n  classes,\n  templates,\n  publishRecord,\n  publishTemplate,\n  extendTemplates,\n  handleSelectTemplate,\n  selectedTemplates\n}) => {\n  let templateData = [];\n\n  if (!isObjEmpty(templates)) {\n    templateData = [...templates.results];\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, templateData.map(payload => {\n    if (!payload.template) {\n      console.error(`missing template data for following payload: `, payload);\n      return null;\n    }\n\n    return __jsx(TemplateCard, {\n      template: payload.template,\n      meta: payload.meta,\n      fileDescriptor: payload.file_descriptor_set,\n      key: payload.template.name,\n      publishRecord: publishRecord,\n      publishTemplate: publishTemplate,\n      extendTemplates: extendTemplates,\n      handleSelectTemplate: handleSelectTemplate,\n      selectedTemplates: selectedTemplates\n    });\n  }));\n};\n\nexport default withStyles(styles)(TemplateMap);","map":null,"metadata":{},"sourceType":"module"}