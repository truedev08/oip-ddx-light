{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { SheetsRegistry, JssProvider, createGenerateId } from 'react-jss';\nexport default class JssDocument extends Document {\n  render() {\n    return __jsx(Html, null, __jsx(Head, null, __jsx(\"style\", null, `\n            html, body, #__next {\n              height: 100%;\n              margin: 0;\n              padding: 0;\n              font-family: sans-serif, arial;\n            },\n          `)), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n  static async getInitialProps(ctx) {\n    const registry = new SheetsRegistry();\n    const generateId = createGenerateId();\n    const originalRenderPage = ctx.renderPage;\n\n    ctx.renderPage = () => originalRenderPage({\n      enhanceApp: App => props => __jsx(JssProvider, {\n        registry: registry,\n        generateId: generateId\n      }, __jsx(App, props))\n    });\n\n    const initialProps = await Document.getInitialProps(ctx);\n    return _objectSpread(_objectSpread({}, initialProps), {}, {\n      styles: __jsx(React.Fragment, null, initialProps.styles, __jsx(\"style\", {\n        id: \"server-side-styles\"\n      }, registry.toString()))\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}