{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport withStyles from 'react-jss';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    flex: '0 0 50px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: [0, 30],\n    position: 'relative'\n  },\n  tipButton: {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    left: 30,\n    backgroundColor: 'transparent',\n    border: 'none',\n    outline: 'none',\n    '&:hover': {\n      cursor: 'pointer'\n    },\n    '& > img': {\n      height: 40,\n      '&:hover': {\n        height: 42\n      }\n    }\n  },\n  transactionContainer: {\n    marginLeft: '30px'\n  },\n  transactionLink: {\n    cursor: 'pointer',\n    borderBottom: 'none',\n    color: theme.palette.primary.main\n  }\n});\n\nconst PaymentRow = ({\n  classes,\n  paymentTemplate,\n  paymentAddress,\n  tip\n}) => {\n  const {\n    0: txid,\n    1: setTxid\n  } = useState(undefined);\n  const {\n    0: showTxid,\n    1: setShowTxid\n  } = useState(false);\n\n  async function sendTip(tV) {\n    let tx = await tip({\n      paymentAddr: paymentAddress,\n      paymentTemplate,\n      tV\n    });\n    console.log('tip txid: ', tx);\n\n    if (tx) {\n      setTxid(tx);\n      setShowTxid(true);\n    }\n\n    setTimeout(() => {\n      setShowTxid(false);\n    }, 20000);\n  }\n  /**Storing sugTip amounts in suggestedTips */\n\n\n  let suggestedTips = paymentTemplate.sugTip; // console.log(suggestedTips);\n\n  /**Mapping over suggestedTips and returning a button for each with the suggested tip, if no suggestedTip return default button */\n\n  if (suggestedTips) {\n    return __jsx(\"div\", {\n      className: classes.root\n    }, suggestedTips.map(tipValue => {\n      return __jsx(\"button\", {\n        //! sendTip takes the tipvalue and passes it back to the thunk. That vaule is used to calculate tip based on what is clicked\n        onClick: () => sendTip(tipValue),\n        className: classes.tipButton,\n        key: tipValue\n      }, __jsx(\"h4\", null, \"$\", tipValue), __jsx(\"img\", {\n        src: '/static/assets/icons/tip.png',\n        alt: 'tip'\n      }));\n    }), __jsx(\"div\", {\n      className: classes.transactionContainer\n    }, showTxid && __jsx(\"a\", {\n      target: \"_blank\",\n      href: `https://livenet.flocha.in/tx/${txid}`,\n      className: classes.transactionLink\n    }, \"See payment here\")));\n  } else {\n    return __jsx(\"div\", {\n      className: classes.root\n    }, __jsx(\"button\", {\n      onClick: () => sendTip(0.2),\n      className: classes.tipButton\n    }, __jsx(\"h4\", null, \".20\\uD834\\uDDCD\"), __jsx(\"img\", {\n      src: '/static/assets/icons/tip.png',\n      alt: 'tip'\n    })), __jsx(\"div\", {\n      className: classes.transactionContainer\n    }, showTxid && __jsx(\"a\", {\n      target: \"_blank\",\n      href: `https://livenet.flocha.in/tx/${txid}`,\n      className: classes.transactionLink\n    }, \"See payment here\")));\n  }\n};\n\nexport default withStyles(styles)(PaymentRow);","map":null,"metadata":{},"sourceType":"module"}