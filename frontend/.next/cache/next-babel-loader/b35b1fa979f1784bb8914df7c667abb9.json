{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/views/dumb/navMenuMobile/NavMenuMobile.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport withStyles from 'react-jss';\nimport PropTypes from 'prop-types';\nimport { MdMenu, MdClose } from 'react-icons/md';\nimport useWindowSize from '../../../../helpers/hooks/useWindowSize';\n\nconst styles = theme => ({\n  root: {\n    display: 'none',\n    marginRight: 40,\n    color: theme.palette.background.main\n  },\n  responsiveMenu: {\n    display: 'none'\n  },\n  tableOfContents: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  menuToggle: {\n    display: 'flex',\n    cursor: 'pointer',\n    fontSize: 31\n  },\n  [`@media (max-width: ${theme.breakpoints['md']}px)`]: {\n    root: {\n      display: 'flex'\n    }\n  }\n});\n\nconst NavMenuMobile = ({\n  classes,\n  pages,\n  activePage,\n  setActivePage\n}) => {\n  const {\n    0: isOpen,\n    1: toggleMenu\n  } = useState(false);\n  const {\n    width\n  } = useWindowSize({});\n  useEffect(() => {\n    if (width > 960) {\n      toggleMenu(false);\n    }\n  }, [width]);\n  useEffect(() => {\n    toggleMenu(false);\n  }, [activePage]);\n\n  function handleToggleMenu() {\n    toggleMenu(prevState => !prevState);\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }, __jsx(\"span\", {\n    className: classes.menuToggle,\n    onClick: handleToggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, isOpen ? __jsx(MdClose, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }) : __jsx(MdMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 31\n    }\n  })), isOpen ? __jsx(NavJSS, {\n    pages: pages,\n    setActivePage: setActivePage,\n    activePage: activePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }) : null);\n};\n\nconst navStyles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute',\n    top: 70,\n    backgroundColor: theme.palette.background.main,\n    width: 175,\n    right: 0,\n    boxShadow: theme.shadows[2],\n    zIndex: 300,\n    color: theme.palette.primary.main,\n    padding: [20, 0]\n  },\n  navItem: {\n    display: 'flex',\n    flex: '0 0 40px',\n    flexDirection: 'row',\n    alignItems: 'center',\n    fontWeight: 'bold',\n    padding: [10, 0],\n    textTransform: 'capitalize',\n    cursor: 'pointer',\n    '&:hover': {\n      color: theme.palette.background.main,\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  pageName: {\n    marginLeft: 20\n  }\n});\n\nconst Nav = ({\n  classes,\n  pages,\n  setActivePage\n}) => {\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }\n  }, pages.map((page, i) => {\n    let displayName;\n\n    if (page === 'publisher') {\n      displayName = 'New Template';\n    } else if (page === 'explorer') {\n      displayName = 'Explorers';\n    } else if (page === 'autoPay') {\n      displayName = 'Autopay';\n    } else displayName = page;\n\n    return __jsx(\"div\", {\n      className: classes.navItem,\n      key: i,\n      onClick: () => setActivePage(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 14\n      }\n    }, __jsx(\"span\", {\n      className: classes.pageName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, displayName));\n  }));\n};\n\nconst NavJSS = withStyles(navStyles)(Nav);\nNavMenuMobile.propTypes = {\n  classes: PropTypes.object.isRequired,\n  activePage: PropTypes.string,\n  setActivePage: PropTypes.func.isRequired,\n  pages: PropTypes.array.isRequired\n};\nexport default withStyles(styles, {\n  injectTheme: true\n})(NavMenuMobile);","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/views/dumb/navMenuMobile/NavMenuMobile.js"],"names":["React","useState","useEffect","withStyles","PropTypes","MdMenu","MdClose","useWindowSize","styles","theme","root","display","marginRight","color","palette","background","main","responsiveMenu","tableOfContents","flexDirection","menuToggle","cursor","fontSize","breakpoints","NavMenuMobile","classes","pages","activePage","setActivePage","isOpen","toggleMenu","width","handleToggleMenu","prevState","navStyles","position","top","backgroundColor","right","boxShadow","shadows","zIndex","primary","padding","navItem","flex","alignItems","fontWeight","textTransform","pageName","marginLeft","Nav","map","page","i","displayName","NavJSS","propTypes","object","isRequired","string","func","array","injectTheme"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport withStyles from 'react-jss'\nimport PropTypes from 'prop-types'\nimport { MdMenu, MdClose } from 'react-icons/md'\nimport useWindowSize from '../../../../helpers/hooks/useWindowSize'\n\nconst styles = theme => ({\n  root: {\n    display: 'none',\n    marginRight: 40,\n    color: theme.palette.background.main\n  },\n  responsiveMenu: {\n    display: 'none'\n  },\n  tableOfContents: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  menuToggle: {\n    display: 'flex',\n    cursor: 'pointer',\n    fontSize: 31\n  },\n  [`@media (max-width: ${theme.breakpoints['md']}px)`]: {\n    root: {\n      display: 'flex'\n    }\n  }\n})\n\nconst NavMenuMobile = ({\n  classes,\n  pages,\n  activePage,\n  setActivePage\n}) => {\n  const [isOpen, toggleMenu] = useState(false)\n\n  const { width } = useWindowSize({})\n  useEffect(() => {\n    if (width > 960) {\n      toggleMenu(false)\n    }\n  }, [width])\n\n  useEffect(() => {\n    toggleMenu(false)\n  }, [activePage])\n\n  function handleToggleMenu () {\n    toggleMenu(prevState => !prevState)\n  }\n  return <div className={classes.root}>\n    <span\n      className={classes.menuToggle}\n      onClick={handleToggleMenu}\n    >\n      {isOpen ? <MdClose /> : <MdMenu />}\n    </span>\n    {isOpen ? <NavJSS\n      pages={pages}\n      setActivePage={setActivePage}\n      activePage={activePage}\n    /> : null}\n  </div>\n}\n\nconst navStyles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute',\n    top: 70,\n    backgroundColor: theme.palette.background.main,\n    width: 175,\n    right: 0,\n    boxShadow: theme.shadows[2],\n    zIndex: 300,\n    color: theme.palette.primary.main,\n    padding: [20, 0]\n  },\n  navItem: {\n    display: 'flex',\n    flex: '0 0 40px',\n    flexDirection: 'row',\n    alignItems: 'center',\n    fontWeight: 'bold',\n    padding: [10, 0],\n    textTransform: 'capitalize',\n    cursor: 'pointer',\n    '&:hover': {\n      color: theme.palette.background.main,\n      backgroundColor: theme.palette.primary.main\n\n    }\n  },\n  pageName: {\n    marginLeft: 20\n  }\n})\n\nconst Nav = ({ classes, pages, setActivePage }) => {\n  return <div className={classes.root}>\n    {pages.map((page, i) => {\n      let displayName\n      if (page === 'publisher') {\n        displayName = 'New Template'\n      } else if (page === 'explorer') {\n        displayName = 'Explorers'\n      } else if (page === 'autoPay') {\n        displayName = 'Autopay'\n      } else displayName = page\n      return <div\n        className={classes.navItem}\n        key={i}\n        onClick={() => setActivePage(page)}\n      >\n        <span className={classes.pageName}>{displayName}</span>\n      </div>\n    })}\n  </div>\n}\nconst NavJSS = withStyles(navStyles)(Nav)\n\nNavMenuMobile.propTypes = {\n  classes: PropTypes.object.isRequired,\n  activePage: PropTypes.string,\n  setActivePage: PropTypes.func.isRequired,\n  pages: PropTypes.array.isRequired\n}\n\nexport default withStyles(styles, { injectTheme: true })(NavMenuMobile)\n"]},"metadata":{},"sourceType":"module"}