{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _jsxFileName = \"/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/pages/_app.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport withReduxStore from '../lib/with-redux-store';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider, useTheme } from 'oip-react';\nimport { themeOptions } from '../styles/theme';\nimport 'video.js/dist/video-js.css';\nimport '../static/styles/css/VideoPlayer.css';\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var style = document.getElementById('server-side-styles');\n\n      if (style) {\n        style.parentNode.removeChild(style);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          reduxStore = _this$props.reduxStore;\n      return __jsx(Provider, {\n        store: reduxStore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, __jsx(ThemedApp, {\n        Component: Component,\n        pageProps: pageProps,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nvar ThemedApp = function ThemedApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useTheme = useTheme(themeOptions, 'light'),\n      theme = _useTheme.theme;\n\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  })));\n};\n\n_s(ThemedApp, \"JkSxfi8+JQlqgIgDOc3wQN+nVIw=\", false, function () {\n  return [useTheme];\n});\n\n_c = ThemedApp;\nexport default _c2 = withReduxStore(MyApp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ThemedApp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/pages/_app.js"],"names":["App","Container","React","withReduxStore","Provider","ThemeProvider","useTheme","themeOptions","MyApp","style","document","getElementById","parentNode","removeChild","props","Component","pageProps","reduxStore","ThemedApp","theme"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,WAAxC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,4BAAP;AACA,OAAO,sCAAP;;IAEMC,K;;;;;;;;;;;;;wCACiB;AACnB,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAd;;AAEA,UAAIF,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAACG,UAAN,CAAiBC,WAAjB,CAA6BJ,KAA7B;AACD;AACF;;;6BACS;AAAA,wBACqC,KAAKK,KAD1C;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWC,SADX,eACWA,SADX;AAAA,UACsBC,UADtB,eACsBA,UADtB;AAGR,aACI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAW,QAAA,SAAS,EAAEF,SAAtB;AAAiC,QAAA,SAAS,EAAEC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADJ;AAKD;;;;EAhBiBhB,G;;AAmBpB,IAAMkB,SAAS,GAAG,SAAZA,SAAY,OAA8B;AAAA;;AAAA,MAA3BH,SAA2B,QAA3BA,SAA2B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBAC5BV,QAAQ,CAACC,YAAD,EAAe,OAAf,CADoB;AAAA,MACtCY,KADsC,aACtCA,KADsC;;AAE9C,SAAO,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,MAAC,SAAD,eAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK,CAAP;AAGD,CALD;;GAAME,S;UACcZ,Q;;;KADdY,S;AAON,qBAAef,cAAc,CAACK,KAAD,CAA7B","sourcesContent":["import App, { Container } from 'next/app'\nimport React from 'react'\nimport withReduxStore from '../lib/with-redux-store'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider, useTheme } from 'oip-react'\nimport { themeOptions } from '../styles/theme'\n\nimport 'video.js/dist/video-js.css'\nimport '../static/styles/css/VideoPlayer.css'\n\nclass MyApp extends App {\n  componentDidMount () {\n    const style = document.getElementById('server-side-styles')\n\n    if (style) {\n      style.parentNode.removeChild(style)\n    }\n  }\n  render () {\n    const { Component, pageProps, reduxStore } = this.props\n\n    return (\n        <Provider store={reduxStore}>\n          <ThemedApp Component={Component} pageProps={pageProps} />\n        </Provider>\n    )\n  }\n}\n\nconst ThemedApp = ({ Component, pageProps }) => {\n  const { theme } = useTheme(themeOptions, 'light')\n  return <ThemeProvider theme={theme}>\n    <Component {...pageProps} />\n  </ThemeProvider>\n}\n\nexport default withReduxStore(MyApp)\n"]},"metadata":{},"sourceType":"module"}