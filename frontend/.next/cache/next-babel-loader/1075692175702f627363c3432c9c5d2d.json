{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport withStyles from 'react-jss';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport NavMenu from '../navMenu/NavMenu';\nimport NavMenuMobile from '../navMenuMobile/NavMenuMobile';\nimport { setActivePage, toggleVerifiedPublishers } from '../../../../redux/actions/Interface/creators';\nimport ToggleSwitch from '../../../ui/ToggleSwitch';\nimport { getDefaultRecords, getDefaultTemplates } from '../../../../redux/actions/Explorer/thunks';\nimport Link from 'next/link';\n\nvar styles = function styles(theme) {\n  return _defineProperty({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      flex: '0 0 180px',\n      backgroundColor: theme.palette.primary.main,\n      boxShadow: theme.shadows[3],\n      zIndex: 300 // justifyContent: 'space-between'\n\n    },\n    titleSpace: {\n      color: theme.palette.background.main,\n      alignSelf: 'center',\n      flexShrink: 0\n    },\n    titleHeader: {\n      fontSize: '3em',\n      fontWeight: 'bold',\n      textAlign: 'center'\n    },\n    toggleSwitch: {\n      marginBottom: 30,\n      marginTop: 'auto',\n      display: 'flex',\n      width: 180,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    toggleSwitchText: {\n      fontSize: 12,\n      color: 'white',\n      margin: [0, 5]\n    },\n    loginButton: {\n      margin: 16,\n      padding: 4,\n      border: 1,\n      borderColor: 'black',\n      borderStyle: 'solid',\n      textAlign: 'center',\n      borderRadius: '3px',\n      backgroundColor: 'white'\n    }\n  }, \"@media (max-width: \".concat(theme.breakpoints['md'], \"px)\"), {\n    root: {\n      flexDirection: 'row',\n      flex: '0 0 70px',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    toggleSwitch: {\n      display: 'none'\n    },\n    titleSpace: {\n      marginLeft: 40,\n      '& h1': {\n        margin: 0,\n        textAlign: 'center'\n      }\n    }\n  });\n};\n\nvar SideBar = function SideBar(_ref2) {\n  var classes = _ref2.classes,\n      activePage = _ref2.activePage,\n      setActivePage = _ref2.setActivePage,\n      pages = _ref2.pages,\n      reroute = _ref2.reroute,\n      router = _ref2.router,\n      floExchangeRate = _ref2.floExchangeRate,\n      floBalanceSat = _ref2.floBalanceSat,\n      toggleVerifiedPublishers = _ref2.toggleVerifiedPublishers,\n      showOnlyVerifiedPublishers = _ref2.showOnlyVerifiedPublishers,\n      getDefaultRecords = _ref2.getDefaultRecords,\n      getDefaultTemplates = _ref2.getDefaultTemplates;\n\n  function handleSetActivePage(page) {\n    if (reroute) {\n      // re route to index page\n      router.push('/');\n    }\n\n    setActivePage(page);\n\n    if (activePage === 'explorer' && page === 'explorer') {\n      getDefaultRecords();\n      getDefaultTemplates();\n    }\n  }\n\n  function handleToggleSwitch(toggleState) {\n    toggleVerifiedPublishers(toggleState);\n  }\n\n  return __jsx(\"div\", {\n    id: \"sidebar\",\n    className: classes.root\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.loginButton\n  }, __jsx(Link, {\n    passHref: true,\n    href: \"/login\"\n  }, __jsx(\"a\", null, \"Login\"))), __jsx(\"div\", {\n    className: classes.loginButton\n  }, __jsx(Link, {\n    passHref: true,\n    href: \"/register\"\n  }, __jsx(\"a\", null, \"Sign Up\")))), __jsx(\"div\", {\n    className: classes.titleSpace\n  }, __jsx(\"h1\", {\n    className: classes.titleHeader\n  }, \"OIP\")), __jsx(NavMenu, {\n    activePage: activePage,\n    setActivePage: handleSetActivePage,\n    pages: pages,\n    floExchangeRate: floExchangeRate,\n    floBalanceSat: floBalanceSat\n  }), __jsx(NavMenuMobile, {\n    activePage: activePage,\n    setActivePage: handleSetActivePage,\n    pages: pages\n  }), __jsx(\"div\", {\n    className: classes.toggleSwitch\n  }, __jsx(\"span\", {\n    className: classes.toggleSwitchText\n  }, \"All\"), __jsx(ToggleSwitchJSS, {\n    onSwitch: handleToggleSwitch,\n    defaultState: showOnlyVerifiedPublishers\n  }), __jsx(\"span\", {\n    className: classes.toggleSwitchText\n  }, \"Verified\")));\n};\n\nvar toggleStyles = function toggleStyles(theme) {\n  return {\n    \"switch\": {\n      width: 26,\n      height: 14\n    },\n    slider: {\n      backgroundColor: 'white',\n      '&:before': {\n        height: 18,\n        width: 18,\n        left: '-8px',\n        top: '-2px',\n        backgroundColor: 'black'\n      }\n    },\n    '@global': {\n      input: {\n        '&:checked + $slider': {\n          backgroundColor: 'black'\n        },\n        '&:checked + $slider:before': {\n          backgroundColor: 'white'\n        }\n      }\n    }\n  };\n};\n\nvar ToggleSwitchJSS = withStyles(toggleStyles)(ToggleSwitch);\n\nfunction mapStateToProps(state) {\n  return {\n    activePage: state.Interface.activePage,\n    pages: state.Interface.pages,\n    floBalanceSat: state.Wallet.floBalanceSat,\n    floExchangeRate: state.Wallet.floExchangeRate,\n    showOnlyVerifiedPublishers: state.Interface.showOnlyVerifiedPublishers\n  };\n}\n\nvar mapDispatchToProps = {\n  setActivePage: setActivePage,\n  toggleVerifiedPublishers: toggleVerifiedPublishers,\n  getDefaultRecords: getDefaultRecords,\n  getDefaultTemplates: getDefaultTemplates\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(SideBar)));","map":null,"metadata":{},"sourceType":"module"}