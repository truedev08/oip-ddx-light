{"ast":null,"code":"import { useEffect, useState } from 'react';\n\nvar useWindowSize = function useWindowSize(_ref) {\n  var _ref$breakpoints = _ref.breakpoints,\n      breakpoints = _ref$breakpoints === void 0 ? {\n    xs: 0,\n    sm: 600,\n    md: 960,\n    lg: 1280,\n    xl: 1920\n  } : _ref$breakpoints,\n      _ref$initialWidth = _ref.initialWidth,\n      initialWidth = _ref$initialWidth === void 0 ? Infinity : _ref$initialWidth,\n      _ref$initialHeight = _ref.initialHeight,\n      initialHeight = _ref$initialHeight === void 0 ? Infinity : _ref$initialHeight;\n  var isClient = true;\n\n  var _useState = useState({\n    width: isClient ? window.innerWidth : initialWidth,\n    height: isClient ? window.innerHeight : initialHeight\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    if (isClient) {\n      var handler = function handler() {\n        setState({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      };\n\n      window.addEventListener('resize', handler);\n      return function () {\n        return window.removeEventListener('resize', handler);\n      };\n    } else {\n      return undefined;\n    }\n  }, []);\n  var height = state.height,\n      width = state.width;\n  var breakpoint;\n\n  if (width < breakpoints['sm']) {\n    breakpoint = 'xs';\n  } else if (width < breakpoints['md'] && width >= breakpoints['sm']) {\n    breakpoint = 'sm';\n  } else if (width < breakpoints['lg'] && width >= breakpoints['md']) {\n    breakpoint = 'md';\n  } else if (width < breakpoints['xl'] && width >= breakpoints['lg']) {\n    breakpoint = 'lg';\n  } else breakpoint = 'xl';\n\n  return {\n    height: height,\n    width: width,\n    breakpoint: breakpoint\n  };\n};\n\nexport default useWindowSize;","map":null,"metadata":{},"sourceType":"module"}