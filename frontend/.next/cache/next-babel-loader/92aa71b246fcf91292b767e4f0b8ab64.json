{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport withStyles from 'react-jss'; //import { useHistory } from \"react-router-dom\";\n\nimport Link from \"next/link\";\nimport Alert from \"../../../shared/Alert\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      margin: 20\n    },\n    submitForm: {\n      margin: 25,\n      border: 1\n    }\n  };\n};\n\nvar RegisterForm = function RegisterForm(_ref) {\n  var classes = _ref.classes;\n\n  //var location = useHistory();\n\n  /**************************STATE SECTION************************/\n  //**Display Name States */\n  var _useState = useState(\"\"),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      usernameErrorMessage = _useState2[0],\n      setUsernameErrorMessage = _useState2[1]; //**Password States */\n\n\n  var _useState3 = useState(\"\"),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      password2 = _useState4[0],\n      setPassword2 = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      passErrorMessage = _useState5[0],\n      setPassErrorMessage = _useState5[1]; //**Email States */\n\n\n  var _useState6 = useState(\"\"),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      reEmail = _useState7[0],\n      setReEmail = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      emailErrorMessage = _useState8[0],\n      setEmailErrorMessage = _useState8[1];\n\n  var _useState9 = useState(false),\n      reg_success = _useState9[0],\n      setRegSuccess = _useState9[1];\n\n  var validateForm = function validateForm(e) {\n    if (email !== reEmail) {\n      setEmailErrorMessage(\"Emails do not match!\");\n      setUsernameErrorMessage(\"\");\n    } else if (password !== password2) {\n      setEmailErrorMessage(\"\");\n      setPassErrorMessage(\"Passwords do not match!\");\n    } else {\n      setPassErrorMessage(\"\");\n      sendUser();\n    }\n  };\n\n  var sendUser = function sendUser() {\n    fetch(\"http://localhost:5000/users/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        displayName: username,\n        email: email,\n        password: password\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (message) {\n      if (message.error) {\n        setUsernameErrorMessage(message.error);\n      }\n\n      if (message.success) {\n        setUsernameErrorMessage(\"\");\n        setPassErrorMessage(\"User Created, redirecting to dashboard...\");\n        setRegSuccess(true); // walletData();\n\n        setTimeout(function () {\n          setRegSuccess(false);\n          location.push(\"/\");\n        }, 5000);\n      }\n    });\n  };\n  /*\n  const sendUser = async () => {\n    try {\n      //const response = await fetch(\"http://localhost:5000/api/users/signup\", {\n      const response = await fetch(\"/user/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          displayName: username,\n          email: email,\n          password: password,\n          password2: password,\n        }),\n      });\n      const data = await response.json();\n       console.log(data)\n     } catch (err) {\n      console.log(\"onLogin error\" + err);\n    }\n  };\n  */\n\n\n  var onFormSubmit = function onFormSubmit(e) {\n    e.preventDefault();\n    validateForm(e);\n  };\n\n  var test = function test() {\n    console.log(\"this is the test button\");\n    fetch(\"/users/test\");\n  };\n  /*************The placeholders are fontawesome unicode, allows them to show in the placeholder field *****************/\n\n  /*************Password fields get set to state to compare before submit*/\n\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"button\", {\n    onClick: test\n  }, \"click me\"), __jsx(\"div\", {\n    className: \"wrapper\"\n  }, __jsx(\"div\", {\n    className: \"signup-wrap\"\n  }, __jsx(\"div\", {\n    className: \"log-container\"\n  }, __jsx(\"div\", {\n    className: \"row align-items-center\"\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(\"div\", {\n    className: \"logForm\"\n  }, __jsx(\"form\", {\n    onSubmit: test\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    required: true,\n    placeholder: \"Username\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      setUsername(e.target.value);\n    }\n  })), __jsx(\"div\", null, usernameErrorMessage.length > 0 ? __jsx(Alert, {\n    content: usernameErrorMessage,\n    setAlert: function setAlert() {\n      setUsernameErrorMessage(\"\");\n    }\n  }) : null), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    required: true,\n    placeholder: \"Email\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      setEmail(e.target.value);\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    required: true,\n    placeholder: \"Confirm Email\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      setReEmail(e.target.value);\n    }\n  })), __jsx(\"div\", null, emailErrorMessage.length > 0 ? __jsx(Alert, {\n    content: emailErrorMessage,\n    setAlert: function setAlert() {\n      setEmailErrorMessage(\"\");\n    }\n  }) : null), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    required: true,\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      setPassword(e.target.value);\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    required: true,\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      setPassword2(e.target.value);\n    }\n  })), __jsx(\"div\", null, passErrorMessage.length > 0 ? __jsx(Alert, {\n    content: passErrorMessage,\n    setAlert: function setAlert() {\n      setPassErrorMessage(\"\");\n    }\n  }) : null), __jsx(\"button\", {\n    className: \"btn btn-primary\"\n  }, \"Sign Up\")), __jsx(\"div\", {\n    className: \"log-footer\"\n  })))))), reg_success ? __jsx(\"div\", {\n    className: \"thanks-popup\"\n  }, __jsx(\"div\", {\n    className: \"thanks-content\"\n  }, __jsx(\"div\", {\n    className: \"thank-you-msg\"\n  }, __jsx(\"p\", null, \"Thank you for registering \", __jsx(\"span\", null, \" \", username), \"!\", __jsx(\"br\", null), \"An email has been sent to \", __jsx(\"br\", null), __jsx(\"span\", null, email)), __jsx(\"p\", null, \"Please verify your email address to continue.\"), __jsx(\"p\", null, \"You will now be redirected to the\", __jsx(\"a\", {\n    href: \"#\"\n  }, \" Login Page\"))))) : null));\n};\n\nexport default withStyles(styles, {\n  injectTheme: true\n})(RegisterForm);","map":null,"metadata":{},"sourceType":"module"}