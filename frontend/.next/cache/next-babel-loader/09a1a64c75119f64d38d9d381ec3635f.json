{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/views/dumb/recordRow/RecordRow.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport withStyles from 'react-jss';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { FaTwitter } from 'react-icons/fa';\nimport config from '../../../../config.js';\nimport knownTemplates from '../templates/knownTemplates';\nimport getIpfsUrl from '../../../../helpers/getIpfsUrl';\nimport { connect } from 'react-redux';\nimport { purchaseRecord, proofOfPurchase } from '../../../../redux/actions/Wallet/thunks.js';\nimport { updatePurchasedTxid } from '../../../../redux/actions/Autopay/creators';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    wordBreak: 'break-word',\n    borderTop: `1px solid ${theme.palette.greyscale(0.3)}`,\n    padding: 10,\n    fontSize: 12,\n    boxSizing: 'border-box'\n  },\n  tableData: {\n    width: '100%'\n  },\n  thumbnail: {\n    width: 300,\n    float: 'right',\n    paddingRight: 16,\n    paddingBottom: 10,\n    marginTop: 10\n  },\n  templateData: {},\n  templateDataRow: {\n    // width: 30\n    margin: [7, 0]\n  },\n  templateName: {\n    backgroundColor: theme.palette.primary.main,\n    fontWeight: '600',\n    color: 'white',\n    padding: [3, 4]\n  },\n  recordField: {\n    fontWeight: '600',\n    color: theme.palette.greyscale(0.9),\n    padding: [2, 4]\n  },\n  recordFieldRow: {\n    margin: [7, 16]\n  },\n  actionBarRoot: {\n    display: 'flex',\n    flex: '0 0 30px',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  },\n  actionIcon: {\n    cursor: 'pointer'\n  },\n  txidHeader: {\n    fontSize: 12,\n    color: theme.palette.primary.main,\n    outline: 'none',\n    textDecoration: 'none',\n    '&:visited': {\n      color: theme.palette.tertiary.main\n    },\n    transition: 'all .2s ease-in-out',\n    '&:hover': {\n      transform: 'scale(1.1)'\n    }\n  },\n  linkRowRoot: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  actionIconButton: {\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n    padding: [3, 7],\n    border: '1px solid',\n    borderRadius: 3,\n    marginLeft: 7,\n    '&:hover': {\n      cursor: 'pointer' // backgroundColor: 'black',\n      // color: 'white'\n\n    }\n  },\n  searchLink: {\n    display: 'inherit',\n    '& > img': {\n      height: 13\n    }\n  },\n  twitterButton: {\n    extend: 'actionIconButton',\n    borderColor: '#1DA1F2',\n    '&:hover': {\n      backgroundColor: '#1DA1F2',\n      '& > $twitterLink': {\n        color: 'white'\n      }\n    }\n  },\n  twitterLink: {\n    display: 'flex',\n    color: '#1DA1F2',\n    borderColor: '#1DA1F2',\n    backgroundColor: 'transparent'\n  },\n  gabButton: {\n    extend: 'actionIconButton',\n    borderColor: '#00D384',\n    '&:hover': {\n      // backgroundColor: '#1DA1F2',\n      '& > $twitterLink': {// color: 'white'\n      }\n    }\n  },\n  gabLink: {\n    display: 'flex',\n    // color: '#1DA1F2',\n    // borderColor: '#1DA1F2',\n    backgroundColor: 'transparent',\n    '& > img': {\n      height: 14\n    }\n  },\n  validButton: {\n    display: 'flex',\n    alignSelf: 'flex-end',\n    border: '.5em solid black',\n    borderRadius: '10%',\n    height: '2rem',\n    width: '2rem',\n    padding: '2px',\n    cursor: 'pointer',\n    transition: 'all .2s ease-in-out',\n    '&:hover': {\n      transform: 'scale(1.05)'\n    }\n  },\n  triangleUp: {\n    width: '0',\n    height: '0',\n    borderLeft: '1rem solid transparent',\n    borderRight: '1rem solid transparent',\n    borderBottom: '2rem solid rgb(13,112,16)'\n  },\n  triangleDown: {\n    width: '0',\n    height: '0',\n    borderLeft: '1rem solid transparent',\n    borderRight: '1rem solid transparent',\n    borderTop: '2rem solid rgb(179,27,17)'\n  },\n  confirmsUp: {\n    color: '#fff',\n    fontSize: '1.25rem',\n    position: 'relative',\n    right: '72%',\n    top: '25%'\n  },\n  confirmsDown: {\n    color: '#fff',\n    fontSize: '1.25rem',\n    position: 'relative',\n    right: '72%',\n    top: '0%'\n  },\n  dialogBox: {\n    position: 'relative',\n    background: '#fff',\n    border: '4px solid #000',\n    height: '6rem',\n    width: '8rem',\n    padding: '2rem',\n    borderRadius: '5%',\n    '&:after,&:before': {\n      left: '100%',\n      top: '35%',\n      border: 'solid transparent',\n      content: `\" \"`,\n      height: '0',\n      width: '0',\n      position: 'absolute',\n      pointerEvents: 'none'\n    },\n    '&:after': {\n      borderColor: 'rgba(213,213,213,0)',\n      borderLeftColor: '#fff',\n      borderWidth: '25px',\n      marginTop: '-25px'\n    },\n    '&:before': {\n      borderColor: 'rgba(0,0,0,0)',\n      borderLeftColor: '#000',\n      borderWidth: '31px',\n      marginTop: '-31px'\n    }\n  }\n}); // dialogBox: {\n//   width: '150px',\n//   height: '75px',\n//   backgroundColor: '#fff',\n//   color: '#000',\n//   padding: '20px',\n//   position: 'relative',\n//   margin: '40px',\n//   float: 'left',\n//   border: '2px solid black',\n//   borderRadius: '10%',\n//    '&:after': {\n//       content: `\" \"`,\n//       position: 'absolute',\n//       right: '-15px',\n//       top: '15px',\n//       borderTop: '15px solid transparent',\n//       borderRight: 'none',\n//       borderLeft: '15px solid black',\n//       borderBottom: '15px solid transparent',\n//    },\n// .arrow_box {\n// \tposition: relative;\n// \tbackground: #d5d5d5;\n// \tborder: 5px solid #000000;\n// }\n// .arrow_box:after, .arrow_box:before {\n// \tleft: 100%;\n// \ttop: 50%;\n// \tborder: solid transparent;\n// \tcontent: \" \";\n// \theight: 0;\n// \twidth: 0;\n// \tposition: absolute;\n// \tpointer-events: none;\n// }\n// .arrow_box:after {\n// \tborder-color: rgba(213, 213, 213, 0);\n// \tborder-left-color: #d5d5d5;\n// \tborder-width: 25px;\n// \tmargin-top: -25px;\n// }\n// .arrow_box:before {\n// \tborder-color: rgba(0, 0, 0, 0);\n// \tborder-left-color: #000000;\n// \tborder-width: 32px;\n// \tmargin-top: -32px;\n// }\n\n\nconst ActionBar = ({\n  classes,\n  verified,\n  txid,\n  terms,\n  commercialContent,\n  mediaType,\n  autoPay,\n  amount,\n  handleClick,\n  purchasedData\n}) => {\n  let explorerLink;\n\n  if (config.network === 'testnet') {\n    explorerLink = `https://testnet.flocha.in/tx/${txid}`;\n  } else explorerLink = `https://livenet.flocha.in/tx/${txid}`;\n\n  return __jsx(\"div\", {\n    className: classes.actionBarRoot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    className: classes.txidHeader,\n    href: explorerLink,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: \"https://testnet.flocha.in/img/icons/favicon.ico\",\n    alt: `transaction: #${txid}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  })), __jsx(LinkRow, {\n    classes: classes,\n    verified: verified,\n    txid: txid,\n    commercialContent: commercialContent,\n    mediaType: mediaType,\n    autoPay: autoPay,\n    amount: amount,\n    handleClick: handleClick,\n    purchasedData: purchasedData,\n    terms: terms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst ValidIcon = ({\n  classes,\n  confirms,\n  onClick\n}) => {\n  return __jsx(\"div\", {\n    className: classes.validButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.triangleUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: classes.confirmsUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, confirms));\n};\n\nconst InValidIcon = ({\n  classes,\n  confirms,\n  onClick\n}) => {\n  return __jsx(\"div\", {\n    className: classes.validButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.triangleDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: classes.confirmsDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }, confirms));\n};\n\nconst DialogBox = ({\n  classes\n}) => {\n  return __jsx(\"div\", {\n    className: classes.dialogBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 5\n    }\n  }, \"Coolbeans\");\n};\n\nconst LinkRow = ({\n  classes,\n  verified,\n  txid,\n  terms,\n  commercialContent,\n  mediaType,\n  autoPay,\n  amount,\n  handleClick,\n  purchasedData\n}) => {\n  const {\n    twitter,\n    gab\n  } = verified;\n\n  if (mediaType === undefined) {\n    mediaType = 'other';\n  }\n\n  if (autoPay === undefined) {\n    autoPay = null;\n  }\n\n  if (amount === undefined) {\n    amount = 0;\n  }\n\n  const RenderAutoPay = ({\n    mediaType,\n    amount,\n    autoPay,\n    handleClick,\n    purchasedData\n  }) => {\n    if (!purchasedData) {\n      console.log({\n        purchasedData\n      });\n      return null;\n    }\n\n    if (!(mediaType && autoPay)) {\n      return;\n    }\n\n    if (purchasedData.paid) {\n      return __jsx(React.Fragment, null, __jsx(Link, {\n        passHref: true,\n        href: `/record?txid=${txid}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }\n      }, __jsx(\"button\", {\n        className: classes.actionIconButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        className: classes.searchLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 17\n        }\n      }, \"paid\"))));\n    }\n\n    if (mediaType in autoPay) {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 17\n        }\n      }, __jsx(\"button\", {\n        className: classes.actionIconButton,\n        style: purchasedData.paid ? {} : {\n          color: 'red'\n        },\n        onClick: () => handleClick(txid, terms),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        className: classes.searchLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 19\n        }\n      }, purchasedData.paid ? 'paid' : autoPay[mediaType] >= amount ? 'autopay' : `Pay ${amount} FLO`))));\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: classes.linkRowRoot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 5\n    }\n  }, gab && __jsx(\"button\", {\n    className: classes.gabButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: classes.gabLink,\n    href: `https://gab.com/OpenIndexProtocol/posts/${verified.gabId}`,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: '/static/assets/icons/gabSvg.svg',\n    alt: 'gab',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }\n  }))), twitter && __jsx(\"button\", {\n    className: classes.twitterButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: classes.twitterLink,\n    href: `https://twitter.com/oip/status/${verified.twitterId}`,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 11\n    }\n  }, __jsx(FaTwitter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }\n  }))), commercialContent ? __jsx(RenderAutoPay, {\n    mediaType: mediaType,\n    amount: amount,\n    autoPay: autoPay,\n    handleClick: handleClick,\n    purchasedData: purchasedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 11\n    }\n  }) : __jsx(Link, {\n    passHref: true,\n    href: `/record?txid=${txid}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    className: classes.actionIconButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: classes.searchLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 15\n    }\n  }, \"view\"))));\n};\n\nconst BASIC = 'tmpl_66089C48';\nconst VIDEO = 'tmpl_4769368E';\nconst PAYMENT = 'tmpl_3084380E';\nconst COMMERICAL = 'tmpl_D8D0F22C';\nconst SIMPCOINSALE = 'tmpl_DE84D583';\n/******************************************* MAIN COMPONENT ******************************************/\n\nconst RecordRow = ({\n  classes,\n  record,\n  meta,\n  isVerified,\n  showOnlyVerifiedPublishers = false,\n  autoPay,\n  purchaseRecord,\n  proofOfPurchase\n}) => {\n  const {\n    details\n  } = record; // tags, payment, permissions\n  // eslint-disable-next-line camelcase\n\n  const {\n    signed_by\n  } = meta;\n  const {\n    0: verified,\n    1: setVerified\n  } = useState({\n    twitter: false,\n    gab: false\n  });\n  const {\n    0: purchasedData,\n    1: setPurchasedData\n  } = useState({\n    proofTxid: '',\n    data: '',\n    paid: false\n  });\n\n  const handleClick = async (txid, terms) => {\n    purchaseRecord({\n      txid,\n      terms\n    }).then(data => {\n      //   console.log(\"DATA\", data)\n      Router.push(`/record?txid=${txid}`); //   if(data){\n      //     if(data.id === txid){\n      //       setPurchasedData({\n      //         proofTxid: '',\n      //         data: data,\n      //         paid: true\n      //       })\n      //     }\n      //   }\n    }).catch(err => console.log(err));\n  };\n\n  let mediaTypes = {\n    audio: knownTemplates.audio,\n    video: knownTemplates.video,\n    image: knownTemplates.image,\n    pdf: knownTemplates.pdf\n  };\n  useEffect(() => {\n    if (autoPay.purchased) {\n      let {\n        txid\n      } = meta;\n      let found = autoPay.purchased.find(purchase => {\n        return purchase.txid === txid;\n      });\n\n      if (found) {\n        let {\n          txid,\n          payment_txid,\n          terms\n        } = found;\n        proofOfPurchase({\n          txid,\n          payment_txid,\n          terms\n        }).then(data => {\n          setPurchasedData({\n            proofTxid: payment_txid,\n            data: data,\n            paid: true\n          });\n        }).catch(err => console.log(err));\n      }\n    }\n  }, []);\n  useEffect(() => {\n    let current = true;\n\n    async function verify(pubAddr) {\n      let tmplName;\n      let localhost = false;\n\n      if (config.network === 'testnet') {\n        tmplName = 'tmpl_2A46C905'; // verified pub testnet template\n\n        localhost = true;\n      }\n\n      const {\n        success,\n        payload\n      } = await isVerified({\n        pubAddr,\n        templateName: tmplName,\n        localhost\n      });\n\n      if (success && current) {\n        setVerified(payload);\n      }\n    }\n\n    verify(signed_by);\n    return () => {\n      current = false;\n    };\n  }, []);\n  let typeOfMedia; // order template data to start with basic and end with payments\n\n  let tmpDetails = [BASIC, VIDEO, ...Object.keys(details), PAYMENT];\n  let orderedDetails = [];\n\n  for (let tmpl of tmpDetails) {\n    if (!orderedDetails.includes(tmpl)) {\n      orderedDetails.push(tmpl);\n    }\n\n    for (const media in mediaTypes) {\n      mediaTypes[media].find(x => {\n        if (x == tmpl) {\n          return typeOfMedia = media;\n        }\n      });\n    }\n  } // get VIDEO and thumbnail\n\n\n  let thumbnail;\n  let ipfsUrl;\n\n  if (Object.keys(details).includes(VIDEO)) {\n    if (details[VIDEO].thumbnailFilename && details[VIDEO].addressDirectory) {\n      ipfsUrl = getIpfsUrl({\n        dirName: details[VIDEO].addressDirectory,\n        filename: details[VIDEO].thumbnailFilename\n      });\n      thumbnail = true;\n    }\n  } // COMMERICAL CONTENT \n\n\n  if (Object.keys(details).includes(COMMERICAL)) {\n    let amount;\n    let {\n      txid\n    } = meta;\n    let terms;\n\n    for (const item in details) {\n      let obj = details[item];\n      Object.keys(obj).map(key => {\n        if (key === 'embeddedTerms') {\n          terms = obj[key][0];\n        }\n\n        if (key === 'amount') {\n          return amount = obj[key];\n        }\n      });\n    }\n\n    return __jsx(RecordRowData, {\n      classes: classes,\n      meta: meta,\n      thumbnail: thumbnail,\n      ipfsUrl: ipfsUrl,\n      orderedDetails: orderedDetails,\n      details: details // eslint-disable-next-line camelcase\n      ,\n      signed_by: signed_by,\n      verified: verified,\n      commercialContent: true,\n      mediaType: typeOfMedia,\n      autoPay: autoPay,\n      amount: Number(amount),\n      handleClick: handleClick,\n      purchasedData: purchasedData,\n      terms: terms.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }\n    });\n  }\n\n  if (showOnlyVerifiedPublishers) {\n    if (verified.gab || verified.twitter) {\n      return __jsx(RecordRowData, {\n        classes: classes,\n        meta: meta,\n        thumbnail: thumbnail,\n        ipfsUrl: ipfsUrl,\n        orderedDetails: orderedDetails,\n        details: details // eslint-disable-next-line camelcase\n        ,\n        signed_by: signed_by,\n        verified: verified,\n        showExpand: true,\n        commercialContent: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 9\n        }\n      });\n    } else return null;\n  }\n\n  return __jsx(RecordRowData, {\n    classes: classes,\n    meta: meta,\n    thumbnail: thumbnail,\n    ipfsUrl: ipfsUrl,\n    orderedDetails: orderedDetails,\n    details: details // eslint-disable-next-line camelcase\n    ,\n    signed_by: signed_by,\n    verified: verified,\n    showExpand: true,\n    commercialContent: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 5\n    }\n  });\n};\n/******************************************* END MAIN COMPONENT ******************************************/\n\n\nconst RecordRowData = ({\n  classes,\n  verified,\n  details,\n  meta,\n  thumbnail,\n  ipfsUrl,\n  orderedDetails,\n  // eslint-disable-next-line camelcase\n  signed_by,\n  showExpand,\n  commercialContent,\n  mediaType,\n  autoPay,\n  amount,\n  handleClick,\n  purchasedData,\n  terms\n}) => {\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 5\n    }\n  }, __jsx(ActionBar, {\n    classes: classes,\n    verified: verified,\n    recordDetails: details,\n    txid: meta.txid,\n    commercialContent: commercialContent,\n    mediaType: mediaType,\n    autoPay: autoPay,\n    amount: amount,\n    handleClick: handleClick,\n    purchasedData: purchasedData,\n    terms: terms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 7\n    }\n  }), __jsx(TableData, {\n    classes: classes,\n    thumbnail: thumbnail,\n    ipfsUrl: ipfsUrl,\n    orderedDetails: orderedDetails,\n    details: details // eslint-disable-next-line camelcase\n    ,\n    signed_by: signed_by,\n    verified: verified,\n    purchasedData: purchasedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst TableData = ({\n  classes,\n  thumbnail,\n  ipfsUrl,\n  orderedDetails,\n  details,\n  // eslint-disable-next-line camelcase\n  signed_by,\n  verified,\n  purchasedData\n}) => {\n  return __jsx(\"div\", {\n    className: classes.tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 5\n    }\n  }, thumbnail && __jsx(Thumbnail, {\n    src: ipfsUrl,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: classes.templateData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 7\n    }\n  }, orderedDetails.map(tmpl => {\n    if (!details[tmpl]) return null;\n    return __jsx(TemplateData, {\n      classes: classes,\n      tmpl: tmpl,\n      details: details[tmpl],\n      key: tmpl,\n      purchasedData: purchasedData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 13\n      }\n    });\n  }), signed_by && __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: classes.templateName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 13\n    }\n  }, \"signed_by:\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 13\n    }\n  }, \" \", signed_by)), verified.name && __jsx(\"div\", {\n    style: {\n      marginTop: '7px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: classes.templateName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 13\n    }\n  }, \"verified name:\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 13\n    }\n  }, \" \", verified.name))));\n};\n\nconst Thumbnail = ({\n  src,\n  classes\n}) => {\n  return __jsx(\"img\", {\n    className: classes.thumbnail,\n    src: src,\n    alt: 'thumbnail',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 10\n    }\n  });\n};\n\nconst TemplateData = ({\n  classes,\n  tmpl,\n  details,\n  purchasedData\n}) => {\n  let templateName;\n  let mediaType = '';\n\n  if (knownTemplates[tmpl]) {\n    templateName = knownTemplates[tmpl].friendly_name;\n  } else if (knownTemplates.testnet[tmpl]) {\n    templateName = knownTemplates.testnet[tmpl].friendly_name;\n  } else {\n    templateName = 'Unknown Template';\n  }\n\n  if (tmpl === BASIC) {\n    details = {\n      title: details.title,\n      description: details.description,\n      year: details.year\n    };\n  }\n\n  if (tmpl === VIDEO) {\n    details = {\n      displayName: details.displayName,\n      addressDirectory: details.addressDirectory,\n      filename: details.filename,\n      thumbnailFilename: details.thumbnailFilename,\n      publishDate: details.publishDate\n    };\n  }\n\n  if (tmpl === PAYMENT) {\n    details = _objectSpread({\n      platformCut: details.platformCut,\n      influencerCut: details.influencerCut\n    }, details);\n  }\n\n  if (tmpl === COMMERICAL) {\n    if (purchasedData.paid && purchasedData.data) {\n      details = {\n        location: purchasedData.data.location,\n        network: purchasedData.data.network,\n        embeddedTerms: purchasedData.data.term,\n        valid_until: purchasedData.data.valid_until\n      };\n    } else {\n      details = {\n        embeddedTerms: details.embeddedTerms\n      };\n    }\n  }\n\n  if (tmpl === SIMPCOINSALE) {\n    let coin = details.coin;\n    let flo = 'f9964d1e840608b68a3795fd2597e9b232dfce1029251d481b2110c83a68adf7';\n    let btc = '058bf55be2639673228e1904e2326e13184de08837983cf03cc7fef73ad13d5f';\n    let rvn = '';\n\n    switch (coin) {\n      case flo:\n        details.coin = ' FLO';\n        break;\n\n      case btc:\n        details.coin = ' BTC';\n        break;\n      // case rvn:\n      //   details.coin = ' RVN'\n      //   break;\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: classes.templateDataRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: classes.templateName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 7\n    }\n  }, templateName, \":\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 7\n    }\n  }, \" \", tmpl), Object.keys(details).map(recordField => {\n    return __jsx(RecordField, {\n      classes: classes,\n      key: recordField,\n      recordField: recordField,\n      recordFieldData: details[recordField],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nconst RecordField = ({\n  classes,\n  recordField,\n  recordFieldData\n}) => {\n  if (!recordFieldData) {\n    return null;\n  }\n\n  if (recordFieldData.raw) {\n    recordFieldData = recordFieldData.raw;\n  }\n\n  return __jsx(\"div\", {\n    className: classes.recordFieldRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 879,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: classes.recordField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 7\n    }\n  }, recordField, \":\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 7\n    }\n  }, \" \", recordFieldData));\n};\n\nRecordRow.propTypes = {\n  classes: PropTypes.object.isRequired,\n  record: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    autoPay: state.Autopay\n  };\n}\n\nexport default connect(mapStateToProps, {\n  purchaseRecord,\n  proofOfPurchase,\n  updatePurchasedTxid\n})(withStyles(styles)(RecordRow));","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/views/dumb/recordRow/RecordRow.js"],"names":["React","useState","useEffect","withStyles","PropTypes","Link","Router","FaTwitter","config","knownTemplates","getIpfsUrl","connect","purchaseRecord","proofOfPurchase","updatePurchasedTxid","styles","theme","root","display","flexDirection","overflow","wordBreak","borderTop","palette","greyscale","padding","fontSize","boxSizing","tableData","width","thumbnail","float","paddingRight","paddingBottom","marginTop","templateData","templateDataRow","margin","templateName","backgroundColor","primary","main","fontWeight","color","recordField","recordFieldRow","actionBarRoot","flex","alignItems","justifyContent","actionIcon","cursor","txidHeader","outline","textDecoration","tertiary","transition","transform","linkRowRoot","actionIconButton","border","borderRadius","marginLeft","searchLink","height","twitterButton","extend","borderColor","twitterLink","gabButton","gabLink","validButton","alignSelf","triangleUp","borderLeft","borderRight","borderBottom","triangleDown","confirmsUp","position","right","top","confirmsDown","dialogBox","background","left","content","pointerEvents","borderLeftColor","borderWidth","ActionBar","classes","verified","txid","terms","commercialContent","mediaType","autoPay","amount","handleClick","purchasedData","explorerLink","network","ValidIcon","confirms","onClick","InValidIcon","DialogBox","LinkRow","twitter","gab","undefined","RenderAutoPay","console","log","paid","gabId","twitterId","BASIC","VIDEO","PAYMENT","COMMERICAL","SIMPCOINSALE","RecordRow","record","meta","isVerified","showOnlyVerifiedPublishers","details","signed_by","setVerified","setPurchasedData","proofTxid","data","then","push","catch","err","mediaTypes","audio","video","image","pdf","purchased","found","find","purchase","payment_txid","current","verify","pubAddr","tmplName","localhost","success","payload","typeOfMedia","tmpDetails","Object","keys","orderedDetails","tmpl","includes","media","x","ipfsUrl","thumbnailFilename","addressDirectory","dirName","filename","item","obj","map","key","Number","toString","RecordRowData","showExpand","TableData","name","Thumbnail","src","TemplateData","friendly_name","testnet","title","description","year","displayName","publishDate","platformCut","influencerCut","location","embeddedTerms","term","valid_until","coin","flo","btc","rvn","RecordField","recordFieldData","raw","propTypes","object","isRequired","mapStateToProps","state","Autopay"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport withStyles from 'react-jss';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport Router from 'next/router'\nimport { FaTwitter } from 'react-icons/fa';\nimport config from '../../../../config.js';\nimport knownTemplates from '../templates/knownTemplates';\nimport getIpfsUrl from '../../../../helpers/getIpfsUrl';\nimport { connect } from 'react-redux';\nimport { purchaseRecord, proofOfPurchase } from '../../../../redux/actions/Wallet/thunks.js'\nimport { updatePurchasedTxid } from '../../../../redux/actions/Autopay/creators'\n\n\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    wordBreak: 'break-word',\n    borderTop: `1px solid ${theme.palette.greyscale(0.3)}`,\n    padding: 10,\n    fontSize: 12,\n    boxSizing: 'border-box'\n  },\n  tableData: {\n    width: '100%'\n  },\n  thumbnail: {\n    width: 300,\n    float: 'right',\n    paddingRight: 16,\n    paddingBottom: 10,\n    marginTop: 10\n  },\n  templateData: {},\n  templateDataRow: {\n    // width: 30\n    margin: [7, 0]\n  },\n  templateName: {\n    backgroundColor: theme.palette.primary.main,\n    fontWeight: '600',\n    color: 'white',\n    padding: [3, 4]\n  },\n  recordField: {\n    fontWeight: '600',\n    color: theme.palette.greyscale(0.9),\n    padding: [2, 4]\n  },\n  recordFieldRow: {\n    margin: [7, 16]\n  },\n  actionBarRoot: {\n    display: 'flex',\n    flex: '0 0 30px',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  },\n  actionIcon: {\n    cursor: 'pointer'\n  },\n  txidHeader: {\n    fontSize: 12,\n    color: theme.palette.primary.main,\n    outline: 'none',\n    textDecoration: 'none',\n    '&:visited': {\n      color: theme.palette.tertiary.main\n    },\n    transition: 'all .2s ease-in-out',\n    '&:hover': {\n      transform: 'scale(1.1)'\n    }\n  },\n  linkRowRoot: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  actionIconButton: {\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n    padding: [3, 7],\n    border: '1px solid',\n    borderRadius: 3,\n    marginLeft: 7,\n    '&:hover': {\n      cursor: 'pointer'\n      // backgroundColor: 'black',\n      // color: 'white'\n    }\n  },\n  searchLink: {\n    display: 'inherit',\n    '& > img': {\n      height: 13\n    }\n  },\n  twitterButton: {\n    extend: 'actionIconButton',\n    borderColor: '#1DA1F2',\n    '&:hover': {\n      backgroundColor: '#1DA1F2',\n      '& > $twitterLink': {\n        color: 'white'\n      }\n    }\n  },\n  twitterLink: {\n    display: 'flex',\n    color: '#1DA1F2',\n    borderColor: '#1DA1F2',\n    backgroundColor: 'transparent'\n  },\n  gabButton: {\n    extend: 'actionIconButton',\n    borderColor: '#00D384',\n    '&:hover': {\n      // backgroundColor: '#1DA1F2',\n      '& > $twitterLink': {\n        // color: 'white'\n      }\n    }\n  },\n  gabLink: {\n    display: 'flex',\n    // color: '#1DA1F2',\n    // borderColor: '#1DA1F2',\n    backgroundColor: 'transparent',\n    '& > img': {\n      height: 14\n    }\n  },\n  validButton: {\n    display: 'flex',\n    alignSelf: 'flex-end',\n    border: '.5em solid black',\n    borderRadius: '10%',\n    height: '2rem',\n    width: '2rem',\n    padding: '2px',\n    cursor: 'pointer',\n    transition:  'all .2s ease-in-out',\n    '&:hover': {\n      transform: 'scale(1.05)'\n    }\n  },\n  triangleUp: {\n    width: '0',\n    height: '0',\n    borderLeft: '1rem solid transparent',\n    borderRight: '1rem solid transparent',\n    borderBottom: '2rem solid rgb(13,112,16)'\n  },\n  triangleDown: {\n    width: '0',\n    height: '0',\n    borderLeft: '1rem solid transparent',\n    borderRight: '1rem solid transparent',\n    borderTop: '2rem solid rgb(179,27,17)'\n  },\n  confirmsUp: {\n    color: '#fff',\n    fontSize: '1.25rem',\n    position: 'relative',\n    right: '72%',\n    top: '25%'\n  },\n  confirmsDown: {\n    color: '#fff',\n    fontSize: '1.25rem',\n    position: 'relative',\n    right: '72%',\n    top: '0%'\n  },\n  dialogBox: {\n    position: 'relative',\n    background: '#fff',\n    border: '4px solid #000',\n    height: '6rem',\n    width: '8rem',\n    padding: '2rem',\n    borderRadius: '5%',\n      '&:after,&:before': {\n        left: '100%',\n        top: '35%',\n        border: 'solid transparent',\n        content: `\" \"`,\n        height: '0',\n        width: '0',\n        position: 'absolute',\n        pointerEvents: 'none',\n      },\n      '&:after': {\n        borderColor: 'rgba(213,213,213,0)',\n        borderLeftColor: '#fff',\n        borderWidth: '25px',\n        marginTop: '-25px',\n      },\n      '&:before': {\n        borderColor: 'rgba(0,0,0,0)',\n        borderLeftColor: '#000',\n        borderWidth: '31px',\n        marginTop: '-31px',\n      },\n  }\n})\n\n\n\n// dialogBox: {\n  //   width: '150px',\n  //   height: '75px',\n  //   backgroundColor: '#fff',\n  //   color: '#000',\n  //   padding: '20px',\n  //   position: 'relative',\n  //   margin: '40px',\n  //   float: 'left',\n  //   border: '2px solid black',\n  //   borderRadius: '10%',\n  //    '&:after': {\n  //       content: `\" \"`,\n  //       position: 'absolute',\n  //       right: '-15px',\n  //       top: '15px',\n  //       borderTop: '15px solid transparent',\n  //       borderRight: 'none',\n  //       borderLeft: '15px solid black',\n  //       borderBottom: '15px solid transparent',\n  //    },\n\n\n// .arrow_box {\n// \tposition: relative;\n// \tbackground: #d5d5d5;\n// \tborder: 5px solid #000000;\n// }\n// .arrow_box:after, .arrow_box:before {\n// \tleft: 100%;\n// \ttop: 50%;\n// \tborder: solid transparent;\n// \tcontent: \" \";\n// \theight: 0;\n// \twidth: 0;\n// \tposition: absolute;\n// \tpointer-events: none;\n// }\n\n// .arrow_box:after {\n// \tborder-color: rgba(213, 213, 213, 0);\n// \tborder-left-color: #d5d5d5;\n// \tborder-width: 25px;\n// \tmargin-top: -25px;\n// }\n// .arrow_box:before {\n// \tborder-color: rgba(0, 0, 0, 0);\n// \tborder-left-color: #000000;\n// \tborder-width: 32px;\n// \tmargin-top: -32px;\n// }\n\n\n\n\nconst ActionBar = ({ classes, verified, txid, terms, commercialContent, mediaType, autoPay, amount, handleClick, purchasedData }) => {\n\n  let explorerLink;\n  if (config.network === 'testnet') {\n    explorerLink = `https://testnet.flocha.in/tx/${txid}`;\n  } else explorerLink = `https://livenet.flocha.in/tx/${txid}`;\n\n  return (\n    <div className={classes.actionBarRoot}>\n      <a className={classes.txidHeader} href={explorerLink} target='_blank'>\n        <img\n          src='https://testnet.flocha.in/img/icons/favicon.ico'\n          alt={`transaction: #${txid}`}\n        />\n      </a>\n      <LinkRow classes={classes} verified={verified} txid={txid} commercialContent={commercialContent} mediaType={mediaType} autoPay={autoPay} amount={amount} handleClick={handleClick} purchasedData={purchasedData} terms={terms} />\n    </div>\n  );\n};\n\n\n\nconst ValidIcon = ({classes, confirms, onClick}) => {\n  return ( \n    <div className={classes.validButton}>\n\n        <div className={classes.triangleUp}></div>\n        <div className={classes.confirmsUp}>{confirms}</div>\n    </div>\n  );\n}\nconst InValidIcon = ({classes, confirms, onClick}) => {\n  return ( \n    <div className={classes.validButton}>\n\n        <div className={classes.triangleDown}></div>\n        <div className={classes.confirmsDown}>{confirms}</div>\n    </div>\n  );\n}\n\nconst DialogBox = ({ classes }) => {\n  return (\n    <div className={classes.dialogBox}>\n      Coolbeans\n    </div>\n  )\n}\n\n\nconst LinkRow = ({ classes, verified, txid, terms, commercialContent, mediaType, autoPay, amount, handleClick, purchasedData }) => {\n  const { twitter, gab } = verified;\n\n\n  if(mediaType === undefined){\n    mediaType = 'other'\n  }\n  if(autoPay === undefined){\n    autoPay = null\n  }\n\n  if(amount === undefined){\n    amount = 0;\n  }\n  \n\n  const RenderAutoPay = ({mediaType, amount, autoPay, handleClick, purchasedData }) => {\n\n    if(!purchasedData){\n      console.log({purchasedData})\n      return null\n    }\n\n    if(!(mediaType && autoPay)){\n          return \n      }\n\n      if(purchasedData.paid){\n        return (\n          <>\n              <Link passHref href={`/record?txid=${txid}`} >\n              <button className={classes.actionIconButton}>\n                <a className={classes.searchLink}>\n                  {/* <img src={'/static/assets/icons/expand.png'} alt={'expand'} /> */}\n                    paid\n                </a>\n              </button>\n            </Link>\n          </>\n        )\n      }\n\n      if(mediaType in autoPay){\n\n          return (\n            <>\n            {/* passHref href={`/record?txid=${txid}`} */}\n                <div  >\n                <button className={classes.actionIconButton} style={ purchasedData.paid ? {} : {color: 'red'}} \n                    onClick={() => handleClick(txid, terms)} >\n                  <a className={classes.searchLink}>\n                    {/* <img src={'/static/assets/icons/expand.png'} alt={'expand'} /> */}\n                      {purchasedData.paid \n                        ? 'paid'\n                        : autoPay[mediaType] >= amount ? 'autopay' : `Pay ${amount} FLO`\n                      }\n                  </a>\n                </button>\n              </div>\n            </>\n          )            \n      }\n\n\n  }\n\n  return (\n    <div className={classes.linkRowRoot}>\n      {gab && (\n        <button className={classes.gabButton}>\n          <a\n            className={classes.gabLink}\n            href={`https://gab.com/OpenIndexProtocol/posts/${verified.gabId}`}\n            target='_blank'>\n            <img src={'/static/assets/icons/gabSvg.svg'} alt={'gab'} />\n          </a>\n        </button>\n      )}\n      {twitter && (\n        <button className={classes.twitterButton}>\n          <a\n            className={classes.twitterLink}\n            href={`https://twitter.com/oip/status/${verified.twitterId}`}\n            target='_blank'>\n            <FaTwitter />\n          </a>\n        </button>\n      )}\n      {commercialContent ? (\n          <RenderAutoPay \n              mediaType={mediaType}\n              amount={amount}\n              autoPay={autoPay}\n              handleClick={handleClick}\n              purchasedData={purchasedData}\n          />\n      ) :\n        <Link passHref href={`/record?txid=${txid}`}>\n            <button className={classes.actionIconButton}>\n              <a className={classes.searchLink}>\n                {/* <img src={'/static/assets/icons/expand.png'} alt={'expand'} /> */}\n                  view\n              </a>\n            </button>\n        </Link>\n      }\n\n\n    </div>\n  );\n};\n\nconst BASIC = 'tmpl_66089C48';\nconst VIDEO = 'tmpl_4769368E';\nconst PAYMENT = 'tmpl_3084380E';\nconst COMMERICAL = 'tmpl_D8D0F22C';\nconst SIMPCOINSALE = 'tmpl_DE84D583'\n\n/******************************************* MAIN COMPONENT ******************************************/ \nconst RecordRow = ({\n  classes,\n  record,\n  meta,\n  isVerified,\n  showOnlyVerifiedPublishers = false,\n  autoPay,\n  purchaseRecord,\n  proofOfPurchase,\n\n}) => {\n  const { details } = record; // tags, payment, permissions\n  // eslint-disable-next-line camelcase\n  const { signed_by } = meta;\n\n  const [verified, setVerified] = useState({ twitter: false, gab: false });\n\n  const [purchasedData, setPurchasedData] = useState({\n      proofTxid: '',\n      data: '',\n      paid: false\n  })\n\n  const handleClick = async (txid, terms) => {\n\n    purchaseRecord({txid, terms})\n      .then(data => {\n      //   console.log(\"DATA\", data)\n\n      Router.push(`/record?txid=${txid}`)\n      //   if(data){\n      //     if(data.id === txid){\n      //       setPurchasedData({\n      //         proofTxid: '',\n      //         data: data,\n      //         paid: true\n      //       })\n      //     }\n      //   }\n      })\n      .catch(err => console.log(err))\n\n\n  }\n\n  let mediaTypes = {\n    audio: knownTemplates.audio,\n    video: knownTemplates.video,\n    image: knownTemplates.image,\n    pdf: knownTemplates.pdf,\n  }\n\n  \n\n\nuseEffect(() => {\n  if(autoPay.purchased){\n    let { txid } = meta\n\n    let found = autoPay.purchased.find(purchase => {\n       return purchase.txid === txid\n    })\n    \n    if(found){\n      let {txid, payment_txid, terms } = found\n      proofOfPurchase({txid, payment_txid, terms })\n      .then(data => {\n        setPurchasedData({\n          proofTxid: payment_txid,\n          data: data,\n          paid: true\n        })})\n      .catch(err => console.log(err))\n    }\n  }\n}, [])\n\n\n\n  useEffect(() => {\n    let current = true;\n    async function verify(pubAddr) {\n      let tmplName;\n      let localhost = false;\n      if (config.network === 'testnet') {\n        tmplName = 'tmpl_2A46C905'; // verified pub testnet template\n        localhost = true;\n      }\n      const { success, payload } = await isVerified({\n        pubAddr,\n        templateName: tmplName,\n        localhost\n      });\n      if (success && current) {\n        setVerified(payload);\n      }\n    }\n\n    verify(signed_by);\n    return () => {\n      current = false;\n    };\n  }, []);\n\n\n\n  let typeOfMedia;\n\n  // order template data to start with basic and end with payments\n  let tmpDetails = [BASIC, VIDEO, ...Object.keys(details), PAYMENT];\n  let orderedDetails = [];\n  for (let tmpl of tmpDetails) {\n    if (!orderedDetails.includes(tmpl)) {\n      orderedDetails.push(tmpl);\n    }\n\n    for (const media in mediaTypes) {\n      mediaTypes[media].find(x => {\n    if(x == tmpl){\n      return typeOfMedia = media;\n    }\n})\n}\n  }\n  \n\n  // get VIDEO and thumbnail\n  let thumbnail;\n  let ipfsUrl;\n  if (Object.keys(details).includes(VIDEO)) {\n    if (details[VIDEO].thumbnailFilename && details[VIDEO].addressDirectory) {\n      ipfsUrl = getIpfsUrl({\n        dirName: details[VIDEO].addressDirectory,\n        filename: details[VIDEO].thumbnailFilename\n      });\n      thumbnail = true;\n    }\n  }\n\n  // COMMERICAL CONTENT \n  if (Object.keys(details).includes(COMMERICAL)) {\n\n\n    let amount;\n    let { txid } = meta;\n    let terms;\n    \n    for (const item in details){\n        let obj = details[item]\n\n\n\n        Object.keys(obj).map(key => {\n            if(key === 'embeddedTerms'){\n              terms = obj[key][0]\n            }\n\n            if(key === 'amount'){\n               return amount = obj[key]\n            }\n        })\n    }\n        return (\n          <RecordRowData\n            classes={classes}\n            meta={meta}\n            thumbnail={thumbnail}\n            ipfsUrl={ipfsUrl}\n            orderedDetails={orderedDetails}\n            details={details}\n            // eslint-disable-next-line camelcase\n            signed_by={signed_by}\n            verified={verified}\n            commercialContent={true}\n            mediaType={typeOfMedia}\n            autoPay={autoPay}\n            amount={Number(amount)}\n            handleClick={handleClick}\n            purchasedData={purchasedData}\n            terms={(terms).toString()}\n          />\n        );\n  }\n\n  \n\n  if (showOnlyVerifiedPublishers) {\n    if (verified.gab || verified.twitter) {\n      return (\n        <RecordRowData\n          classes={classes}\n          meta={meta}\n          thumbnail={thumbnail}\n          ipfsUrl={ipfsUrl}\n          orderedDetails={orderedDetails}\n          details={details}\n          // eslint-disable-next-line camelcase\n          signed_by={signed_by}\n          verified={verified}\n          showExpand={true}\n          commercialContent={false}\n\n        />\n      );\n    } else return null;\n  }\n  return (\n    <RecordRowData\n      classes={classes}\n      meta={meta}\n      thumbnail={thumbnail}\n      ipfsUrl={ipfsUrl}\n      orderedDetails={orderedDetails}\n      details={details}\n      // eslint-disable-next-line camelcase\n      signed_by={signed_by}\n      verified={verified}\n      showExpand={true}\n      commercialContent={false}\n    />\n  );\n};\n\n\n/******************************************* END MAIN COMPONENT ******************************************/ \n\n\nconst RecordRowData = ({\n  classes,\n  verified,\n  details,\n  meta,\n  thumbnail,\n  ipfsUrl,\n  orderedDetails,\n  // eslint-disable-next-line camelcase\n  signed_by,\n  showExpand,\n  commercialContent,\n  mediaType,\n  autoPay,\n  amount,\n  handleClick,\n  purchasedData,\n  terms\n\n}) => {\n\n\n  return (\n    <div className={classes.root}>\n      <ActionBar\n        classes={classes}\n        verified={verified}\n        recordDetails={details}\n        txid={meta.txid}\n        commercialContent={commercialContent}\n        mediaType={mediaType}\n        autoPay={autoPay}\n        amount={amount}\n        handleClick={handleClick}\n        purchasedData={purchasedData}\n        terms={terms}       \n      />  \n      <TableData\n        classes={classes}\n        thumbnail={thumbnail}\n        ipfsUrl={ipfsUrl}\n        orderedDetails={orderedDetails}\n        details={details}\n        // eslint-disable-next-line camelcase\n        signed_by={signed_by}\n        verified={verified}\n        purchasedData={purchasedData}\n      />\n      {/* TODO  - EDDIE */}\n       {/* <ValidIcon \n          classes={classes}\n          confirms={4}\n       />\n       <InValidIcon \n          classes={classes}\n          confirms={4}\n       /> */}\n\n\n       \n\n    </div>\n  );\n};\n\nconst TableData = ({\n  classes,\n  thumbnail,\n  ipfsUrl,\n  orderedDetails,\n  details,\n  // eslint-disable-next-line camelcase\n  signed_by,\n  verified,\n  purchasedData\n}) => {\n\n  return (\n    <div className={classes.tableData}>\n      {/* thumbnail here */}\n      {thumbnail && <Thumbnail src={ipfsUrl} classes={classes} />}\n      <div className={classes.templateData}>\n        {orderedDetails.map(tmpl => {\n          if (!details[tmpl]) return null;\n          return (\n            <TemplateData\n              classes={classes}\n              tmpl={tmpl}\n              details={details[tmpl]}\n              key={tmpl}\n              purchasedData={purchasedData}\n            />\n          );\n        })}\n        {/* eslint-disable-next-line camelcase */}\n        {signed_by && (\n          <>\n            {/* eslint-disable-next-line camelcase */}\n            <span className={classes.templateName}>signed_by:</span>\n            <span> {signed_by}</span>\n          </>\n        )}\n        {verified.name && (\n          <div style={{ marginTop: '7px' }}>\n            {/* eslint-disable-next-line camelcase */}\n            <span className={classes.templateName}>verified name:</span>\n            <span> {verified.name}</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst Thumbnail = ({ src, classes }) => {\n  return <img className={classes.thumbnail} src={src} alt={'thumbnail'} />;\n};\n\nconst TemplateData = ({ classes, tmpl, details, purchasedData}) => {\n  let templateName;\n  let mediaType = ''\n\n\n  if (knownTemplates[tmpl]) {\n    templateName = knownTemplates[tmpl].friendly_name;\n  } else if (knownTemplates.testnet[tmpl]) {\n    templateName = knownTemplates.testnet[tmpl].friendly_name;\n  } else {\n    templateName = 'Unknown Template';\n  }\n  if (tmpl === BASIC) {\n    details = {\n      title: details.title,\n      description: details.description,\n      year: details.year\n    };\n  }\n  if (tmpl === VIDEO) {\n    details = {\n      displayName: details.displayName,\n      addressDirectory: details.addressDirectory,\n      filename: details.filename,\n      thumbnailFilename: details.thumbnailFilename,\n      publishDate: details.publishDate\n    };\n  }\n  if (tmpl === PAYMENT) {\n    details = {\n      platformCut: details.platformCut,\n      influencerCut: details.influencerCut,\n      ...details\n    };\n  }\n  if(tmpl === COMMERICAL){\n    if(purchasedData.paid && purchasedData.data){\n      details = {\n        location: purchasedData.data.location,\n        network: purchasedData.data.network,\n        embeddedTerms: purchasedData.data.term,\n        valid_until: purchasedData.data.valid_until\n      }\n      } else {\n        details = {\n          embeddedTerms: details.embeddedTerms,\n        }\n      }\n  }\n  if(tmpl === SIMPCOINSALE){\n    let coin = details.coin\n    let flo = 'f9964d1e840608b68a3795fd2597e9b232dfce1029251d481b2110c83a68adf7'\n    let btc = '058bf55be2639673228e1904e2326e13184de08837983cf03cc7fef73ad13d5f'\n    let rvn = ''\n    \n    switch(coin){\n      case flo:\n        details.coin = ' FLO'\n        break;\n      case btc:\n        details.coin = ' BTC'\n        break;\n      // case rvn:\n      //   details.coin = ' RVN'\n      //   break;\n    }\n\n  }\n  return (\n    <div className={classes.templateDataRow}>\n      <span className={classes.templateName}>{templateName}:</span>\n      <span> {tmpl}</span>\n      {Object.keys(details).map(recordField => {\n        return (\n          <RecordField\n            classes={classes}\n            key={recordField}\n            recordField={recordField}\n            recordFieldData={details[recordField]}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nconst RecordField = ({ classes, recordField, recordFieldData }) => {\n\n  if (!recordFieldData) {\n    return null;\n  }\n  if (recordFieldData.raw) {\n    recordFieldData = recordFieldData.raw;\n  }\n  return (\n    <div className={classes.recordFieldRow}>\n      <span className={classes.recordField}>{recordField}:</span>\n      <span> {recordFieldData}</span>\n    </div>\n  );\n};\n\n\n\nRecordRow.propTypes = {\n  classes: PropTypes.object.isRequired,\n  record: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps (state) {\n  return {\n      autoPay: state.Autopay\n  }\n}\n\n\nexport default connect(mapStateToProps, { purchaseRecord, proofOfPurchase, updatePurchasedTxid })(withStyles(styles)(RecordRow))\n"]},"metadata":{},"sourceType":"module"}