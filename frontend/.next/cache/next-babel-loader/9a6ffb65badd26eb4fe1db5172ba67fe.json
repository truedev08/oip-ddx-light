{"ast":null,"code":"import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { Explorer, Interface, Publisher, Wallet, Platform, Autopay } from './reducers'; // Create our Store\n\nvar createStoreFn = function createStoreFn() {\n  var reducers = {\n    Explorer: Explorer,\n    Interface: Interface,\n    Publisher: Publisher,\n    Wallet: Wallet,\n    Platform: Platform,\n    Autopay: Autopay\n  }; // Create the logger to log Actions to the console\n\n  var middleware = [thunkMiddleware];\n\n  if (false) {\n    var reduxLogger = require('redux-logger');\n\n    var logger = reduxLogger.createLogger({\n      collapsed: true,\n      predicate: function predicate(getState, action) {\n        return true;\n      }\n    });\n    middleware.push(logger);\n  }\n\n  var composeEnhancers; // Compose a \"name\" for the window.\n\n  if (true && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n    composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      name: 'oip-publish-platform'\n    });\n  } else {\n    composeEnhancers = compose;\n  } // Use the Middleware and create an \"enhancer\"\n\n\n  var enhancer = composeEnhancers(applyMiddleware.apply(void 0, middleware) // other store enhancers if any\n  );\n  return createStore(combineReducers(reducers), enhancer);\n};\n\nexport { createStoreFn as createStore };","map":null,"metadata":{},"sourceType":"module"}