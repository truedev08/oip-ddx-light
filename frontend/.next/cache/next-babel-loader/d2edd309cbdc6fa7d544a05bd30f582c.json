{"ast":null,"code":"import { useState, useEffect } from 'react';\nconst REGISTERED_PLATFORM_TMPL = 'tmpl_F6A8A55E';\n\nconst useRegisterPlatform = ({\n  txid,\n  daemon\n}) => {\n  const {\n    0: registered,\n    1: setRegister\n  } = useState(false);\n  const {\n    0: platformData,\n    1: setPlatformData\n  } = useState({}); // look up register platform record\n\n  useEffect(() => {\n    const getPlatformRecord = async txid => {\n      let res;\n\n      try {\n        res = await daemon.getOip5Record(txid);\n      } catch (err) {\n        console.error(`Failed to register platform; Failed to get platform record \\n ${err}`);\n        return;\n      } // console.log(res)\n\n\n      const {\n        success,\n        payload\n      } = res;\n\n      if (success) {\n        let httpUrl;\n        let {\n          results\n        } = payload;\n\n        if (results[0]) {\n          const {\n            record\n          } = results[0];\n          const {\n            details\n          } = record;\n          setPlatformData(details[REGISTERED_PLATFORM_TMPL]);\n          httpUrl = platformData.httpUrl;\n        }\n\n        if (window) {\n          if (window.location.hostname === httpUrl) {\n            setRegister(true);\n          }\n\n          if (window.location.hostname === 'localhost') {\n            setRegister(true);\n          }\n        }\n      }\n    };\n\n    getPlatformRecord(txid);\n  }, []);\n  return {\n    registered,\n    platformData\n  };\n};\n\nexport default useRegisterPlatform;","map":null,"metadata":{},"sourceType":"module"}