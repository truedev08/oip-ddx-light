{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport withStyles from 'react-jss';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexDirection: 'row',\n      flex: '0 0 50px',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: [0, 30],\n      position: 'relative'\n    },\n    tipButton: {\n      position: 'relative',\n      display: 'flex',\n      justifyContent: 'center',\n      left: 30,\n      backgroundColor: 'transparent',\n      border: 'none',\n      outline: 'none',\n      '&:hover': {\n        cursor: 'pointer'\n      },\n      '& > img': {\n        height: 40,\n        '&:hover': {\n          height: 42\n        }\n      }\n    },\n    transactionContainer: {\n      marginLeft: '30px'\n    },\n    transactionLink: {\n      cursor: 'pointer',\n      borderBottom: 'none',\n      color: theme.palette.primary.main\n    }\n  };\n};\n\nvar PaymentRow = function PaymentRow(_ref) {\n  var classes = _ref.classes,\n      paymentTemplate = _ref.paymentTemplate,\n      paymentAddress = _ref.paymentAddress,\n      tip = _ref.tip;\n\n  var _useState = useState(undefined),\n      txid = _useState[0],\n      setTxid = _useState[1];\n\n  var _useState2 = useState(false),\n      showTxid = _useState2[0],\n      setShowTxid = _useState2[1];\n\n  function sendTip(_x) {\n    return _sendTip.apply(this, arguments);\n  }\n  /**Storing sugTip amounts in suggestedTips */\n\n\n  function _sendTip() {\n    _sendTip = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tV) {\n      var tx;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return tip({\n                paymentAddr: paymentAddress,\n                paymentTemplate: paymentTemplate,\n                tV: tV\n              });\n\n            case 2:\n              tx = _context.sent;\n              console.log('tip txid: ', tx);\n\n              if (tx) {\n                setTxid(tx);\n                setShowTxid(true);\n              }\n\n              setTimeout(function () {\n                setShowTxid(false);\n              }, 20000);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _sendTip.apply(this, arguments);\n  }\n\n  var suggestedTips = paymentTemplate.sugTip; // console.log(suggestedTips);\n\n  /**Mapping over suggestedTips and returning a button for each with the suggested tip, if no suggestedTip return default button */\n\n  if (suggestedTips) {\n    return __jsx(\"div\", {\n      className: classes.root\n    }, suggestedTips.map(function (tipValue) {\n      return __jsx(\"button\", {\n        //! sendTip takes the tipvalue and passes it back to the thunk. That vaule is used to calculate tip based on what is clicked\n        onClick: function onClick() {\n          return sendTip(tipValue);\n        },\n        className: classes.tipButton,\n        key: tipValue\n      }, __jsx(\"h4\", null, \"$\", tipValue), __jsx(\"img\", {\n        src: '/static/assets/icons/tip.png',\n        alt: 'tip'\n      }));\n    }), __jsx(\"div\", {\n      className: classes.transactionContainer\n    }, showTxid && __jsx(\"a\", {\n      target: \"_blank\",\n      href: \"https://livenet.flocha.in/tx/\".concat(txid),\n      className: classes.transactionLink\n    }, \"See payment here\")));\n  } else {\n    return __jsx(\"div\", {\n      className: classes.root\n    }, __jsx(\"button\", {\n      onClick: function onClick() {\n        return sendTip(0.2);\n      },\n      className: classes.tipButton\n    }, __jsx(\"h4\", null, \".20\\uD834\\uDDCD\"), __jsx(\"img\", {\n      src: '/static/assets/icons/tip.png',\n      alt: 'tip'\n    })), __jsx(\"div\", {\n      className: classes.transactionContainer\n    }, showTxid && __jsx(\"a\", {\n      target: \"_blank\",\n      href: \"https://livenet.flocha.in/tx/\".concat(txid),\n      className: classes.transactionLink\n    }, \"See payment here\")));\n  }\n};\n\nexport default withStyles(styles)(PaymentRow);","map":null,"metadata":{},"sourceType":"module"}