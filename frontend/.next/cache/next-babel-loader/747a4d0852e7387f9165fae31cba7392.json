{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Link from 'next/link';\nimport { useDispatch } from \"react-redux\";\nimport Alert from \"../../../shared/Alert\";\nimport { sortedLastIndex } from \"lodash\";\nimport withStyles from 'react-jss';\nimport axios from 'axios';\nimport { MdCropSquare } from \"react-icons/md\";\n\nconst styles = theme => ({\n  root: {\n    margin: 20\n  },\n  submitForm: {\n    margin: 25,\n    border: 1\n  }\n});\n\nconst LoginForm = ({\n  classes\n}) => {\n  //let history = useHistory();\n  //const dispatch = useDispatch();\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n\n  const onLogin = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n\n      if (data.msg === \"Please enter correct credentials\") {\n        setError(data.msg);\n        window.localStorage.removeItem(\"token\");\n      } else if (data.activated === false) {\n        window.localStorage.removeItem(\"token\");\n        setVerified(true);\n      } else {\n        window.localStorage.setItem(\"token\", JSON.stringify(data.token));\n        dispatch({\n          type: \"LOGIN\",\n          payload: true\n        }); //socket.emit(\"login\");\n        //history.push(\"/\");\n      } //const { mnemonic } = data;\n\n      /*\n      // handle error response\n      const createWalletData = await fetch(\"users/createWallet\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          mnemonic: mnemonic,\n          password,\n        }),\n      });\n      \n       const wifJson = await createWalletData.json();\n      console.log(\"wifJson\", wifJson);\n       localStorage.setItem(\"userAddress\", JSON.stringify(wifJson.wif));\n      */\n\n\n      console.log(\"success\");\n    } catch (err) {\n      console.log(\"onLogin error\" + err);\n    }\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    onLogin();\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"form\", {\n    onSubmit: onFormSubmit\n  }, __jsx(\"div\", {\n    className: \"form-group loginFormSpacing\"\n  }, __jsx(\"input\", {\n    placeholder: \"Email\",\n    className: \"form-control\",\n    onChange: e => {\n      setEmail(e.target.value.trim());\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"form-control\",\n    onChange: e => {\n      setPassword(e.target.value);\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group form-check rememberMeSection\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    id: \"html1\"\n  }), __jsx(\"label\", {\n    htmlFor: \"html1\"\n  }, \"Remember me\")), __jsx(\"div\", {\n    className: \"login-alert\"\n  }, error.length > 0 ? __jsx(Alert, {\n    content: error,\n    setAlert: () => {\n      setError(\"\");\n    }\n  }) : null), __jsx(\"button\", {\n    className: \"btn btn-primary\"\n  }, \"Sign in\")));\n};\n\nexport default withStyles(styles, {\n  injectTheme: true\n})(LoginForm);","map":null,"metadata":{},"sourceType":"module"}