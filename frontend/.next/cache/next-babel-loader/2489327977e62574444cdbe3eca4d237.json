{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/views/dumb/switchViewer/SwitchViewer.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport knownTemplates from '../../../templates/knownTemplates';\nimport VideoViewer from '../VideoViewer';\nimport PdfViewer from './PdfViewer';\nimport AudioPlayer from './AudioPlayer';\nimport ImageViewer from './ImageViewer';\nimport GenericRecordViewer from './GenericRecordViewer';\n\nconst SwitchViewer = ({\n  recordPayload,\n  purchasedData\n}) => {\n  const {\n    record\n  } = recordPayload;\n  '';\n  let location = '';\n\n  if (purchasedData.paid) {\n    location = purchasedData.data.location;\n  }\n\n  if (!record) {\n    return null; // return record viewer error/blank\n  }\n\n  const {\n    details\n  } = record;\n  let isVideo = false;\n  let isAudio = false;\n  let isImage = false;\n  let isPdf = false;\n\n  for (let tmpl of Object.keys(details)) {\n    if (knownTemplates.video.includes(tmpl)) isVideo = true;\n    if (knownTemplates.audio.includes(tmpl)) isAudio = true;\n    if (knownTemplates.image.includes(tmpl)) isImage = true;\n    if (knownTemplates.pdf.includes(tmpl)) isPdf = true;\n  }\n\n  if (isVideo) {\n    return __jsx(VideoViewer, {\n      recordPayload: recordPayload,\n      src: location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    });\n  } else if (isAudio) {\n    return __jsx(AudioPlayer, {\n      recordPayload: recordPayload,\n      src: location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    });\n  } else if (isImage) {\n    return __jsx(ImageViewer, {\n      recordPayload: recordPayload,\n      src: location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    });\n  } else if (isPdf) {\n    return __jsx(PdfViewer, {\n      recordPayload: recordPayload,\n      src: location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return __jsx(GenericRecordViewer, {\n      recordPayload: recordPayload,\n      src: location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nSwitchViewer.propTypes = {\n  recordPayload: PropTypes.shape({\n    record: PropTypes.object,\n    meta: PropTypes.object\n  })\n};\nexport default SwitchViewer;","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/views/dumb/switchViewer/SwitchViewer.js"],"names":["React","PropTypes","knownTemplates","VideoViewer","PdfViewer","AudioPlayer","ImageViewer","GenericRecordViewer","SwitchViewer","recordPayload","purchasedData","record","location","paid","data","details","isVideo","isAudio","isImage","isPdf","tmpl","Object","keys","video","includes","audio","image","pdf","propTypes","shape","object","meta"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAsC;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAaF,aAAnB;AAAiC;AAEjC,MAAIG,QAAQ,GAAG,EAAf;;AACA,MAAGF,aAAa,CAACG,IAAjB,EAAsB;AACpBD,IAAAA,QAAQ,GAAGF,aAAa,CAACI,IAAd,CAAmBF,QAA9B;AACD;;AAED,MAAI,CAACD,MAAL,EAAa;AACX,WAAO,IAAP,CADW,CACE;AACd;;AAED,QAAM;AAAEI,IAAAA;AAAF,MAAcJ,MAApB;AACA,MAAIK,OAAO,GAAG,KAAd;AACA,MAAIC,OAAO,GAAG,KAAd;AACA,MAAIC,OAAO,GAAG,KAAd;AACA,MAAIC,KAAK,GAAG,KAAZ;;AAEA,OAAK,IAAIC,IAAT,IAAiBC,MAAM,CAACC,IAAP,CAAYP,OAAZ,CAAjB,EAAuC;AACrC,QAAIb,cAAc,CAACqB,KAAf,CAAqBC,QAArB,CAA8BJ,IAA9B,CAAJ,EAAyCJ,OAAO,GAAG,IAAV;AACzC,QAAId,cAAc,CAACuB,KAAf,CAAqBD,QAArB,CAA8BJ,IAA9B,CAAJ,EAAyCH,OAAO,GAAG,IAAV;AACzC,QAAIf,cAAc,CAACwB,KAAf,CAAqBF,QAArB,CAA8BJ,IAA9B,CAAJ,EAAyCF,OAAO,GAAG,IAAV;AACzC,QAAIhB,cAAc,CAACyB,GAAf,CAAmBH,QAAnB,CAA4BJ,IAA5B,CAAJ,EAAuCD,KAAK,GAAG,IAAR;AACxC;;AACD,MAAIH,OAAJ,EAAa;AACX,WAAO,MAAC,WAAD;AAAa,MAAA,aAAa,EAAEP,aAA5B;AAA2C,MAAA,GAAG,EAAEG,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO,IAAIK,OAAJ,EAAa;AAClB,WAAO,MAAC,WAAD;AAAa,MAAA,aAAa,EAAER,aAA5B;AAA2C,MAAA,GAAG,EAAEG,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFM,MAEA,IAAIM,OAAJ,EAAa;AAClB,WAAO,MAAC,WAAD;AAAa,MAAA,aAAa,EAAET,aAA5B;AAA2C,MAAA,GAAG,EAAEG,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFM,MAEA,IAAIO,KAAJ,EAAW;AAChB,WAAO,MAAC,SAAD;AAAW,MAAA,aAAa,EAAEV,aAA1B;AAAyC,MAAA,GAAG,EAAEG,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFM,MAEA;AACL,WAAO,MAAC,mBAAD;AAAqB,MAAA,aAAa,EAAEH,aAApC;AAAmD,MAAA,GAAG,EAAEG,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CAnCD;;AAqCAJ,YAAY,CAACoB,SAAb,GAAyB;AACvBnB,EAAAA,aAAa,EAAER,SAAS,CAAC4B,KAAV,CAAgB;AAC7BlB,IAAAA,MAAM,EAAEV,SAAS,CAAC6B,MADW;AAE7BC,IAAAA,IAAI,EAAE9B,SAAS,CAAC6B;AAFa,GAAhB;AADQ,CAAzB;AAOA,eAAetB,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport knownTemplates from '../../../templates/knownTemplates';\nimport VideoViewer from '../VideoViewer';\nimport PdfViewer from './PdfViewer';\nimport AudioPlayer from './AudioPlayer';\nimport ImageViewer from './ImageViewer';\nimport GenericRecordViewer from './GenericRecordViewer';\n\nconst SwitchViewer = ({ recordPayload, purchasedData }) => {\n  const { record } = recordPayload;''\n\n  let location = ''\n  if(purchasedData.paid){\n    location = purchasedData.data.location\n  }\n\n  if (!record) {\n    return null; // return record viewer error/blank\n  }\n\n  const { details } = record;\n  let isVideo = false;\n  let isAudio = false;\n  let isImage = false;\n  let isPdf = false;\n\n  for (let tmpl of Object.keys(details)) {\n    if (knownTemplates.video.includes(tmpl)) isVideo = true;\n    if (knownTemplates.audio.includes(tmpl)) isAudio = true;\n    if (knownTemplates.image.includes(tmpl)) isImage = true;\n    if (knownTemplates.pdf.includes(tmpl)) isPdf = true;\n  }\n  if (isVideo) {\n    return <VideoViewer recordPayload={recordPayload} src={location} />;\n  } else if (isAudio) {\n    return <AudioPlayer recordPayload={recordPayload} src={location} />;\n  } else if (isImage) {\n    return <ImageViewer recordPayload={recordPayload} src={location} />;\n  } else if (isPdf) {\n    return <PdfViewer recordPayload={recordPayload} src={location} />;\n  } else {\n    return <GenericRecordViewer recordPayload={recordPayload} src={location} />;\n  }\n};\n\nSwitchViewer.propTypes = {\n  recordPayload: PropTypes.shape({\n    record: PropTypes.object,\n    meta: PropTypes.object\n  })\n};\n\nexport default SwitchViewer;\n"]},"metadata":{},"sourceType":"module"}