{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/views/dumb/loginForm/LoginForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Link from 'next/link';\nimport { useDispatch } from \"react-redux\";\nimport Alert from \"../../../shared/Alert\";\nimport { sortedLastIndex } from \"lodash\";\nimport PropTypes from 'prop-types';\nimport withStyles from 'react-jss';\nimport axios from 'axios';\nimport { MdCropSquare } from \"react-icons/md\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      margin: 20\n    },\n    signInButton: {\n      marginTop: 10,\n      backgroundColor: '#008CBA',\n      padding: '15px 32px',\n      borderRadius: '4px'\n    }\n  };\n};\n\nvar LoginForm = function LoginForm(_ref) {\n  _s();\n\n  var classes = _ref.classes;\n\n  //let history = useHistory();\n  //const dispatch = useDispatch();\n  var _useState = useState(\"\"),\n      displayName = _useState[0],\n      setDisplayName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var onLogin = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"http://localhost:5000/api/users/login\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  displayName: displayName,\n                  password: password\n                })\n              });\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context.sent;\n              console.log(data);\n\n              if (data.msg === \"Please enter correct credentials\") {\n                setError(data.msg);\n                window.localStorage.removeItem(\"token\");\n              } else if (data.activated === false) {\n                window.localStorage.removeItem(\"token\");\n                setVerified(true);\n              } else {\n                window.localStorage.setItem(\"token\", JSON.stringify(data.token));\n                dispatch({\n                  type: \"LOGIN\",\n                  payload: true\n                }); //socket.emit(\"login\");\n                //history.push(\"/\");\n              } //const { mnemonic } = data;\n\n              /*\n              // handle error response\n              const createWalletData = await fetch(\"users/createWallet\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  mnemonic: mnemonic,\n                  password,\n                }),\n              });\n              \n               const wifJson = await createWalletData.json();\n              console.log(\"wifJson\", wifJson);\n               localStorage.setItem(\"userAddress\", JSON.stringify(wifJson.wif));\n              */\n\n\n              console.log(\"success\");\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"onLogin error\" + _context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function onLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onFormSubmit = function onFormSubmit(e) {\n    e.preventDefault();\n    onLogin();\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"card-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Sign In\")), __jsx(\"form\", {\n    onSubmit: onFormSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group loginFormSpacing\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Display Name\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      setDisplayName(e.target.value.trim());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      setPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group form-check rememberMeSection\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    id: \"html1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"html1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Remember me\")), __jsx(\"div\", {\n    className: \"login-alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, error.length > 0 ? __jsx(Alert, {\n    content: error,\n    setAlert: function setAlert() {\n      setError(\"\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }) : null), __jsx(\"button\", {\n    className: classes.signInButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Sign in\")));\n};\n\n_s(LoginForm, \"wG6YzNmLb0G5PzsrsbTKcGEWAPs=\");\n\n_c = LoginForm;\nLoginForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  injectTheme: true\n})(LoginForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/views/dumb/loginForm/LoginForm.js"],"names":["React","useState","Link","useDispatch","Alert","sortedLastIndex","PropTypes","withStyles","axios","MdCropSquare","styles","theme","root","margin","signInButton","marginTop","backgroundColor","padding","borderRadius","LoginForm","classes","displayName","setDisplayName","email","setEmail","password","setPassword","error","setError","onLogin","fetch","method","headers","body","JSON","stringify","response","json","data","console","log","msg","window","localStorage","removeItem","activated","setVerified","setItem","token","dispatch","type","payload","onFormSubmit","e","preventDefault","target","value","trim","length","propTypes","object","isRequired","injectTheme"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Link from 'next/link'\nimport { useDispatch } from \"react-redux\";\nimport Alert from \"../../../shared/Alert\";\nimport { sortedLastIndex } from \"lodash\";\nimport PropTypes from 'prop-types';\nimport withStyles from 'react-jss'\nimport axios from 'axios'\nimport { MdCropSquare } from \"react-icons/md\";\n\nconst styles = theme => ({\n  root: {\n    margin: 20,\n  },\n  signInButton: {\n    marginTop: 10,\n    backgroundColor: '#008CBA',\n    padding: '15px 32px',\n    borderRadius: '4px'\n  }\n})\n\nconst LoginForm = ({\n  classes,\n}) => {\n  //let history = useHistory();\n  //const dispatch = useDispatch();\n\n  const [displayName, setDisplayName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const onLogin = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          displayName: displayName,\n          password: password,\n        }),\n      });\n      const data = await response.json();\n\n      console.log(data)\n\n      \n      if (data.msg === \"Please enter correct credentials\") {\n        setError(data.msg);\n        window.localStorage.removeItem(\"token\");\n      } else if (data.activated === false) {\n        window.localStorage.removeItem(\"token\");\n        setVerified(true);\n      } else {\n        window.localStorage.setItem(\"token\", JSON.stringify(data.token));\n        dispatch({ type: \"LOGIN\", payload: true });\n        //socket.emit(\"login\");\n        //history.push(\"/\");\n      }\n\n\n      //const { mnemonic } = data;\n\n      /*\n      // handle error response\n      const createWalletData = await fetch(\"users/createWallet\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          mnemonic: mnemonic,\n          password,\n        }),\n      });\n      \n\n      const wifJson = await createWalletData.json();\n      console.log(\"wifJson\", wifJson);\n\n      localStorage.setItem(\"userAddress\", JSON.stringify(wifJson.wif));\n      */\n     console.log(\"success\")\n    } catch (err) {\n      console.log(\"onLogin error\" + err);\n    }\n  };\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    onLogin();\n  };\n\n  return(\n    <div className={classes.root}>\n      <div className=\"card-header\">\n          <h3>Sign In</h3>\n      </div>\n      <form onSubmit={onFormSubmit}>\n        <div className=\"form-group loginFormSpacing\">\n          <input\n            placeholder=\"Display Name\"\n            className=\"form-control\"\n            onChange={(e) => {\n              setDisplayName(e.target.value.trim());\n            }}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"form-control\"\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"form-group form-check rememberMeSection\">\n          <input type=\"checkbox\" id=\"html1\" />\n          <label htmlFor=\"html1\">Remember me</label>\n        </div>\n        <div className=\"login-alert\">\n          {error.length > 0 ? (\n            <Alert\n              content={error}\n              setAlert={() => {\n                setError(\"\");\n              }}\n            />\n          ) : null}\n        </div>\n        <button className={classes.signInButton}>Sign in</button>\n      </form>\n    </div>\n  )\n}\n\n\n\nLoginForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles, { injectTheme: true }) (LoginForm);"]},"metadata":{},"sourceType":"module"}