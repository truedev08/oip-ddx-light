{"ast":null,"code":"import { useEffect, useState } from 'react';\n\nconst useWindowSize = ({\n  breakpoints = {\n    xs: 0,\n    sm: 600,\n    md: 960,\n    lg: 1280,\n    xl: 1920\n  },\n  initialWidth = Infinity,\n  initialHeight = Infinity\n}) => {\n  const isClient = false;\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    width: isClient ? window.innerWidth : initialWidth,\n    height: isClient ? window.innerHeight : initialHeight\n  });\n  useEffect(() => {\n    if (isClient) {\n      const handler = () => {\n        setState({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      };\n\n      window.addEventListener('resize', handler);\n      return () => window.removeEventListener('resize', handler);\n    } else {\n      return undefined;\n    }\n  }, []);\n  const {\n    height,\n    width\n  } = state;\n  let breakpoint;\n\n  if (width < breakpoints['sm']) {\n    breakpoint = 'xs';\n  } else if (width < breakpoints['md'] && width >= breakpoints['sm']) {\n    breakpoint = 'sm';\n  } else if (width < breakpoints['lg'] && width >= breakpoints['md']) {\n    breakpoint = 'md';\n  } else if (width < breakpoints['xl'] && width >= breakpoints['lg']) {\n    breakpoint = 'lg';\n  } else breakpoint = 'xl';\n\n  return {\n    height,\n    width,\n    breakpoint\n  };\n};\n\nexport default useWindowSize;","map":null,"metadata":{},"sourceType":"module"}