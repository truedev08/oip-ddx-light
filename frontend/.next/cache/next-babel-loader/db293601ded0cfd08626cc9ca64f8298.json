{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { DaemonApi } from 'js-oip';\nimport config from '../../config.js';\nimport * as actions from '../actions/Explorer/creators';\nconst initialState = {\n  daemonApi: new DaemonApi(config.daemonApiUrl),\n  templateFilter: config.templateFilter,\n  templateOperand: config.templateOperand,\n  defaultRecordKeys: [],\n  defaultTemplateKeys: [],\n  searchedRecordKeys: [],\n  searchedTemplateKeys: [],\n  searchedRecords: {},\n  searchedTemplates: {},\n  defaultTemplates: {},\n  defaultRecords: {},\n  recordsFetching: false,\n  recordsSuccess: false,\n  recordsError: false,\n  recordsErrorMessage: undefined,\n  templatesFetching: false,\n  templatesSuccess: false,\n  templatesError: false,\n  templatesErrorMessage: undefined\n};\n\nconst Explorer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SET_DAEMON_API:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          daemonApi: action.daemon\n        });\n      }\n\n    case actions.SET_DEFAULT_RECORDS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        defaultRecords: _objectSpread(_objectSpread({}, state.defaultRecords), {}, {\n          [action.payload.next]: action.payload\n        }),\n        defaultRecordKeys: [...state.defaultRecordKeys, action.payload.next]\n      });\n\n    case actions.SET_DEFAULT_TEMPLATES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        defaultTemplates: _objectSpread(_objectSpread({}, state.defaultTemplates), {}, {\n          [action.payload.next]: action.payload\n        }),\n        defaultTemplateKeys: [...state.defaultTemplateKeys, action.payload.next]\n      });\n\n    case actions.SET_SEARCHED_RECORDS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          searchedRecords: {\n            [action.payload.next]: action.payload\n          },\n          searchedRecordKeys: [action.payload.next]\n        });\n      }\n\n    case actions.SET_SEARCHED_TEMPLATES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchedTemplates: {\n          [action.payload.next]: action.payload\n        },\n        searchedTemplateKeys: [action.payload.next]\n      });\n\n    case actions.FETCHING_RECORDS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recordsFetching: false,\n        recordsError: false,\n        recordsErrorMessage: null,\n        recordsSuccess: true\n      });\n\n    case actions.FETCHING_RECORDS_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recordsFetching: false,\n        recordsError: true,\n        recordsErrorMessage: action.error,\n        recordsSuccess: false\n      });\n\n    case actions.FETCHING_RECORDS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recordsFetching: true,\n        recordsError: false,\n        recordsErrorMessage: null,\n        recordsSuccess: false\n      });\n\n    case actions.FETCHING_TEMPLATES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        templatesError: false,\n        templatesFetching: true,\n        templatesSuccess: false,\n        templatesErrorMessage: null\n      });\n\n    case actions.FETCHING_TEMPLATES_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        templatesError: false,\n        templatesFetching: false,\n        templatesSuccess: true,\n        templatesErrorMessage: null\n      });\n\n    case actions.FETCHING_TEMPLATES_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        templatesError: true,\n        templatesFetching: false,\n        templatesSuccess: false,\n        templatesErrorMessage: action.error\n      });\n\n    case actions.CLEAR_FETCH_STATUS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        templatesError: false,\n        templatesFetching: false,\n        templatesSuccess: false,\n        templatesErrorMessage: null,\n        recordsFetching: false,\n        recordsError: false,\n        recordsErrorMessage: null,\n        recordsSuccess: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default Explorer;","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/redux/reducers/Explorer.js"],"names":["DaemonApi","config","actions","initialState","daemonApi","daemonApiUrl","templateFilter","templateOperand","defaultRecordKeys","defaultTemplateKeys","searchedRecordKeys","searchedTemplateKeys","searchedRecords","searchedTemplates","defaultTemplates","defaultRecords","recordsFetching","recordsSuccess","recordsError","recordsErrorMessage","undefined","templatesFetching","templatesSuccess","templatesError","templatesErrorMessage","Explorer","state","action","type","SET_DAEMON_API","daemon","SET_DEFAULT_RECORDS","payload","next","SET_DEFAULT_TEMPLATES","SET_SEARCHED_RECORDS","SET_SEARCHED_TEMPLATES","FETCHING_RECORDS_SUCCESS","FETCHING_RECORDS_ERROR","error","FETCHING_RECORDS","FETCHING_TEMPLATES","FETCHING_TEMPLATES_SUCCESS","FETCHING_TEMPLATES_ERROR","CLEAR_FETCH_STATUS"],"mappings":"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","sourcesContent":["import { DaemonApi } from 'js-oip'\nimport config from '../../config.js'\nimport * as actions from '../actions/Explorer/creators'\n\nconst initialState = {\n  daemonApi: new DaemonApi(config.daemonApiUrl),\n  templateFilter: config.templateFilter,\n  templateOperand: config.templateOperand,\n  defaultRecordKeys: [],\n  defaultTemplateKeys: [],\n  searchedRecordKeys: [],\n  searchedTemplateKeys: [],\n  searchedRecords: {},\n  searchedTemplates: {},\n  defaultTemplates: {},\n  defaultRecords: {},\n  recordsFetching: false,\n  recordsSuccess: false,\n  recordsError: false,\n  recordsErrorMessage: undefined,\n  templatesFetching: false,\n  templatesSuccess: false,\n  templatesError: false,\n  templatesErrorMessage: undefined\n}\nconst Explorer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SET_DAEMON_API: {\n      return {\n        ...state,\n        daemonApi: action.daemon\n      }\n    }\n    case actions.SET_DEFAULT_RECORDS:\n      return {\n        ...state,\n        defaultRecords: {\n          ...state.defaultRecords,\n          [action.payload.next]: action.payload\n        },\n        defaultRecordKeys: [...state.defaultRecordKeys, action.payload.next]\n      }\n    case actions.SET_DEFAULT_TEMPLATES:\n      return {\n        ...state,\n        defaultTemplates: {\n          ...state.defaultTemplates,\n          [action.payload.next]: action.payload\n        },\n        defaultTemplateKeys: [...state.defaultTemplateKeys, action.payload.next]\n      }\n    case actions.SET_SEARCHED_RECORDS: {\n      return {\n        ...state,\n        searchedRecords: { [action.payload.next]: action.payload },\n        searchedRecordKeys: [action.payload.next]\n      }\n    }\n    case actions.SET_SEARCHED_TEMPLATES:\n      return {\n        ...state,\n        searchedTemplates: { [action.payload.next]: action.payload },\n        searchedTemplateKeys: [action.payload.next]\n      }\n    case actions.FETCHING_RECORDS_SUCCESS:\n      return {\n        ...state,\n        recordsFetching: false,\n        recordsError: false,\n        recordsErrorMessage: null,\n        recordsSuccess: true\n      }\n    case actions.FETCHING_RECORDS_ERROR:\n      return {\n        ...state,\n        recordsFetching: false,\n        recordsError: true,\n        recordsErrorMessage: action.error,\n        recordsSuccess: false\n      }\n    case actions.FETCHING_RECORDS:\n      return {\n        ...state,\n        recordsFetching: true,\n        recordsError: false,\n        recordsErrorMessage: null,\n        recordsSuccess: false\n      }\n    case actions.FETCHING_TEMPLATES:\n      return {\n        ...state,\n        templatesError: false,\n        templatesFetching: true,\n        templatesSuccess: false,\n        templatesErrorMessage: null\n      }\n    case actions.FETCHING_TEMPLATES_SUCCESS:\n      return {\n        ...state,\n        templatesError: false,\n        templatesFetching: false,\n        templatesSuccess: true,\n        templatesErrorMessage: null\n      }\n    case actions.FETCHING_TEMPLATES_ERROR:\n      return {\n        ...state,\n        templatesError: true,\n        templatesFetching: false,\n        templatesSuccess: false,\n        templatesErrorMessage: action.error\n      }\n    case actions.CLEAR_FETCH_STATUS:\n      return {\n        ...state,\n        templatesError: false,\n        templatesFetching: false,\n        templatesSuccess: false,\n        templatesErrorMessage: null,\n        recordsFetching: false,\n        recordsError: false,\n        recordsErrorMessage: null,\n        recordsSuccess: false\n      }\n    default:\n      return state\n  }\n}\n\nexport default Explorer\n"]},"metadata":{},"sourceType":"module"}