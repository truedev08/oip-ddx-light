{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/views/dumb/templatePublisher/TemplatePublisher.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport withStyles from 'react-jss';\nimport PropTypes from 'prop-types';\nimport { RecordTemplate } from 'oip-react';\nconst styles = {\n  root: {\n    display: 'flex',\n    flex: 1\n  }\n};\nconst RecordTemplateStyles = {\n  recordTemplateRoot: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: '30px'\n  }\n};\nconst RecordTemplateJSS = withStyles(RecordTemplateStyles)(RecordTemplate);\n\nconst TemplatePublisher = ({\n  classes,\n  extendTemplateIds,\n  withPublisher = true\n}) => {\n  const {\n    0: feedback,\n    1: setFeedback\n  } = useState(null);\n\n  function handleOnSuccess(txid) {\n    console.log('Success: ', txid);\n    setFeedback(`Success: ${txid}`);\n  }\n\n  function handleOnError(err) {\n    setFeedback(`Error: ${err.message}`);\n    console.error(err);\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }, __jsx(RecordTemplateJSS, {\n    onSuccess: handleOnSuccess,\n    onError: handleOnError,\n    _extends: extendTemplateIds,\n    withPublisher: withPublisher,\n    feedback: feedback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }));\n};\n\nTemplatePublisher.propTypes = {\n  classes: PropTypes.object.isRequired,\n  withPublisher: PropTypes.bool,\n  extendTemplateIds: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number])\n};\nexport default withStyles(styles)(TemplatePublisher);","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/views/dumb/templatePublisher/TemplatePublisher.js"],"names":["React","useState","withStyles","PropTypes","RecordTemplate","styles","root","display","flex","RecordTemplateStyles","recordTemplateRoot","marginLeft","marginRight","marginTop","RecordTemplateJSS","TemplatePublisher","classes","extendTemplateIds","withPublisher","feedback","setFeedback","handleOnSuccess","txid","console","log","handleOnError","err","message","error","propTypes","object","isRequired","bool","oneOfType","arrayOf","number"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,WAA/B;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,IAAI,EAAE;AAFF;AADO,CAAf;AAOA,MAAMC,oBAAoB,GAAI;AAC5BC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,UAAU,EAAE,MADM;AAElBC,IAAAA,WAAW,EAAE,MAFK;AAGlBC,IAAAA,SAAS,EAAE;AAHO;AADQ,CAA9B;AAQA,MAAMC,iBAAiB,GAAGZ,UAAU,CAACO,oBAAD,CAAV,CAAiCL,cAAjC,CAA1B;;AAEA,MAAMW,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,OADyB;AAEzBC,EAAAA,iBAFyB;AAGzBC,EAAAA,aAAa,GAAG;AAHS,CAAD,KAIpB;AAEJ,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BnB,QAAQ,CAAC,IAAD,CAAxC;;AAEA,WAASoB,eAAT,CAA0BC,IAA1B,EAAgC;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;AACAF,IAAAA,WAAW,CAAE,YAAWE,IAAK,EAAlB,CAAX;AACD;;AAED,WAASG,aAAT,CAAwBC,GAAxB,EAA6B;AAC3BN,IAAAA,WAAW,CAAE,UAASM,GAAG,CAACC,OAAQ,EAAvB,CAAX;AACAJ,IAAAA,OAAO,CAACK,KAAR,CAAcF,GAAd;AACD;;AAED,SAAO;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACV,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,MAAC,iBAAD;AACE,IAAA,SAAS,EAAEe,eADb;AAEE,IAAA,OAAO,EAAEI,aAFX;AAGE,IAAA,QAAQ,EAAER,iBAHZ;AAIE,IAAA,aAAa,EAAEC,aAJjB;AAKE,IAAA,QAAQ,EAAEC,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CAAP;AASD,CA3BD;;AA6BAJ,iBAAiB,CAACc,SAAlB,GAA8B;AAC5Bb,EAAAA,OAAO,EAAEb,SAAS,CAAC2B,MAAV,CAAiBC,UADE;AAE5Bb,EAAAA,aAAa,EAAEf,SAAS,CAAC6B,IAFG;AAG5Bf,EAAAA,iBAAiB,EAAEd,SAAS,CAAC8B,SAAV,CAAoB,CACrC9B,SAAS,CAAC+B,OAAV,CAAkB/B,SAAS,CAACgC,MAA5B,CADqC,EAErChC,SAAS,CAACgC,MAF2B,CAApB;AAHS,CAA9B;AASA,eAAejC,UAAU,CAACG,MAAD,CAAV,CAAmBU,iBAAnB,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport withStyles from 'react-jss'\nimport PropTypes from 'prop-types'\nimport { RecordTemplate } from 'oip-react'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    flex: 1\n  }\n}\n\nconst RecordTemplateStyles = ({\n  recordTemplateRoot: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: '30px'\n\n  }\n})\nconst RecordTemplateJSS = withStyles(RecordTemplateStyles)(RecordTemplate)\n\nconst TemplatePublisher = ({\n  classes,\n  extendTemplateIds,\n  withPublisher = true\n}) => {\n\n  const [feedback, setFeedback] = useState(null)\n\n  function handleOnSuccess (txid) {\n    console.log('Success: ', txid)\n    setFeedback(`Success: ${txid}`)\n  }\n\n  function handleOnError (err) {\n    setFeedback(`Error: ${err.message}`)\n    console.error(err)\n  }\n\n  return <div className={classes.root}>\n    <RecordTemplateJSS\n      onSuccess={handleOnSuccess}\n      onError={handleOnError}\n      _extends={extendTemplateIds}\n      withPublisher={withPublisher}\n      feedback={feedback}\n    />\n  </div>\n}\n\nTemplatePublisher.propTypes = {\n  classes: PropTypes.object.isRequired,\n  withPublisher: PropTypes.bool,\n  extendTemplateIds: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.number),\n    PropTypes.number\n  ])\n}\n\nexport default withStyles(styles)(TemplatePublisher)\n"]},"metadata":{},"sourceType":"module"}