{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/views/dumb/recordMap/RecordMap.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport withStyles from 'react-jss';\nimport PropTypes from 'prop-types';\nimport isObjEmpty from '../../util/isObjEmpty';\nimport RecordRow from '../recordRow/RecordRow';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    padding: [0, 30],\n    boxSizing: 'border-box',\n    '& table': {\n      borderCollapse: 'collapse',\n      borderSpacing: 0\n    }\n  },\n  [`@media (max-width: ${theme.breakpoints['sm']}px)`]: {\n    root: {// justifyContent: 'center'\n    }\n  }\n});\n\nconst RecordMap = ({\n  classes,\n  records,\n  isVerified,\n  showOnlyVerifiedPublishers,\n  purchasedData,\n  handleClick\n}) => {\n  let recordData = [];\n\n  if (Array.isArray(records)) {\n    recordData = records;\n  } else if (!isObjEmpty(records)) {\n    recordData = [...records.results];\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, recordData.map(payload => {\n    const {\n      meta,\n      record\n    } = payload;\n\n    if (!record) {\n      console.error('Missing record data for following payload:', payload);\n      return null;\n    }\n\n    return __jsx(RecordRow, {\n      record: record,\n      meta: meta,\n      isVerified: isVerified,\n      key: meta.txid,\n      showOnlyVerifiedPublishers: showOnlyVerifiedPublishers,\n      purchasedData: purchasedData,\n      handleClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }\n    });\n  })));\n};\n\nRecordMap.propTypes = {\n  classes: PropTypes.object.isRequired,\n  records: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n};\nexport default withStyles(styles)(RecordMap);","map":{"version":3,"sources":["/Users/martinadams/Desktop/FLO-OIP projects/DDX/oip-ddx-light/frontend/components/views/dumb/recordMap/RecordMap.js"],"names":["React","withStyles","PropTypes","isObjEmpty","RecordRow","styles","theme","root","width","maxWidth","padding","boxSizing","borderCollapse","borderSpacing","breakpoints","RecordMap","classes","records","isVerified","showOnlyVerifiedPublishers","purchasedData","handleClick","recordData","Array","isArray","results","map","payload","meta","record","console","error","txid","propTypes","object","isRequired","oneOfType","array"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,EAAJ,CAHL;AAIJC,IAAAA,SAAS,EAAE,YAJP;AAKJ,eAAW;AACTC,MAAAA,cAAc,EAAE,UADP;AAETC,MAAAA,aAAa,EAAE;AAFN;AALP,GADiB;AAWvB,GAAE,sBAAqBP,KAAK,CAACQ,WAAN,CAAkB,IAAlB,CAAwB,KAA/C,GAAsD;AACpDP,IAAAA,IAAI,EAAE,CACJ;AADI;AAD8C;AAX/B,CAAL,CAApB;;AAkBA,MAAMQ,SAAS,GAAG,CAAC;AACjBC,EAAAA,OADiB;AAEjBC,EAAAA,OAFiB;AAGjBC,EAAAA,UAHiB;AAIjBC,EAAAA,0BAJiB;AAKjBC,EAAAA,aALiB;AAMjBC,EAAAA;AANiB,CAAD,KAOZ;AACJ,MAAIC,UAAU,GAAG,EAAjB;;AACA,MAAIC,KAAK,CAACC,OAAN,CAAcP,OAAd,CAAJ,EAA4B;AAC1BK,IAAAA,UAAU,GAAGL,OAAb;AACD,GAFD,MAEO,IAAI,CAACd,UAAU,CAACc,OAAD,CAAf,EAA0B;AAC/BK,IAAAA,UAAU,GAAG,CAAC,GAAGL,OAAO,CAACQ,OAAZ,CAAb;AACD;;AACD,SAAO;AAAK,IAAA,SAAS,EAAET,OAAO,CAACT,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGe,UAAU,CAACI,GAAX,CAAeC,OAAO,IAAI;AACzB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmBF,OAAzB;;AACA,QAAI,CAACE,MAAL,EAAa;AACXC,MAAAA,OAAO,CAACC,KAAR,CAAc,4CAAd,EAA4DJ,OAA5D;AACA,aAAO,IAAP;AACD;;AACD,WAAO,MAAC,SAAD;AACL,MAAA,MAAM,EAAEE,MADH;AAEL,MAAA,IAAI,EAAED,IAFD;AAGL,MAAA,UAAU,EAAEV,UAHP;AAIL,MAAA,GAAG,EAAEU,IAAI,CAACI,IAJL;AAKL,MAAA,0BAA0B,EAAEb,0BALvB;AAML,MAAA,aAAa,EAAEC,aANV;AAOL,MAAA,WAAW,EAAEC,WAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AASD,GAfA,CADH,CADK,CAAP;AAoBD,CAlCD;;AAoCAN,SAAS,CAACkB,SAAV,GAAsB;AACpBjB,EAAAA,OAAO,EAAEd,SAAS,CAACgC,MAAV,CAAiBC,UADN;AAEpBlB,EAAAA,OAAO,EAAEf,SAAS,CAACkC,SAAV,CAAoB,CAC3BlC,SAAS,CAACgC,MADiB,EAE3BhC,SAAS,CAACmC,KAFiB,CAApB;AAFW,CAAtB;AAQA,eAAepC,UAAU,CAACI,MAAD,CAAV,CAAmBU,SAAnB,CAAf","sourcesContent":["import React from 'react'\nimport withStyles from 'react-jss'\nimport PropTypes from 'prop-types'\nimport isObjEmpty from '../../util/isObjEmpty'\nimport RecordRow from '../recordRow/RecordRow'\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    padding: [0, 30],\n    boxSizing: 'border-box',\n    '& table': {\n      borderCollapse: 'collapse',\n      borderSpacing: 0\n    }\n  },\n  [`@media (max-width: ${theme.breakpoints['sm']}px)`]: {\n    root: {\n      // justifyContent: 'center'\n    }\n  }\n})\n\nconst RecordMap = ({\n  classes,\n  records,\n  isVerified,\n  showOnlyVerifiedPublishers,\n  purchasedData,\n  handleClick,\n}) => {\n  let recordData = []\n  if (Array.isArray(records)) {\n    recordData = records\n  } else if (!isObjEmpty(records)) {\n    recordData = [...records.results]\n  }\n  return <div className={classes.root}>\n    <div>\n      {recordData.map(payload => {\n        const { meta, record } = payload\n        if (!record) {\n          console.error('Missing record data for following payload:', payload)\n          return null\n        }\n        return <RecordRow\n          record={record}\n          meta={meta}\n          isVerified={isVerified}\n          key={meta.txid}\n          showOnlyVerifiedPublishers={showOnlyVerifiedPublishers}\n          purchasedData={purchasedData}\n          handleClick={handleClick}\n        />\n      })}\n    </div>\n  </div>\n}\n\nRecordMap.propTypes = {\n  classes: PropTypes.object.isRequired,\n  records: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array\n  ])\n}\n\nexport default withStyles(styles)(RecordMap)\n"]},"metadata":{},"sourceType":"module"}