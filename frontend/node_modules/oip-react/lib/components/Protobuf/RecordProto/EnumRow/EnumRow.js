"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// removes _ from enum values
function formatEnumValue(value) {
  value = value.split('_');

  if (value[1]) {
    value = value[1].toLowerCase();
    return value.charAt(0).toUpperCase() + value.slice(1);
  }

  return value[0].toLowerCase();
} //* ** Enum Dropdown ***/


const EnumRow = ({
  enumField,
  enumData,
  classes,
  dispatch
}) => {
  const [state, setState] = (0, _react.useState)(0);

  function handleSelectChange(e) {
    setState(Number(e.target.value));
  }

  (0, _react.useEffect)(() => {
    dispatch({
      type: 'UPDATE',
      value: state,
      field: enumField
    });
  }, [state]);
  let values; // currently don't allow repeated

  if (enumData && enumData.values) {
    values = enumData.values;
  } // creates enum field dropdown


  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.fieldContainer
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: classes.fieldTitle
  }, "Field: ", enumField), /*#__PURE__*/_react.default.createElement("select", {
    value: state,
    onChange: handleSelectChange,
    className: classes.selectField
  }, values && Object.keys(values).map((value, i) => {
    return /*#__PURE__*/_react.default.createElement("option", {
      key: `${value}-${i}`,
      value: values[value]
    }, formatEnumValue(value));
  })));
};

var _default = EnumRow;
exports.default = _default;