"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _UI = require("../../../UI");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/** * FIELD INPUTS***/
const FieldRow = ({
  field,
  fieldData,
  classes,
  dispatch
}) => {
  const [state, setState] = (0, _react.useState)('');
  const {
    type,
    repeated
  } = fieldData;

  function handleInputChange(e, tags = false) {
    if (tags) {
      setState(e);
    } else {
      setState(e.target.value);
    }
  }

  (0, _react.useEffect)(() => {
    dispatch({
      type: 'UPDATE',
      value: state,
      field: field
    });
  }, [state, field]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.fieldContainer
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: classes.fieldTitle
  }, "Field: ", field, " | Type: ", repeated ? 'Repeated' : null, " ", type), repeated ? /*#__PURE__*/_react.default.createElement(_UI.TagsInput, {
    placeholder: `${field}`,
    getTags: tags => {
      handleInputChange(tags, true);
    },
    allowSpaces: true,
    classes: classes
  }) : /*#__PURE__*/_react.default.createElement("input", {
    className: classes.inputField,
    placeholder: field.toLowerCase(),
    type: type,
    value: state,
    onChange: handleInputChange
  }));
};

var _default = FieldRow;
exports.default = _default;