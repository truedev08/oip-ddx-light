"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactJss = _interopRequireDefault(require("react-jss"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _oipProtobufjs = require("oip-protobufjs");

var _Publisher = require("../../Publisher");

var _index = require("../index");

var _styles = _interopRequireDefault(require("./styles"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const RecordTemplate = ({
  classes,
  onSuccess,
  onError,
  _extends,
  mainnetExplorerUrl = 'https://livenet.flocha.in/api',
  testnetExplorerUrl = 'https://testnet.explorer.mediciland.com/api',
  withPublisher = false,
  feedback,
  wif,
  hidePrivateKeyInput = false
}) => {
  const [name, setName] = (0, _react.useState)('');
  const [description, setDescription] = (0, _react.useState)('');
  const descriptorRef = (0, _react.useRef)(null);

  function getSignedTemplateMessage({
    wif,
    network
  }) {
    let template;

    try {
      template = (0, _oipProtobufjs.templateBuilder)({
        friendlyName: name,
        DescriptorSetProto: descriptorRef.current,
        wif,
        description,
        network,
        _extends
      });
    } catch (err) {
      throw Error(`Failed to build proto template at getSignedTemplateMessage in RecordTemplate.js: \n ${err}`);
    }

    const {
      signedMessage64
    } = template;
    return signedMessage64;
  }

  function prefixMessage(message) {
    const prefix = 'p64:';
    return `${prefix}${message}`;
  }

  function getMessage({
    wif,
    network
  }) {
    let signedMessage;

    try {
      signedMessage = getSignedTemplateMessage({
        wif,
        network
      });
    } catch (err) {
      throw Error(`Failed to getSignedTemplateMessage at getMessage() in RecordTemplate.js: \n ${err}`);
    }

    return prefixMessage(signedMessage);
  }

  const getProtoDescriptor = descriptor => {
    descriptorRef.current = descriptor;
  };

  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.recordTemplateRoot
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)(classes.templateFieldRow, classes.nameRow)
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: classes.inputTitle
  }, "Friendly Name"), /*#__PURE__*/_react.default.createElement("input", {
    type: "text",
    value: name,
    className: classes.inputBase,
    onChange: e => setName(e.target.value),
    placeholder: "Template name"
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)(classes.templateFieldRow, classes.descriptionRow)
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: classes.inputTitle
  }, "Description"), /*#__PURE__*/_react.default.createElement("input", {
    type: "text",
    value: description,
    className: classes.inputBase,
    onChange: e => setDescription(e.target.value),
    placeholder: "Template description"
  })), /*#__PURE__*/_react.default.createElement(_index.DescriptorSetProto, {
    getDescriptor: getProtoDescriptor,
    classes: classes
  }), withPublisher && /*#__PURE__*/_react.default.createElement(_Publisher.Publisher, {
    classes: classes,
    onSuccess: onSuccess,
    onError: onError,
    getMessage: getMessage,
    mainnetExplorerUrl: mainnetExplorerUrl,
    testnetExplorerUrl: testnetExplorerUrl,
    feedback: feedback,
    wif: wif,
    hidePrivateKeyInput: hidePrivateKeyInput
  }));
};

RecordTemplate.propTypes = {
  classes: _propTypes.default.object.isRequired,
  _extends: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.number)]),
  onSuccess: _propTypes.default.func,
  onError: _propTypes.default.func,
  withPublisher: _propTypes.default.bool,
  mainnetExplorerUrl: _propTypes.default.string,
  testnetExplorerUrl: _propTypes.default.string,
  hidePrivateKeyInput: _propTypes.default.bool,
  wif: _propTypes.default.string
};

var _default = (0, _reactJss.default)(_styles.default)(RecordTemplate);

exports.default = _default;