"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactJss = _interopRequireDefault(require("react-jss"));

var _icons = require("@material-ui/icons");

var _classnames = _interopRequireDefault(require("classnames"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const styles = theme => ({
  root: {
    display: 'flex',
    flexDirection: 'column',
    flex: '1',
    alignItems: 'center',
    justifyContent: 'center',
    position: 'relative'
  },
  sendHeader: {
    display: 'flex',
    flexDirection: 'row',
    flex: '3',
    justifyContent: 'center',
    alignItems: 'center',
    width: '100%',
    fontSize: '22px'
  },
  sendBody: {
    display: 'flex',
    flexDirection: 'row',
    flex: '9',
    justifyContent: 'center',
    alignItems: 'center',
    width: '100%',
    position: 'relative',
    top: '-33px'
  },
  flexSpacer: {
    display: 'flex',
    flex: '2'
  },
  cycleArrow: {
    display: 'flex',
    flex: '1',
    cursor: 'pointer',
    justifyContent: 'center'
  },
  formContainer: {
    display: 'flex',
    flex: '6',
    justifyContent: 'center',
    alignItems: 'center'
  },
  inputBase: {
    border: 'none',
    borderBottom: `2px solid ${theme.palette.primary.main}`,
    display: 'flex',
    flex: '1',
    height: 40,
    outline: 'none',
    fontSize: 20,
    textAlign: 'center'
  },
  amountInput: {},
  addressInput: {
    fontSize: '15px'
  },
  flodataInput: {
    fontSize: '15px'
  },
  sendSubmit: {
    background: `${theme.palette.primary.main}`,
    color: 'white',
    border: 'none',
    padding: '11px 30px',
    borderRadius: 5,
    fontWeight: 'bold',
    cursor: 'pointer',
    '&:hover': {
      background: 'red'
    }
  }
});

const Send = ({
  classes,
  activeCoin,
  wallet
}) => {
  const needsFloData = activeCoin.includes('flo');
  const cycleStates = ['AMOUNT', 'ADDRESS', 'FLODATA', 'SEND'];
  const [displayState, setDisplayState] = (0, _react.useState)(0);
  const [amount, setAmount] = (0, _react.useState)(0);
  const [address, setAddress] = (0, _react.useState)('');
  const [flodata, setFlodata] = (0, _react.useState)('');

  function handleAmountChange(e) {
    setAmount(e.target.value);
  }

  function handleAddressChange(e) {
    setAddress(e.target.value);
  }

  function handleFlodataChange(e) {
    setFlodata(e.target.value);
  }

  function handleSubmit() {
    setDisplayState(0);
    setAmount(0);
    setAddress('');
    setFlodata('');
    const options = {
      to: {
        [address]: amount
      },
      coin: activeCoin,
      floData: flodata,
      discover: false
    };
    window.alert('sending payment, please wait for confirmation before next transaction');
    wallet.sendPayment(options).then(txid => {
      window.alert(`Transaction successful: ${txid}`);
    }).catch(err => {
      window.alert(`Transaction failed: ${err}`);
    });
  }

  function handleOnKeyUp(e) {
    if (e.keyCode === 13) {
      handleCycleRight();
    }
  }

  function renderForm() {
    switch (cycleStates[displayState]) {
      case 'AMOUNT':
        return /*#__PURE__*/_react.default.createElement("input", {
          className: (0, _classnames.default)(classes.inputBase, classes.amountInput),
          type: "number",
          value: amount,
          onChange: handleAmountChange,
          onKeyUp: handleOnKeyUp
        });

      case 'ADDRESS':
        return /*#__PURE__*/_react.default.createElement("input", {
          className: (0, _classnames.default)(classes.inputBase, classes.addressInput),
          type: "text",
          value: address,
          placeholder: "oRpmeYvjgfhkSpPWGL8eP5ePupyop3hz9j",
          onChange: handleAddressChange,
          onKeyUp: handleOnKeyUp
        });

      case 'FLODATA':
        return /*#__PURE__*/_react.default.createElement("input", {
          className: (0, _classnames.default)(classes.inputBase, classes.flodataInput),
          type: "text",
          value: flodata,
          placeholder: "Your text here",
          onChange: handleFlodataChange,
          onKeyUp: handleOnKeyUp
        });

      case 'SEND':
        return /*#__PURE__*/_react.default.createElement("input", {
          type: "submit",
          value: "Send",
          onClick: handleSubmit,
          className: classes.sendSubmit
        });
    }
  }

  function handleCycleLeft() {
    if (displayState === 3 && !needsFloData) {
      setDisplayState(displayState => displayState - 2);
    } else {
      setDisplayState(displayState => displayState - 1);
    }
  }

  function handleCycleRight() {
    if (displayState === 1 && !needsFloData) {
      setDisplayState(displayState => displayState + 2);
    } else {
      setDisplayState(displayState => displayState + 1);
    }
  }

  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.root
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.sendHeader
  }, cycleStates[displayState]), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.sendBody
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.flexSpacer
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.cycleArrow
  }, displayState !== 0 ? /*#__PURE__*/_react.default.createElement(_icons.KeyboardArrowLeft, {
    onClick: handleCycleLeft
  }) : null), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.formContainer
  }, renderForm()), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.cycleArrow
  }, displayState !== 3 ? /*#__PURE__*/_react.default.createElement(_icons.KeyboardArrowRight, {
    onClick: handleCycleRight
  }) : null), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.flexSpacer
  })));
};

var _default = (0, _reactJss.default)(styles)(Send);

exports.default = _default;