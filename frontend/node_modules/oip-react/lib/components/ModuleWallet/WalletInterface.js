"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactJss = _interopRequireDefault(require("react-jss"));

var _index = require("./index");

var _WalletBody = _interopRequireDefault(require("./WalletBody"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const styles = theme => ({
  root: {
    display: 'flex',
    flexDirection: 'row',
    flex: '11'
  }
});

const ADDRESSES = 'Addresses';
const TRANSACTIONS = 'Transactions';
const SEND = 'Send';
const navigationLinks = [ADDRESSES, TRANSACTIONS, SEND];

const WalletInterface = ({
  classes,
  wallet,
  coins,
  handleSetActiveCoin,
  activeCoin,
  handleNavLinkClick,
  activeNavLink,
  state,
  refreshCoins,
  handleAddAddress
}) => {
  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.root
  }, /*#__PURE__*/_react.default.createElement(_index.Coins, {
    wallet: wallet,
    coins: coins,
    setActiveCoin: handleSetActiveCoin,
    activeCoin: activeCoin,
    state: state,
    refreshCoins: refreshCoins
  }), /*#__PURE__*/_react.default.createElement(_WalletBody.default, {
    onNavLinkClick: handleNavLinkClick,
    activeNavLink: activeNavLink,
    navItems: navigationLinks,
    wallet: wallet,
    activeCoin: activeCoin,
    coins: coins,
    state: state,
    handleAddAddress: handleAddAddress
  }));
};

var _default = (0, _reactJss.default)(styles)(WalletInterface);

exports.default = _default;