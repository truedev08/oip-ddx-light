"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactJss = _interopRequireDefault(require("react-jss"));

var _capDecimals = _interopRequireDefault(require("../../util/capDecimals"));

var _icons = require("@material-ui/icons");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const styles = theme => ({
  root: {
    display: 'flex',
    flex: '3',
    flexDirection: 'column',
    borderRight: '1px solid grey',
    overflowY: 'auto'
  },
  coinContainer: {
    display: 'flex',
    cursor: 'pointer',
    flex: '0 0 80px',
    justifyContent: 'space-around',
    alignItems: 'flex-start',
    flexDirection: 'column',
    padding: 10,
    borderBottom: '1px solid lightgrey',
    '& #coinTitle': {
      fontWeight: 'bold',
      marginBottom: '2px',
      width: '100%',
      justifyContent: 'space-between',
      color: 'grey',
      '& #refresh-button': {
        '&:hover': {
          color: 'red',
          cursor: 'default'
        },
        '&:active': {
          color: `${theme.palette.primary.main}`,
          cursor: 'pointer'
        }
      }
    },
    '& #actionRow': {
      justifyContent: 'flex-end',
      width: '100%'
    }
  },
  balanceContainer: {
    display: 'flex',
    flexDirection: 'column',
    flex: '1'
  },
  coinInfoRow: {
    display: 'flex',
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center'
  }
});

const Coins = ({
  classes,
  coins,
  wallet,
  setActiveCoin,
  activeCoin,
  state,
  refreshCoins,
  theme
}) => {
  const activeCoinStyle = coin => {
    if (coin === activeCoin) {
      return {
        borderLeft: `2px solid ${theme.palette.primary.main}`
      };
    }
  };

  function handleRefresh(e, coin) {
    e.stopPropagation();
    refreshCoins(coin);
  }

  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.root
  }, coins.map((coin, i) => {
    const balance = state[coin].balance;
    const xrRate = state[coin].exchangeRate;
    const COIN = wallet.getCoin(coin);
    return /*#__PURE__*/_react.default.createElement("div", {
      key: i,
      className: classes.coinContainer,
      onClick: () => setActiveCoin(coin),
      style: activeCoinStyle(coin)
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: classes.coinInfoRow,
      id: "coinTitle"
    }, COIN.coin.displayName, " wallet", /*#__PURE__*/_react.default.createElement("span", {
      id: "refresh-button",
      onClick: e => handleRefresh(e, coin)
    }, /*#__PURE__*/_react.default.createElement(_icons.Refresh, null))), /*#__PURE__*/_react.default.createElement("div", {
      className: classes.balanceContainer
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: classes.coinInfoRow
    }, COIN.coin.ticker, ": ", balance), coin.includes('testnet') ? null : /*#__PURE__*/_react.default.createElement("div", {
      className: classes.coinInfoRow
    }, "USD: $", (0, _capDecimals.default)(balance * xrRate, 2))));
  }));
};

var _default = (0, _reactJss.default)(styles, {
  injectTheme: true
})(Coins);

exports.default = _default;